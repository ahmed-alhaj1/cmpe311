
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002de  00800100  000015d0  00001664  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000015d0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000086  008003de  008003de  00001942  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001942  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000019a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  000019e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000019e0  00000000  00000000  00001af0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000dd5  00000000  00000000  000034d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a6a  00000000  00000000  000042a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000368  00000000  00000000  00004d10  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007ee  00000000  00000000  00005078  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f53  00000000  00000000  00005866  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  000067b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__ctors_end>
       4:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
       8:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
       c:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
      10:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
      14:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
      18:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
      1c:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
      20:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
      24:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
      28:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
      2c:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
      30:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
      34:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
      38:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
      3c:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
      40:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
      44:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
      48:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
      4c:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
      50:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
      54:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>
      58:	0c 94 9c 00 	jmp	0x138	; 0x138 <__bad_interrupt>

0000005c <__trampolines_end>:
      5c:	63 64       	ori	r22, 0x43	; 67
      5e:	69 6e       	ori	r22, 0xE9	; 233
      60:	6f 70       	andi	r22, 0x0F	; 15
      62:	73 75       	andi	r23, 0x53	; 83
      64:	78 58       	subi	r23, 0x88	; 136
      66:	5b 00       	.word	0x005b	; ????

00000068 <ply_menu>:
      68:	2d 2d 2d 2d 2d 20 50 6c 61 79 20 62 79 20 4d 45     ----- Play by ME
      78:	4e 55 20 2d 2d 2d 2d 2d 0a 31 2e 50 6c 61 79 20     NU -----.1.Play 
      88:	62 79 20 4e 75 6d 62 65 72 0a 32 2e 53 65 61 72     by Number.2.Sear
      98:	63 68 20 62 79 20 54 69 74 6c 65 0a 23 2e 50 6c     ch by Title.#.Pl
      a8:	65 61 73 65 20 45 6e 74 65 72 20 61 20 43 68 6f     ease Enter a Cho
      b8:	69 63 65 3a 0a 00                                   ice:..

000000be <menu>:
      be:	2d 2d 2d 2d 2d 20 4d 41 49 4e 20 4d 45 4e 55 20     ----- MAIN MENU 
      ce:	2d 2d 2d 2d 2d 0a 31 2e 4c 69 73 74 20 53 68 6f     -----.1.List Sho
      de:	77 73 0a 32 2e 50 6c 61 79 0a 33 2e 43 72 65 61     ws.2.Play.3.Crea
      ee:	74 65 0a 20 43 68 6f 69 63 65 3a 20 30 0a 00 00     te. Choice: 0...

000000fe <__ctors_end>:
      fe:	11 24       	eor	r1, r1
     100:	1f be       	out	0x3f, r1	; 63
     102:	cf ef       	ldi	r28, 0xFF	; 255
     104:	d4 e0       	ldi	r29, 0x04	; 4
     106:	de bf       	out	0x3e, r29	; 62
     108:	cd bf       	out	0x3d, r28	; 61

0000010a <__do_copy_data>:
     10a:	13 e0       	ldi	r17, 0x03	; 3
     10c:	a0 e0       	ldi	r26, 0x00	; 0
     10e:	b1 e0       	ldi	r27, 0x01	; 1
     110:	e0 ed       	ldi	r30, 0xD0	; 208
     112:	f5 e1       	ldi	r31, 0x15	; 21
     114:	02 c0       	rjmp	.+4      	; 0x11a <__do_copy_data+0x10>
     116:	05 90       	lpm	r0, Z+
     118:	0d 92       	st	X+, r0
     11a:	ae 3d       	cpi	r26, 0xDE	; 222
     11c:	b1 07       	cpc	r27, r17
     11e:	d9 f7       	brne	.-10     	; 0x116 <__do_copy_data+0xc>

00000120 <__do_clear_bss>:
     120:	24 e0       	ldi	r18, 0x04	; 4
     122:	ae ed       	ldi	r26, 0xDE	; 222
     124:	b3 e0       	ldi	r27, 0x03	; 3
     126:	01 c0       	rjmp	.+2      	; 0x12a <.do_clear_bss_start>

00000128 <.do_clear_bss_loop>:
     128:	1d 92       	st	X+, r1

0000012a <.do_clear_bss_start>:
     12a:	a4 36       	cpi	r26, 0x64	; 100
     12c:	b2 07       	cpc	r27, r18
     12e:	e1 f7       	brne	.-8      	; 0x128 <.do_clear_bss_loop>
     130:	0e 94 7e 03 	call	0x6fc	; 0x6fc <main>
     134:	0c 94 e6 0a 	jmp	0x15cc	; 0x15cc <_exit>

00000138 <__bad_interrupt>:
     138:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000013c <add_silence_char>:
//#############################################//

char * add_silence_char(const char arr[]){
	char *arr2 = (char*) malloc((strlen(arr)+2) * sizeof(char)+1);
	arr2 = NULL;
	strcat(arr2, arr);
     13c:	bc 01       	movw	r22, r24
     13e:	80 e0       	ldi	r24, 0x00	; 0
     140:	90 e0       	ldi	r25, 0x00	; 0
     142:	0e 94 07 04 	call	0x80e	; 0x80e <strcat>
	return strcat(arr2, "R0");
     146:	e0 e0       	ldi	r30, 0x00	; 0
     148:	f0 e0       	ldi	r31, 0x00	; 0
     14a:	01 90       	ld	r0, Z+
     14c:	00 20       	and	r0, r0
     14e:	e9 f7       	brne	.-6      	; 0x14a <add_silence_char+0xe>
     150:	31 97       	sbiw	r30, 0x01	; 1
     152:	82 e5       	ldi	r24, 0x52	; 82
     154:	90 e3       	ldi	r25, 0x30	; 48
     156:	91 83       	std	Z+1, r25	; 0x01
     158:	80 83       	st	Z, r24
     15a:	12 82       	std	Z+2, r1	; 0x02
}
     15c:	80 e0       	ldi	r24, 0x00	; 0
     15e:	90 e0       	ldi	r25, 0x00	; 0
     160:	08 95       	ret

00000162 <DisplayMenu>:
		
		printf("%s \n", s);
	}
	
	
}
     162:	cf 93       	push	r28
     164:	df 93       	push	r29
     166:	00 d0       	rcall	.+0      	; 0x168 <DisplayMenu+0x6>
     168:	cd b7       	in	r28, 0x3d	; 61
     16a:	de b7       	in	r29, 0x3e	; 62
     16c:	9f 93       	push	r25
     16e:	8f 93       	push	r24
     170:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <printf_P>
     174:	40 91 5e 04 	lds	r20, 0x045E	; 0x80045e <__iob>
     178:	50 91 5f 04 	lds	r21, 0x045F	; 0x80045f <__iob+0x1>
     17c:	60 e8       	ldi	r22, 0x80	; 128
     17e:	70 e0       	ldi	r23, 0x00	; 0
     180:	8e ed       	ldi	r24, 0xDE	; 222
     182:	93 e0       	ldi	r25, 0x03	; 3
     184:	0e 94 39 04 	call	0x872	; 0x872 <fgets>
     188:	0f 90       	pop	r0
     18a:	0f 90       	pop	r0
     18c:	89 2b       	or	r24, r25
     18e:	a1 f0       	breq	.+40     	; 0x1b8 <DisplayMenu+0x56>
     190:	ce 01       	movw	r24, r28
     192:	01 96       	adiw	r24, 0x01	; 1
     194:	9f 93       	push	r25
     196:	8f 93       	push	r24
     198:	8e e0       	ldi	r24, 0x0E	; 14
     19a:	93 e0       	ldi	r25, 0x03	; 3
     19c:	9f 93       	push	r25
     19e:	8f 93       	push	r24
     1a0:	8e ed       	ldi	r24, 0xDE	; 222
     1a2:	93 e0       	ldi	r25, 0x03	; 3
     1a4:	9f 93       	push	r25
     1a6:	8f 93       	push	r24
     1a8:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <sscanf_P>
     1ac:	0f 90       	pop	r0
     1ae:	0f 90       	pop	r0
     1b0:	0f 90       	pop	r0
     1b2:	0f 90       	pop	r0
     1b4:	0f 90       	pop	r0
     1b6:	0f 90       	pop	r0
     1b8:	8a 81       	ldd	r24, Y+2	; 0x02
     1ba:	8f 93       	push	r24
     1bc:	89 81       	ldd	r24, Y+1	; 0x01
     1be:	8f 93       	push	r24
     1c0:	81 e1       	ldi	r24, 0x11	; 17
     1c2:	93 e0       	ldi	r25, 0x03	; 3
     1c4:	9f 93       	push	r25
     1c6:	8f 93       	push	r24
     1c8:	0e 94 65 04 	call	0x8ca	; 0x8ca <printf>
     1cc:	8e ed       	ldi	r24, 0xDE	; 222
     1ce:	93 e0       	ldi	r25, 0x03	; 3
     1d0:	9f 93       	push	r25
     1d2:	8f 93       	push	r24
     1d4:	82 e2       	ldi	r24, 0x22	; 34
     1d6:	93 e0       	ldi	r25, 0x03	; 3
     1d8:	9f 93       	push	r25
     1da:	8f 93       	push	r24
     1dc:	0e 94 65 04 	call	0x8ca	; 0x8ca <printf>
     1e0:	0f b6       	in	r0, 0x3f	; 63
     1e2:	f8 94       	cli
     1e4:	de bf       	out	0x3e, r29	; 62
     1e6:	0f be       	out	0x3f, r0	; 63
     1e8:	cd bf       	out	0x3d, r28	; 61
     1ea:	89 81       	ldd	r24, Y+1	; 0x01
     1ec:	0f 90       	pop	r0
     1ee:	0f 90       	pop	r0
     1f0:	df 91       	pop	r29
     1f2:	cf 91       	pop	r28
     1f4:	08 95       	ret

000001f6 <song_menu>:

void song_menu(char *song_titles){
     1f6:	af 92       	push	r10
     1f8:	bf 92       	push	r11
     1fa:	cf 92       	push	r12
     1fc:	df 92       	push	r13
     1fe:	ef 92       	push	r14
     200:	ff 92       	push	r15
     202:	0f 93       	push	r16
     204:	1f 93       	push	r17
     206:	cf 93       	push	r28
     208:	df 93       	push	r29
     20a:	cd b7       	in	r28, 0x3d	; 61
     20c:	de b7       	in	r29, 0x3e	; 62
     20e:	29 97       	sbiw	r28, 0x09	; 9
     210:	0f b6       	in	r0, 0x3f	; 63
     212:	f8 94       	cli
     214:	de bf       	out	0x3e, r29	; 62
     216:	0f be       	out	0x3f, r0	; 63
     218:	cd bf       	out	0x3d, r28	; 61
     21a:	08 2f       	mov	r16, r24
     21c:	19 2f       	mov	r17, r25
	const char title[] = "title : ";
     21e:	89 e0       	ldi	r24, 0x09	; 9
     220:	ee e4       	ldi	r30, 0x4E	; 78
     222:	f3 e0       	ldi	r31, 0x03	; 3
     224:	de 01       	movw	r26, r28
     226:	11 96       	adiw	r26, 0x01	; 1
     228:	01 90       	ld	r0, Z+
     22a:	0d 92       	st	X+, r0
     22c:	8a 95       	dec	r24
     22e:	e1 f7       	brne	.-8      	; 0x228 <song_menu+0x32>
	//const char index_search[] = "please enter index number \n";
	//const char index_str [] = " index : \n";
	//const char note_msg [] = "song notes: \n";
	//const char song_stored_msg[] = " song add successfully";
	//const char database[] = "----data base------";
	printf(" ----data base------\n" );
     230:	8e e2       	ldi	r24, 0x2E	; 46
     232:	93 e0       	ldi	r25, 0x03	; 3
     234:	0e 94 a1 04 	call	0x942	; 0x942 <puts>
     238:	e0 2e       	mov	r14, r16
     23a:	f1 2e       	mov	r15, r17
	  for (int i = 0; i < NUMBER_OF_SONGS; i++) {
     23c:	00 e0       	ldi	r16, 0x00	; 0
     23e:	10 e0       	ldi	r17, 0x00	; 0
		  printf("%d: %s %s\n", i, title, song_titles[i]);
     240:	ce 01       	movw	r24, r28
     242:	01 96       	adiw	r24, 0x01	; 1
     244:	5c 01       	movw	r10, r24
     246:	0f 2e       	mov	r0, r31
     248:	f3 e4       	ldi	r31, 0x43	; 67
     24a:	cf 2e       	mov	r12, r31
     24c:	f3 e0       	ldi	r31, 0x03	; 3
     24e:	df 2e       	mov	r13, r31
     250:	f0 2d       	mov	r31, r0
     252:	f7 01       	movw	r30, r14
     254:	81 91       	ld	r24, Z+
     256:	7f 01       	movw	r14, r30
     258:	1f 92       	push	r1
     25a:	8f 93       	push	r24
     25c:	bf 92       	push	r11
     25e:	af 92       	push	r10
     260:	1f 93       	push	r17
     262:	0f 93       	push	r16
     264:	df 92       	push	r13
     266:	cf 92       	push	r12
     268:	0e 94 65 04 	call	0x8ca	; 0x8ca <printf>
	//const char index_str [] = " index : \n";
	//const char note_msg [] = "song notes: \n";
	//const char song_stored_msg[] = " song add successfully";
	//const char database[] = "----data base------";
	printf(" ----data base------\n" );
	  for (int i = 0; i < NUMBER_OF_SONGS; i++) {
     26c:	0f 5f       	subi	r16, 0xFF	; 255
     26e:	1f 4f       	sbci	r17, 0xFF	; 255
     270:	0f b6       	in	r0, 0x3f	; 63
     272:	f8 94       	cli
     274:	de bf       	out	0x3e, r29	; 62
     276:	0f be       	out	0x3f, r0	; 63
     278:	cd bf       	out	0x3d, r28	; 61
     27a:	04 30       	cpi	r16, 0x04	; 4
     27c:	11 05       	cpc	r17, r1
     27e:	49 f7       	brne	.-46     	; 0x252 <song_menu+0x5c>
		  printf("%d: %s %s\n", i, title, song_titles[i]);
	  }
		
	
}
     280:	29 96       	adiw	r28, 0x09	; 9
     282:	0f b6       	in	r0, 0x3f	; 63
     284:	f8 94       	cli
     286:	de bf       	out	0x3e, r29	; 62
     288:	0f be       	out	0x3f, r0	; 63
     28a:	cd bf       	out	0x3d, r28	; 61
     28c:	df 91       	pop	r29
     28e:	cf 91       	pop	r28
     290:	1f 91       	pop	r17
     292:	0f 91       	pop	r16
     294:	ff 90       	pop	r15
     296:	ef 90       	pop	r14
     298:	df 90       	pop	r13
     29a:	cf 90       	pop	r12
     29c:	bf 90       	pop	r11
     29e:	af 90       	pop	r10
     2a0:	08 95       	ret

000002a2 <make_menu>:
	
	//##################################################
	//
	//##################################################
	
uint8_t make_menu(char *song_titles){
     2a2:	cf 92       	push	r12
     2a4:	df 92       	push	r13
     2a6:	ef 92       	push	r14
     2a8:	ff 92       	push	r15
     2aa:	0f 93       	push	r16
     2ac:	1f 93       	push	r17
     2ae:	cf 93       	push	r28
     2b0:	df 93       	push	r29
     2b2:	cd b7       	in	r28, 0x3d	; 61
     2b4:	de b7       	in	r29, 0x3e	; 62
     2b6:	c6 5e       	subi	r28, 0xE6	; 230
     2b8:	d1 09       	sbc	r29, r1
     2ba:	0f b6       	in	r0, 0x3f	; 63
     2bc:	f8 94       	cli
     2be:	de bf       	out	0x3e, r29	; 62
     2c0:	0f be       	out	0x3f, r0	; 63
     2c2:	cd bf       	out	0x3d, r28	; 61
     2c4:	7c 01       	movw	r14, r24
	printf("%s", song_stored_msg);	
	
		
		
	return new_song_ix;
	}
     2c6:	cd b6       	in	r12, 0x3d	; 61
     2c8:	de b6       	in	r13, 0x3e	; 62
	//##################################################
	//
	//##################################################
	
uint8_t make_menu(char *song_titles){
	const char title_search[] = "please enter title\n";
     2ca:	84 e1       	ldi	r24, 0x14	; 20
     2cc:	e6 e6       	ldi	r30, 0x66	; 102
     2ce:	f3 e0       	ldi	r31, 0x03	; 3
     2d0:	de 01       	movw	r26, r28
     2d2:	11 96       	adiw	r26, 0x01	; 1
     2d4:	01 90       	ld	r0, Z+
     2d6:	0d 92       	st	X+, r0
     2d8:	8a 95       	dec	r24
     2da:	e1 f7       	brne	.-8      	; 0x2d4 <make_menu+0x32>
	const char index_search[] = "please enter index number \n";
	const char index_str [] = " index : \n";
     2dc:	8b e0       	ldi	r24, 0x0B	; 11
     2de:	ea e7       	ldi	r30, 0x7A	; 122
     2e0:	f3 e0       	ldi	r31, 0x03	; 3
     2e2:	de 01       	movw	r26, r28
     2e4:	55 96       	adiw	r26, 0x15	; 21
     2e6:	01 90       	ld	r0, Z+
     2e8:	0d 92       	st	X+, r0
     2ea:	8a 95       	dec	r24
     2ec:	e1 f7       	brne	.-8      	; 0x2e6 <make_menu+0x44>
	const char note_msg [] = "song notes: \n";
     2ee:	8e e0       	ldi	r24, 0x0E	; 14
     2f0:	e5 e8       	ldi	r30, 0x85	; 133
     2f2:	f3 e0       	ldi	r31, 0x03	; 3
     2f4:	de 01       	movw	r26, r28
     2f6:	90 96       	adiw	r26, 0x20	; 32
     2f8:	01 90       	ld	r0, Z+
     2fa:	0d 92       	st	X+, r0
     2fc:	8a 95       	dec	r24
     2fe:	e1 f7       	brne	.-8      	; 0x2f8 <make_menu+0x56>
	const char song_stored_msg[] = " song add successfully";
     300:	87 e1       	ldi	r24, 0x17	; 23
     302:	e3 e9       	ldi	r30, 0x93	; 147
     304:	f3 e0       	ldi	r31, 0x03	; 3
     306:	de 01       	movw	r26, r28
     308:	9e 96       	adiw	r26, 0x2e	; 46
     30a:	01 90       	ld	r0, Z+
     30c:	0d 92       	st	X+, r0
     30e:	8a 95       	dec	r24
     310:	e1 f7       	brne	.-8      	; 0x30a <make_menu+0x68>
	
	
	int new_song_ix;
	char * song;
	
	printf("%s\n", title_search);
     312:	ce 01       	movw	r24, r28
     314:	01 96       	adiw	r24, 0x01	; 1
     316:	0e 94 a1 04 	call	0x942	; 0x942 <puts>
	if (fgets(user_line,MAX_PASS_LENGTH,stdin)!=NULL) {
     31a:	40 91 5e 04 	lds	r20, 0x045E	; 0x80045e <__iob>
     31e:	50 91 5f 04 	lds	r21, 0x045F	; 0x80045f <__iob+0x1>
     322:	60 e8       	ldi	r22, 0x80	; 128
     324:	70 e0       	ldi	r23, 0x00	; 0
     326:	8e ed       	ldi	r24, 0xDE	; 222
     328:	93 e0       	ldi	r25, 0x03	; 3
     32a:	0e 94 39 04 	call	0x872	; 0x872 <fgets>
     32e:	89 2b       	or	r24, r25
     330:	a9 f0       	breq	.+42     	; 0x35c <make_menu+0xba>
		sscanf(user_line,"%s", song_title);
     332:	ce 01       	movw	r24, r28
     334:	8b 53       	subi	r24, 0x3B	; 59
     336:	9f 4f       	sbci	r25, 0xFF	; 255
     338:	9f 93       	push	r25
     33a:	8f 93       	push	r24
     33c:	87 e5       	ldi	r24, 0x57	; 87
     33e:	93 e0       	ldi	r25, 0x03	; 3
     340:	9f 93       	push	r25
     342:	8f 93       	push	r24
     344:	8e ed       	ldi	r24, 0xDE	; 222
     346:	93 e0       	ldi	r25, 0x03	; 3
     348:	9f 93       	push	r25
     34a:	8f 93       	push	r24
     34c:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <sscanf>
     350:	0f 90       	pop	r0
     352:	0f 90       	pop	r0
     354:	0f 90       	pop	r0
     356:	0f 90       	pop	r0
     358:	0f 90       	pop	r0
     35a:	0f 90       	pop	r0
	}
	
	printf("%s ---> %s ", song_title, note_msg);
     35c:	ce 01       	movw	r24, r28
     35e:	80 96       	adiw	r24, 0x20	; 32
     360:	9f 93       	push	r25
     362:	8f 93       	push	r24
     364:	8b 55       	subi	r24, 0x5B	; 91
     366:	9f 4f       	sbci	r25, 0xFF	; 255
     368:	9f 93       	push	r25
     36a:	8f 93       	push	r24
     36c:	8a e5       	ldi	r24, 0x5A	; 90
     36e:	93 e0       	ldi	r25, 0x03	; 3
     370:	9f 93       	push	r25
     372:	8f 93       	push	r24
     374:	0e 94 65 04 	call	0x8ca	; 0x8ca <printf>
	if (fgets(user_line,MAX_PASS_LENGTH,stdin)!=NULL) {
     378:	40 91 5e 04 	lds	r20, 0x045E	; 0x80045e <__iob>
     37c:	50 91 5f 04 	lds	r21, 0x045F	; 0x80045f <__iob+0x1>
     380:	60 e8       	ldi	r22, 0x80	; 128
     382:	70 e0       	ldi	r23, 0x00	; 0
     384:	8e ed       	ldi	r24, 0xDE	; 222
     386:	93 e0       	ldi	r25, 0x03	; 3
     388:	0e 94 39 04 	call	0x872	; 0x872 <fgets>
     38c:	0f 90       	pop	r0
     38e:	0f 90       	pop	r0
     390:	0f 90       	pop	r0
     392:	0f 90       	pop	r0
     394:	0f 90       	pop	r0
     396:	0f 90       	pop	r0
     398:	89 2b       	or	r24, r25
     39a:	a9 f0       	breq	.+42     	; 0x3c6 <make_menu+0x124>
		sscanf(user_line,"%s", song_ascii);
     39c:	ce 01       	movw	r24, r28
     39e:	8b 5b       	subi	r24, 0xBB	; 187
     3a0:	9f 4f       	sbci	r25, 0xFF	; 255
     3a2:	9f 93       	push	r25
     3a4:	8f 93       	push	r24
     3a6:	87 e5       	ldi	r24, 0x57	; 87
     3a8:	93 e0       	ldi	r25, 0x03	; 3
     3aa:	9f 93       	push	r25
     3ac:	8f 93       	push	r24
     3ae:	8e ed       	ldi	r24, 0xDE	; 222
     3b0:	93 e0       	ldi	r25, 0x03	; 3
     3b2:	9f 93       	push	r25
     3b4:	8f 93       	push	r24
     3b6:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <sscanf>
     3ba:	0f 90       	pop	r0
     3bc:	0f 90       	pop	r0
     3be:	0f 90       	pop	r0
     3c0:	0f 90       	pop	r0
     3c2:	0f 90       	pop	r0
     3c4:	0f 90       	pop	r0
	}
	
	printf('\n');
     3c6:	1f 92       	push	r1
     3c8:	8a e0       	ldi	r24, 0x0A	; 10
     3ca:	8f 93       	push	r24
     3cc:	0e 94 65 04 	call	0x8ca	; 0x8ca <printf>
	
	song = add_silence_char(song_ascii);
     3d0:	ce 01       	movw	r24, r28
     3d2:	8b 5b       	subi	r24, 0xBB	; 187
     3d4:	9f 4f       	sbci	r25, 0xFF	; 255
     3d6:	0e 94 9e 00 	call	0x13c	; 0x13c <add_silence_char>
	
	uint8_t *packed_song[strlen(song)/2];
     3da:	fc 01       	movw	r30, r24
     3dc:	01 90       	ld	r0, Z+
     3de:	00 20       	and	r0, r0
     3e0:	e9 f7       	brne	.-6      	; 0x3dc <make_menu+0x13a>
     3e2:	31 97       	sbiw	r30, 0x01	; 1
     3e4:	af 01       	movw	r20, r30
     3e6:	48 1b       	sub	r20, r24
     3e8:	59 0b       	sbc	r21, r25
     3ea:	4e 7f       	andi	r20, 0xFE	; 254
     3ec:	0f 90       	pop	r0
     3ee:	0f 90       	pop	r0
     3f0:	8d b7       	in	r24, 0x3d	; 61
     3f2:	9e b7       	in	r25, 0x3e	; 62
     3f4:	84 1b       	sub	r24, r20
     3f6:	95 0b       	sbc	r25, r21
     3f8:	0f b6       	in	r0, 0x3f	; 63
     3fa:	f8 94       	cli
     3fc:	9e bf       	out	0x3e, r25	; 62
     3fe:	0f be       	out	0x3f, r0	; 63
     400:	8d bf       	out	0x3d, r24	; 61
     402:	0d b7       	in	r16, 0x3d	; 61
     404:	1e b7       	in	r17, 0x3e	; 62
     406:	0f 5f       	subi	r16, 0xFF	; 255
     408:	1f 4f       	sbci	r17, 0xFF	; 255
	memset(packed_song, 0, sizeof(packed_song));
     40a:	60 e0       	ldi	r22, 0x00	; 0
     40c:	70 e0       	ldi	r23, 0x00	; 0
     40e:	c8 01       	movw	r24, r16
     410:	0e 94 ed 03 	call	0x7da	; 0x7da <memset>
	
	//StoreSong(packed_song, song);
	
	printf("%s\n", index_str);
     414:	ce 01       	movw	r24, r28
     416:	45 96       	adiw	r24, 0x15	; 21
     418:	0e 94 a1 04 	call	0x942	; 0x942 <puts>
	if(fgets(user_line, NUMBER_OF_SONGS-1, stdin) != NULL){
     41c:	40 91 5e 04 	lds	r20, 0x045E	; 0x80045e <__iob>
     420:	50 91 5f 04 	lds	r21, 0x045F	; 0x80045f <__iob+0x1>
     424:	63 e0       	ldi	r22, 0x03	; 3
     426:	70 e0       	ldi	r23, 0x00	; 0
     428:	8e ed       	ldi	r24, 0xDE	; 222
     42a:	93 e0       	ldi	r25, 0x03	; 3
     42c:	0e 94 39 04 	call	0x872	; 0x872 <fgets>
     430:	89 2b       	or	r24, r25
     432:	a9 f0       	breq	.+42     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
		sscanf(user_line, "%d",  &new_song_ix);
     434:	ce 01       	movw	r24, r28
     436:	8b 51       	subi	r24, 0x1B	; 27
     438:	9f 4f       	sbci	r25, 0xFF	; 255
     43a:	9f 93       	push	r25
     43c:	8f 93       	push	r24
     43e:	8e e0       	ldi	r24, 0x0E	; 14
     440:	93 e0       	ldi	r25, 0x03	; 3
     442:	9f 93       	push	r25
     444:	8f 93       	push	r24
     446:	8e ed       	ldi	r24, 0xDE	; 222
     448:	93 e0       	ldi	r25, 0x03	; 3
     44a:	9f 93       	push	r25
     44c:	8f 93       	push	r24
     44e:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <sscanf>
     452:	0f 90       	pop	r0
     454:	0f 90       	pop	r0
     456:	0f 90       	pop	r0
     458:	0f 90       	pop	r0
     45a:	0f 90       	pop	r0
     45c:	0f 90       	pop	r0
		
	}
	
	memcpy(song_titles[new_song_ix], song_title, SONG_LENGTH);
     45e:	cb 51       	subi	r28, 0x1B	; 27
     460:	df 4f       	sbci	r29, 0xFF	; 255
     462:	e8 81       	ld	r30, Y
     464:	f9 81       	ldd	r31, Y+1	; 0x01
     466:	c5 5e       	subi	r28, 0xE5	; 229
     468:	d0 40       	sbci	r29, 0x00	; 0
     46a:	ee 0d       	add	r30, r14
     46c:	ff 1d       	adc	r31, r15
     46e:	a0 81       	ld	r26, Z
     470:	b0 e0       	ldi	r27, 0x00	; 0
     472:	80 e4       	ldi	r24, 0x40	; 64
     474:	fe 01       	movw	r30, r28
     476:	eb 53       	subi	r30, 0x3B	; 59
     478:	ff 4f       	sbci	r31, 0xFF	; 255
     47a:	01 90       	ld	r0, Z+
     47c:	0d 92       	st	X+, r0
     47e:	8a 95       	dec	r24
     480:	e1 f7       	brne	.-8      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
	memcpy(song_titles[new_song_ix], packed_song, SONG_LENGTH);
     482:	cb 51       	subi	r28, 0x1B	; 27
     484:	df 4f       	sbci	r29, 0xFF	; 255
     486:	88 81       	ld	r24, Y
     488:	99 81       	ldd	r25, Y+1	; 0x01
     48a:	c5 5e       	subi	r28, 0xE5	; 229
     48c:	d0 40       	sbci	r29, 0x00	; 0
     48e:	f7 01       	movw	r30, r14
     490:	e8 0f       	add	r30, r24
     492:	f9 1f       	adc	r31, r25
     494:	a0 81       	ld	r26, Z
     496:	b0 e0       	ldi	r27, 0x00	; 0
     498:	80 e4       	ldi	r24, 0x40	; 64
     49a:	f8 01       	movw	r30, r16
     49c:	01 90       	ld	r0, Z+
     49e:	0d 92       	st	X+, r0
     4a0:	8a 95       	dec	r24
     4a2:	e1 f7       	brne	.-8      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
	
	printf("%s", song_stored_msg);	
     4a4:	ce 01       	movw	r24, r28
     4a6:	8e 96       	adiw	r24, 0x2e	; 46
     4a8:	9f 93       	push	r25
     4aa:	8f 93       	push	r24
     4ac:	87 e5       	ldi	r24, 0x57	; 87
     4ae:	93 e0       	ldi	r25, 0x03	; 3
     4b0:	9f 93       	push	r25
     4b2:	8f 93       	push	r24
     4b4:	0e 94 65 04 	call	0x8ca	; 0x8ca <printf>
	
		
		
	return new_song_ix;
     4b8:	0f 90       	pop	r0
     4ba:	0f 90       	pop	r0
     4bc:	0f 90       	pop	r0
     4be:	0f 90       	pop	r0
	}
     4c0:	cb 51       	subi	r28, 0x1B	; 27
     4c2:	df 4f       	sbci	r29, 0xFF	; 255
     4c4:	88 81       	ld	r24, Y
     4c6:	c5 5e       	subi	r28, 0xE5	; 229
     4c8:	d0 40       	sbci	r29, 0x00	; 0
     4ca:	0f b6       	in	r0, 0x3f	; 63
     4cc:	f8 94       	cli
     4ce:	de be       	out	0x3e, r13	; 62
     4d0:	0f be       	out	0x3f, r0	; 63
     4d2:	cd be       	out	0x3d, r12	; 61
     4d4:	ca 51       	subi	r28, 0x1A	; 26
     4d6:	df 4f       	sbci	r29, 0xFF	; 255
     4d8:	0f b6       	in	r0, 0x3f	; 63
     4da:	f8 94       	cli
     4dc:	de bf       	out	0x3e, r29	; 62
     4de:	0f be       	out	0x3f, r0	; 63
     4e0:	cd bf       	out	0x3d, r28	; 61
     4e2:	df 91       	pop	r29
     4e4:	cf 91       	pop	r28
     4e6:	1f 91       	pop	r17
     4e8:	0f 91       	pop	r16
     4ea:	ff 90       	pop	r15
     4ec:	ef 90       	pop	r14
     4ee:	df 90       	pop	r13
     4f0:	cf 90       	pop	r12
     4f2:	08 95       	ret

000004f4 <match_score>:
	
	int match_score(const char count_query_string[], const char database[]) {
     4f4:	ef 92       	push	r14
     4f6:	ff 92       	push	r15
     4f8:	0f 93       	push	r16
     4fa:	1f 93       	push	r17
     4fc:	cf 93       	push	r28
     4fe:	df 93       	push	r29
     500:	00 d0       	rcall	.+0      	; 0x502 <__stack+0x3>
     502:	00 d0       	rcall	.+0      	; 0x504 <__stack+0x5>
     504:	cd b7       	in	r28, 0x3d	; 61
     506:	de b7       	in	r29, 0x3e	; 62

		const char *count_query_ptr = count_query_string;
     508:	9a 83       	std	Y+2, r25	; 0x02
     50a:	89 83       	std	Y+1, r24	; 0x01
		const char *database_ptr = database;
     50c:	7c 83       	std	Y+4, r23	; 0x04
     50e:	6b 83       	std	Y+3, r22	; 0x03
		char *token_user, *token_stored;
		int total_matches = 0;
     510:	e1 2c       	mov	r14, r1
     512:	f1 2c       	mov	r15, r1

		// loop until the string does not contain any whitespace (' ') chars
		while ((token_stored = strtok_r(database_ptr, " ", &database_ptr))) {
     514:	13 c0       	rjmp	.+38     	; 0x53c <__stack+0x3d>

			// loop until the string does not contain any whitespace (' ') chars
			while ((token_user = strtok_r(count_query_ptr, " ", &count_query_ptr))) {

				// case-insensitively compare the two tokens
				if (!strcasecmp(token_user, token_stored)) {
     516:	b8 01       	movw	r22, r16
     518:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <strcasecmp>
     51c:	89 2b       	or	r24, r25
     51e:	19 f4       	brne	.+6      	; 0x526 <__stack+0x27>
					total_matches++;
     520:	8f ef       	ldi	r24, 0xFF	; 255
     522:	e8 1a       	sub	r14, r24
     524:	f8 0a       	sbc	r15, r24

		// loop until the string does not contain any whitespace (' ') chars
		while ((token_stored = strtok_r(database_ptr, " ", &database_ptr))) {

			// loop until the string does not contain any whitespace (' ') chars
			while ((token_user = strtok_r(count_query_ptr, " ", &count_query_ptr))) {
     526:	ae 01       	movw	r20, r28
     528:	4f 5f       	subi	r20, 0xFF	; 255
     52a:	5f 4f       	sbci	r21, 0xFF	; 255
     52c:	62 ec       	ldi	r22, 0xC2	; 194
     52e:	73 e0       	ldi	r23, 0x03	; 3
     530:	89 81       	ldd	r24, Y+1	; 0x01
     532:	9a 81       	ldd	r25, Y+2	; 0x02
     534:	0e 94 12 04 	call	0x824	; 0x824 <strtok_r>
     538:	00 97       	sbiw	r24, 0x00	; 0
     53a:	69 f7       	brne	.-38     	; 0x516 <__stack+0x17>
		const char *database_ptr = database;
		char *token_user, *token_stored;
		int total_matches = 0;

		// loop until the string does not contain any whitespace (' ') chars
		while ((token_stored = strtok_r(database_ptr, " ", &database_ptr))) {
     53c:	ae 01       	movw	r20, r28
     53e:	4d 5f       	subi	r20, 0xFD	; 253
     540:	5f 4f       	sbci	r21, 0xFF	; 255
     542:	62 ec       	ldi	r22, 0xC2	; 194
     544:	73 e0       	ldi	r23, 0x03	; 3
     546:	8b 81       	ldd	r24, Y+3	; 0x03
     548:	9c 81       	ldd	r25, Y+4	; 0x04
     54a:	0e 94 12 04 	call	0x824	; 0x824 <strtok_r>
     54e:	8c 01       	movw	r16, r24
     550:	89 2b       	or	r24, r25
     552:	49 f7       	brne	.-46     	; 0x526 <__stack+0x27>

		}

		return total_matches;

	}
     554:	c7 01       	movw	r24, r14
     556:	0f 90       	pop	r0
     558:	0f 90       	pop	r0
     55a:	0f 90       	pop	r0
     55c:	0f 90       	pop	r0
     55e:	df 91       	pop	r29
     560:	cf 91       	pop	r28
     562:	1f 91       	pop	r17
     564:	0f 91       	pop	r16
     566:	ff 90       	pop	r15
     568:	ef 90       	pop	r14
     56a:	08 95       	ret

0000056c <best_match>:
	int best_match(char user[], char *song_title_list) {
     56c:	af 92       	push	r10
     56e:	bf 92       	push	r11
     570:	cf 92       	push	r12
     572:	df 92       	push	r13
     574:	ef 92       	push	r14
     576:	ff 92       	push	r15
     578:	0f 93       	push	r16
     57a:	1f 93       	push	r17
     57c:	cf 93       	push	r28
     57e:	df 93       	push	r29
     580:	6c 01       	movw	r12, r24
     582:	8b 01       	movw	r16, r22

		int best_choice = 0, highest_score = 0, cursor = 0;

		// loop through each of the titles in the song title array and find their
		// match score
		for (int i = 0; i < NUMBER_OF_SONGS; i++) {
     584:	c0 e0       	ldi	r28, 0x00	; 0
     586:	d0 e0       	ldi	r29, 0x00	; 0
		return total_matches;

	}
	int best_match(char user[], char *song_title_list) {

		int best_choice = 0, highest_score = 0, cursor = 0;
     588:	e1 2c       	mov	r14, r1
     58a:	f1 2c       	mov	r15, r1
     58c:	a1 2c       	mov	r10, r1
     58e:	b1 2c       	mov	r11, r1
		// loop through each of the titles in the song title array and find their
		// match score
		for (int i = 0; i < NUMBER_OF_SONGS; i++) {

			// only compare song titles that are non-empty
			if (song_title_list[i] != '\0') {
     590:	f8 01       	movw	r30, r16
     592:	61 91       	ld	r22, Z+
     594:	8f 01       	movw	r16, r30
     596:	66 23       	and	r22, r22
     598:	51 f0       	breq	.+20     	; 0x5ae <best_match+0x42>

				// current match score
				cursor = match_score(user, song_title_list[i]);
     59a:	70 e0       	ldi	r23, 0x00	; 0
     59c:	c6 01       	movw	r24, r12
     59e:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <match_score>

				// best_choice gets assigned the index at which the maximum match
				// score was achieved
				if (cursor > highest_score) {
     5a2:	e8 16       	cp	r14, r24
     5a4:	f9 06       	cpc	r15, r25
     5a6:	1c f4       	brge	.+6      	; 0x5ae <best_match+0x42>
					highest_score = cursor;
     5a8:	7c 01       	movw	r14, r24
				// current match score
				cursor = match_score(user, song_title_list[i]);

				// best_choice gets assigned the index at which the maximum match
				// score was achieved
				if (cursor > highest_score) {
     5aa:	ac 2e       	mov	r10, r28
     5ac:	bd 2e       	mov	r11, r29

		int best_choice = 0, highest_score = 0, cursor = 0;

		// loop through each of the titles in the song title array and find their
		// match score
		for (int i = 0; i < NUMBER_OF_SONGS; i++) {
     5ae:	21 96       	adiw	r28, 0x01	; 1
     5b0:	c4 30       	cpi	r28, 0x04	; 4
     5b2:	d1 05       	cpc	r29, r1
     5b4:	69 f7       	brne	.-38     	; 0x590 <best_match+0x24>
			}
		}

		return best_choice;

	}
     5b6:	8a 2d       	mov	r24, r10
     5b8:	9b 2d       	mov	r25, r11
     5ba:	df 91       	pop	r29
     5bc:	cf 91       	pop	r28
     5be:	1f 91       	pop	r17
     5c0:	0f 91       	pop	r16
     5c2:	ff 90       	pop	r15
     5c4:	ef 90       	pop	r14
     5c6:	df 90       	pop	r13
     5c8:	cf 90       	pop	r12
     5ca:	bf 90       	pop	r11
     5cc:	af 90       	pop	r10
     5ce:	08 95       	ret

000005d0 <play_menu>:
}

//####################################################
//
//####################################################
void play_menu(const char menu[], char * song_titles) {
     5d0:	0f 93       	push	r16
     5d2:	1f 93       	push	r17
     5d4:	cf 93       	push	r28
     5d6:	df 93       	push	r29
     5d8:	cd b7       	in	r28, 0x3d	; 61
     5da:	de b7       	in	r29, 0x3e	; 62
     5dc:	cd 59       	subi	r28, 0x9D	; 157
     5de:	d1 09       	sbc	r29, r1
     5e0:	0f b6       	in	r0, 0x3f	; 63
     5e2:	f8 94       	cli
     5e4:	de bf       	out	0x3e, r29	; 62
     5e6:	0f be       	out	0x3f, r0	; 63
     5e8:	cd bf       	out	0x3d, r28	; 61
     5ea:	8b 01       	movw	r16, r22

	const char PROGMEM title_search[] = "enter title\n";
     5ec:	2d e0       	ldi	r18, 0x0D	; 13
     5ee:	ed e6       	ldi	r30, 0x6D	; 109
     5f0:	f3 e0       	ldi	r31, 0x03	; 3
     5f2:	de 01       	movw	r26, r28
     5f4:	11 96       	adiw	r26, 0x01	; 1
     5f6:	01 90       	ld	r0, Z+
     5f8:	0d 92       	st	X+, r0
     5fa:	2a 95       	dec	r18
     5fc:	e1 f7       	brne	.-8      	; 0x5f6 <play_menu+0x26>
	const char PROGMEM index_search[] = "enter index \n";
     5fe:	2e e0       	ldi	r18, 0x0E	; 14
     600:	e0 eb       	ldi	r30, 0xB0	; 176
     602:	f3 e0       	ldi	r31, 0x03	; 3
     604:	de 01       	movw	r26, r28
     606:	1e 96       	adiw	r26, 0x0e	; 14
     608:	01 90       	ld	r0, Z+
     60a:	0d 92       	st	X+, r0
     60c:	2a 95       	dec	r18
     60e:	e1 f7       	brne	.-8      	; 0x608 <play_menu+0x38>
    int play_choice, song_idx;
    int index = 0;
    // copy the const string main menu prompt to be tokenized
    

    play_choice = DisplayMenu(menu);
     610:	0e 94 b1 00 	call	0x162	; 0x162 <DisplayMenu>
     614:	90 e0       	ldi	r25, 0x00	; 0

    

	// search by title
	if(play_choice == 1) {
     616:	81 30       	cpi	r24, 0x01	; 1
     618:	91 05       	cpc	r25, r1
     61a:	a1 f5       	brne	.+104    	; 0x684 <play_menu+0xb4>

            char user_query[MAX_PASS_LENGTH];
            printf_P("%s", title_search);
     61c:	ce 01       	movw	r24, r28
     61e:	01 96       	adiw	r24, 0x01	; 1
     620:	9f 93       	push	r25
     622:	8f 93       	push	r24
     624:	87 e5       	ldi	r24, 0x57	; 87
     626:	93 e0       	ldi	r25, 0x03	; 3
     628:	9f 93       	push	r25
     62a:	8f 93       	push	r24
     62c:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <printf_P>
            if (fgets(user_line, TITLE_LENGTH, stdin) != NULL) {
     630:	40 91 5e 04 	lds	r20, 0x045E	; 0x80045e <__iob>
     634:	50 91 5f 04 	lds	r21, 0x045F	; 0x80045f <__iob+0x1>
     638:	60 e2       	ldi	r22, 0x20	; 32
     63a:	70 e0       	ldi	r23, 0x00	; 0
     63c:	8e ed       	ldi	r24, 0xDE	; 222
     63e:	93 e0       	ldi	r25, 0x03	; 3
     640:	0e 94 39 04 	call	0x872	; 0x872 <fgets>
     644:	0f 90       	pop	r0
     646:	0f 90       	pop	r0
     648:	0f 90       	pop	r0
     64a:	0f 90       	pop	r0
     64c:	89 2b       	or	r24, r25
     64e:	a1 f0       	breq	.+40     	; 0x678 <play_menu+0xa8>
                sscanf(user_line, "%[^\n]", user_query);
     650:	ce 01       	movw	r24, r28
     652:	4e 96       	adiw	r24, 0x1e	; 30
     654:	9f 93       	push	r25
     656:	8f 93       	push	r24
     658:	8a ea       	ldi	r24, 0xAA	; 170
     65a:	93 e0       	ldi	r25, 0x03	; 3
     65c:	9f 93       	push	r25
     65e:	8f 93       	push	r24
     660:	8e ed       	ldi	r24, 0xDE	; 222
     662:	93 e0       	ldi	r25, 0x03	; 3
     664:	9f 93       	push	r25
     666:	8f 93       	push	r24
     668:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <sscanf>
     66c:	0f 90       	pop	r0
     66e:	0f 90       	pop	r0
     670:	0f 90       	pop	r0
     672:	0f 90       	pop	r0
     674:	0f 90       	pop	r0
     676:	0f 90       	pop	r0
            }
            // index of the user's desired song title
            song_idx = best_match(user_query, song_titles);           
     678:	b8 01       	movw	r22, r16
     67a:	ce 01       	movw	r24, r28
     67c:	4e 96       	adiw	r24, 0x1e	; 30
     67e:	0e 94 b6 02 	call	0x56c	; 0x56c <best_match>
     682:	30 c0       	rjmp	.+96     	; 0x6e4 <play_menu+0x114>

	}else if(play_choice == 2) {
     684:	02 97       	sbiw	r24, 0x02	; 2
     686:	71 f5       	brne	.+92     	; 0x6e4 <play_menu+0x114>

            printf_P("%s", index_search);
     688:	ce 01       	movw	r24, r28
     68a:	0e 96       	adiw	r24, 0x0e	; 14
     68c:	9f 93       	push	r25
     68e:	8f 93       	push	r24
     690:	87 e5       	ldi	r24, 0x57	; 87
     692:	93 e0       	ldi	r25, 0x03	; 3
     694:	9f 93       	push	r25
     696:	8f 93       	push	r24
     698:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <printf_P>
            if (fgets(user_line, 3, stdin) != NULL) {
     69c:	40 91 5e 04 	lds	r20, 0x045E	; 0x80045e <__iob>
     6a0:	50 91 5f 04 	lds	r21, 0x045F	; 0x80045f <__iob+0x1>
     6a4:	63 e0       	ldi	r22, 0x03	; 3
     6a6:	70 e0       	ldi	r23, 0x00	; 0
     6a8:	8e ed       	ldi	r24, 0xDE	; 222
     6aa:	93 e0       	ldi	r25, 0x03	; 3
     6ac:	0e 94 39 04 	call	0x872	; 0x872 <fgets>
     6b0:	0f 90       	pop	r0
     6b2:	0f 90       	pop	r0
     6b4:	0f 90       	pop	r0
     6b6:	0f 90       	pop	r0
     6b8:	89 2b       	or	r24, r25
     6ba:	a1 f0       	breq	.+40     	; 0x6e4 <play_menu+0x114>
                sscanf(user_line, "%d", &song_idx);
     6bc:	ce 01       	movw	r24, r28
     6be:	4c 96       	adiw	r24, 0x1c	; 28
     6c0:	9f 93       	push	r25
     6c2:	8f 93       	push	r24
     6c4:	8e e0       	ldi	r24, 0x0E	; 14
     6c6:	93 e0       	ldi	r25, 0x03	; 3
     6c8:	9f 93       	push	r25
     6ca:	8f 93       	push	r24
     6cc:	8e ed       	ldi	r24, 0xDE	; 222
     6ce:	93 e0       	ldi	r25, 0x03	; 3
     6d0:	9f 93       	push	r25
     6d2:	8f 93       	push	r24
     6d4:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <sscanf>
     6d8:	0f 90       	pop	r0
     6da:	0f 90       	pop	r0
     6dc:	0f 90       	pop	r0
     6de:	0f 90       	pop	r0
     6e0:	0f 90       	pop	r0
     6e2:	0f 90       	pop	r0
            }

	}

       
}
     6e4:	c3 56       	subi	r28, 0x63	; 99
     6e6:	df 4f       	sbci	r29, 0xFF	; 255
     6e8:	0f b6       	in	r0, 0x3f	; 63
     6ea:	f8 94       	cli
     6ec:	de bf       	out	0x3e, r29	; 62
     6ee:	0f be       	out	0x3f, r0	; 63
     6f0:	cd bf       	out	0x3d, r28	; 61
     6f2:	df 91       	pop	r29
     6f4:	cf 91       	pop	r28
     6f6:	1f 91       	pop	r17
     6f8:	0f 91       	pop	r16
     6fa:	08 95       	ret

000006fc <main>:
		return best_choice;

	}
int main()
{
	stderr = stdin = stdout = &uart_stream;
     6fc:	ee e5       	ldi	r30, 0x5E	; 94
     6fe:	f4 e0       	ldi	r31, 0x04	; 4
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	93 e0       	ldi	r25, 0x03	; 3
     704:	93 83       	std	Z+3, r25	; 0x03
     706:	82 83       	std	Z+2, r24	; 0x02
     708:	91 83       	std	Z+1, r25	; 0x01
     70a:	80 83       	st	Z, r24
     70c:	95 83       	std	Z+5, r25	; 0x05
     70e:	84 83       	std	Z+4, r24	; 0x04
	
	UARTInit(); /* initialize the UART (set hardware specific configuration registers) */
     710:	0e 94 df 03 	call	0x7be	; 0x7be <UARTInit>
	//printf("%s \n", vall);
	
	uint8_t choice;
	int sentinel = 1;
	//choice = DisplayMenu(menu);
	printf("%d \n ", choice);
     714:	1f 92       	push	r1
     716:	1f 92       	push	r1
     718:	8e eb       	ldi	r24, 0xBE	; 190
     71a:	93 e0       	ldi	r25, 0x03	; 3
     71c:	9f 93       	push	r25
     71e:	8f 93       	push	r24
     720:	0e 94 65 04 	call	0x8ca	; 0x8ca <printf>
     724:	0f 90       	pop	r0
     726:	0f 90       	pop	r0
     728:	0f 90       	pop	r0
     72a:	0f 90       	pop	r0
	
	while(!!sentinel){
		
		choice = DisplayMenu(menu);
     72c:	8e eb       	ldi	r24, 0xBE	; 190
     72e:	90 e0       	ldi	r25, 0x00	; 0
     730:	0e 94 b1 00 	call	0x162	; 0x162 <DisplayMenu>
		//printf("%d \n ", choice);
		switch(choice){
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	71 f0       	breq	.+28     	; 0x754 <main+0x58>
     738:	18 f4       	brcc	.+6      	; 0x740 <main+0x44>
     73a:	81 30       	cpi	r24, 0x01	; 1
     73c:	31 f0       	breq	.+12     	; 0x74a <main+0x4e>
     73e:	f6 cf       	rjmp	.-20     	; 0x72c <main+0x30>
     740:	83 30       	cpi	r24, 0x03	; 3
     742:	99 f0       	breq	.+38     	; 0x76a <main+0x6e>
     744:	84 30       	cpi	r24, 0x04	; 4
     746:	b1 f0       	breq	.+44     	; 0x774 <main+0x78>
     748:	f1 cf       	rjmp	.-30     	; 0x72c <main+0x30>
			
			case 1 : 
				{
					song_menu(song_title_list);
     74a:	80 e0       	ldi	r24, 0x00	; 0
     74c:	91 e0       	ldi	r25, 0x01	; 1
     74e:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <song_menu>
					break;
     752:	ec cf       	rjmp	.-40     	; 0x72c <main+0x30>
				
				}
			case 2:
				{
					printf("I am going to play menu \n");
     754:	84 ec       	ldi	r24, 0xC4	; 196
     756:	93 e0       	ldi	r25, 0x03	; 3
     758:	0e 94 a1 04 	call	0x942	; 0x942 <puts>
					play_menu(ply_menu, song_title_list);
     75c:	60 e0       	ldi	r22, 0x00	; 0
     75e:	71 e0       	ldi	r23, 0x01	; 1
     760:	88 e6       	ldi	r24, 0x68	; 104
     762:	90 e0       	ldi	r25, 0x00	; 0
     764:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <play_menu>
					break;	
     768:	e1 cf       	rjmp	.-62     	; 0x72c <main+0x30>
				}
			
			case 3:
				{	
					make_menu(song_title_list);
     76a:	80 e0       	ldi	r24, 0x00	; 0
     76c:	91 e0       	ldi	r25, 0x01	; 1
     76e:	0e 94 51 01 	call	0x2a2	; 0x2a2 <make_menu>
					break;
     772:	dc cf       	rjmp	.-72     	; 0x72c <main+0x30>
						
			
		}
	
	return 1;// EXIT_SUCCESS;
     774:	81 e0       	ldi	r24, 0x01	; 1
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	08 95       	ret

0000077a <UARTPutch>:

	return 0;
}

int UARTPutch(char ch, FILE *stream)
{
     77a:	cf 93       	push	r28
     77c:	c8 2f       	mov	r28, r24
	if (ch == '\n')
     77e:	8a 30       	cpi	r24, 0x0A	; 10
     780:	19 f4       	brne	.+6      	; 0x788 <UARTPutch+0xe>
	UARTPutch('\r', stream);
     782:	8d e0       	ldi	r24, 0x0D	; 13
     784:	0e 94 bd 03 	call	0x77a	; 0x77a <UARTPutch>

	while (!(UCSRA & (1<<UDRE))); //loop until bit is set
     788:	e0 ec       	ldi	r30, 0xC0	; 192
     78a:	f0 e0       	ldi	r31, 0x00	; 0
     78c:	80 81       	ld	r24, Z
     78e:	85 ff       	sbrs	r24, 5
     790:	fd cf       	rjmp	.-6      	; 0x78c <UARTPutch+0x12>
	UDR=ch;
     792:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>

	return 0;
}
     796:	80 e0       	ldi	r24, 0x00	; 0
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	cf 91       	pop	r28
     79c:	08 95       	ret

0000079e <UARTGetch>:

int UARTGetch(FILE *stream)
{
     79e:	cf 93       	push	r28
     7a0:	bc 01       	movw	r22, r24
	unsigned char ch;

	while (!(UCSRA & (1<<RXC))); //loop until bit is set
     7a2:	e0 ec       	ldi	r30, 0xC0	; 192
     7a4:	f0 e0       	ldi	r31, 0x00	; 0
     7a6:	90 81       	ld	r25, Z
     7a8:	99 23       	and	r25, r25
     7aa:	ec f7       	brge	.-6      	; 0x7a6 <UARTGetch+0x8>
	ch=UDR;
     7ac:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>

	/* Echo the output back to the terminal */
	UARTPutch(ch,stream);
     7b0:	8c 2f       	mov	r24, r28
     7b2:	0e 94 bd 03 	call	0x77a	; 0x77a <UARTPutch>

	return ch;
     7b6:	8c 2f       	mov	r24, r28
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	cf 91       	pop	r28
     7bc:	08 95       	ret

000007be <UARTInit>:
{

	//BAUD RATE of 4800 for 8Mhz
	//UBRRH = 0;
	//UBRRL = 103;
	UBRRH = (((F_CPU/BAUD_RATE)/16) - 1) >> 8;		// set baud rate
     7be:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRRL = (((F_CPU/BAUD_RATE)/16) - 1 );
     7c2:	87 e6       	ldi	r24, 0x67	; 103
     7c4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>


	UCSRA = 0; //clearing all flags
     7c8:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>


	UCSRB = (1<<RXEN0)|(1<<TXEN0);
     7cc:	88 e1       	ldi	r24, 0x18	; 24
     7ce:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	//  UCSRB = (1<<RXEN)|(1<<TXEN);


	//UCSR0C =(1<<USBS0)|(3<<UCSZ00);
	/* Set Frame: Data 8 Bit, No Parity and 2 Stop Bit */
	UCSRC = (1 << USBS0)|(3 << UCSZ00);
     7d2:	8e e0       	ldi	r24, 0x0E	; 14
     7d4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     7d8:	08 95       	ret

000007da <memset>:
     7da:	dc 01       	movw	r26, r24
     7dc:	01 c0       	rjmp	.+2      	; 0x7e0 <memset+0x6>
     7de:	6d 93       	st	X+, r22
     7e0:	41 50       	subi	r20, 0x01	; 1
     7e2:	50 40       	sbci	r21, 0x00	; 0
     7e4:	e0 f7       	brcc	.-8      	; 0x7de <memset+0x4>
     7e6:	08 95       	ret

000007e8 <strcasecmp>:
     7e8:	fb 01       	movw	r30, r22
     7ea:	dc 01       	movw	r26, r24
     7ec:	8d 91       	ld	r24, X+
     7ee:	81 34       	cpi	r24, 0x41	; 65
     7f0:	1c f0       	brlt	.+6      	; 0x7f8 <strcasecmp+0x10>
     7f2:	8b 35       	cpi	r24, 0x5B	; 91
     7f4:	0c f4       	brge	.+2      	; 0x7f8 <strcasecmp+0x10>
     7f6:	80 5e       	subi	r24, 0xE0	; 224
     7f8:	61 91       	ld	r22, Z+
     7fa:	61 34       	cpi	r22, 0x41	; 65
     7fc:	1c f0       	brlt	.+6      	; 0x804 <strcasecmp+0x1c>
     7fe:	6b 35       	cpi	r22, 0x5B	; 91
     800:	0c f4       	brge	.+2      	; 0x804 <strcasecmp+0x1c>
     802:	60 5e       	subi	r22, 0xE0	; 224
     804:	86 1b       	sub	r24, r22
     806:	61 11       	cpse	r22, r1
     808:	89 f3       	breq	.-30     	; 0x7ec <strcasecmp+0x4>
     80a:	99 0b       	sbc	r25, r25
     80c:	08 95       	ret

0000080e <strcat>:
     80e:	fb 01       	movw	r30, r22
     810:	dc 01       	movw	r26, r24
     812:	0d 90       	ld	r0, X+
     814:	00 20       	and	r0, r0
     816:	e9 f7       	brne	.-6      	; 0x812 <strcat+0x4>
     818:	11 97       	sbiw	r26, 0x01	; 1
     81a:	01 90       	ld	r0, Z+
     81c:	0d 92       	st	X+, r0
     81e:	00 20       	and	r0, r0
     820:	e1 f7       	brne	.-8      	; 0x81a <strcat+0xc>
     822:	08 95       	ret

00000824 <strtok_r>:
     824:	fa 01       	movw	r30, r20
     826:	a1 91       	ld	r26, Z+
     828:	b0 81       	ld	r27, Z
     82a:	00 97       	sbiw	r24, 0x00	; 0
     82c:	19 f4       	brne	.+6      	; 0x834 <strtok_r+0x10>
     82e:	10 97       	sbiw	r26, 0x00	; 0
     830:	e1 f0       	breq	.+56     	; 0x86a <strtok_r+0x46>
     832:	cd 01       	movw	r24, r26
     834:	dc 01       	movw	r26, r24
     836:	cd 01       	movw	r24, r26
     838:	0d 90       	ld	r0, X+
     83a:	00 20       	and	r0, r0
     83c:	11 f4       	brne	.+4      	; 0x842 <strtok_r+0x1e>
     83e:	c0 01       	movw	r24, r0
     840:	13 c0       	rjmp	.+38     	; 0x868 <strtok_r+0x44>
     842:	fb 01       	movw	r30, r22
     844:	21 91       	ld	r18, Z+
     846:	22 23       	and	r18, r18
     848:	19 f0       	breq	.+6      	; 0x850 <strtok_r+0x2c>
     84a:	20 15       	cp	r18, r0
     84c:	d9 f7       	brne	.-10     	; 0x844 <strtok_r+0x20>
     84e:	f3 cf       	rjmp	.-26     	; 0x836 <strtok_r+0x12>
     850:	fb 01       	movw	r30, r22
     852:	21 91       	ld	r18, Z+
     854:	20 15       	cp	r18, r0
     856:	19 f4       	brne	.+6      	; 0x85e <strtok_r+0x3a>
     858:	1e 92       	st	-X, r1
     85a:	11 96       	adiw	r26, 0x01	; 1
     85c:	06 c0       	rjmp	.+12     	; 0x86a <strtok_r+0x46>
     85e:	22 23       	and	r18, r18
     860:	c1 f7       	brne	.-16     	; 0x852 <strtok_r+0x2e>
     862:	0d 90       	ld	r0, X+
     864:	00 20       	and	r0, r0
     866:	a1 f7       	brne	.-24     	; 0x850 <strtok_r+0x2c>
     868:	d0 01       	movw	r26, r0
     86a:	fa 01       	movw	r30, r20
     86c:	a1 93       	st	Z+, r26
     86e:	b0 83       	st	Z, r27
     870:	08 95       	ret

00000872 <fgets>:
     872:	a0 e0       	ldi	r26, 0x00	; 0
     874:	b0 e0       	ldi	r27, 0x00	; 0
     876:	ef e3       	ldi	r30, 0x3F	; 63
     878:	f4 e0       	ldi	r31, 0x04	; 4
     87a:	0c 94 b9 0a 	jmp	0x1572	; 0x1572 <__prologue_saves__+0x14>
     87e:	fa 01       	movw	r30, r20
     880:	23 81       	ldd	r18, Z+3	; 0x03
     882:	20 fd       	sbrc	r18, 0
     884:	03 c0       	rjmp	.+6      	; 0x88c <fgets+0x1a>
     886:	80 e0       	ldi	r24, 0x00	; 0
     888:	90 e0       	ldi	r25, 0x00	; 0
     88a:	1a c0       	rjmp	.+52     	; 0x8c0 <fgets+0x4e>
     88c:	16 16       	cp	r1, r22
     88e:	17 06       	cpc	r1, r23
     890:	d4 f7       	brge	.-12     	; 0x886 <fgets+0x14>
     892:	7a 01       	movw	r14, r20
     894:	8c 01       	movw	r16, r24
     896:	eb 01       	movw	r28, r22
     898:	6c 01       	movw	r12, r24
     89a:	c1 30       	cpi	r28, 0x01	; 1
     89c:	d1 05       	cpc	r29, r1
     89e:	69 f0       	breq	.+26     	; 0x8ba <fgets+0x48>
     8a0:	c7 01       	movw	r24, r14
     8a2:	0e 94 bb 09 	call	0x1376	; 0x1376 <fgetc>
     8a6:	8f 3f       	cpi	r24, 0xFF	; 255
     8a8:	ff ef       	ldi	r31, 0xFF	; 255
     8aa:	9f 07       	cpc	r25, r31
     8ac:	61 f3       	breq	.-40     	; 0x886 <fgets+0x14>
     8ae:	f6 01       	movw	r30, r12
     8b0:	81 93       	st	Z+, r24
     8b2:	6f 01       	movw	r12, r30
     8b4:	21 97       	sbiw	r28, 0x01	; 1
     8b6:	0a 97       	sbiw	r24, 0x0a	; 10
     8b8:	81 f7       	brne	.-32     	; 0x89a <fgets+0x28>
     8ba:	f6 01       	movw	r30, r12
     8bc:	10 82       	st	Z, r1
     8be:	c8 01       	movw	r24, r16
     8c0:	cd b7       	in	r28, 0x3d	; 61
     8c2:	de b7       	in	r29, 0x3e	; 62
     8c4:	e8 e0       	ldi	r30, 0x08	; 8
     8c6:	0c 94 d5 0a 	jmp	0x15aa	; 0x15aa <__epilogue_restores__+0x14>

000008ca <printf>:
     8ca:	a0 e0       	ldi	r26, 0x00	; 0
     8cc:	b0 e0       	ldi	r27, 0x00	; 0
     8ce:	eb e6       	ldi	r30, 0x6B	; 107
     8d0:	f4 e0       	ldi	r31, 0x04	; 4
     8d2:	0c 94 bf 0a 	jmp	0x157e	; 0x157e <__prologue_saves__+0x20>
     8d6:	ae 01       	movw	r20, r28
     8d8:	4b 5f       	subi	r20, 0xFB	; 251
     8da:	5f 4f       	sbci	r21, 0xFF	; 255
     8dc:	fa 01       	movw	r30, r20
     8de:	61 91       	ld	r22, Z+
     8e0:	71 91       	ld	r23, Z+
     8e2:	af 01       	movw	r20, r30
     8e4:	80 91 60 04 	lds	r24, 0x0460	; 0x800460 <__iob+0x2>
     8e8:	90 91 61 04 	lds	r25, 0x0461	; 0x800461 <__iob+0x3>
     8ec:	0e 94 03 05 	call	0xa06	; 0xa06 <vfprintf>
     8f0:	e2 e0       	ldi	r30, 0x02	; 2
     8f2:	0c 94 db 0a 	jmp	0x15b6	; 0x15b6 <__epilogue_restores__+0x20>

000008f6 <printf_P>:
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	b0 e0       	ldi	r27, 0x00	; 0
     8fa:	e1 e8       	ldi	r30, 0x81	; 129
     8fc:	f4 e0       	ldi	r31, 0x04	; 4
     8fe:	0c 94 bd 0a 	jmp	0x157a	; 0x157a <__prologue_saves__+0x1c>
     902:	ae 01       	movw	r20, r28
     904:	49 5f       	subi	r20, 0xF9	; 249
     906:	5f 4f       	sbci	r21, 0xFF	; 255
     908:	da 01       	movw	r26, r20
     90a:	6d 91       	ld	r22, X+
     90c:	7d 91       	ld	r23, X+
     90e:	ad 01       	movw	r20, r26
     910:	0e e5       	ldi	r16, 0x5E	; 94
     912:	14 e0       	ldi	r17, 0x04	; 4
     914:	f8 01       	movw	r30, r16
     916:	82 81       	ldd	r24, Z+2	; 0x02
     918:	93 81       	ldd	r25, Z+3	; 0x03
     91a:	dc 01       	movw	r26, r24
     91c:	13 96       	adiw	r26, 0x03	; 3
     91e:	2c 91       	ld	r18, X
     920:	13 97       	sbiw	r26, 0x03	; 3
     922:	28 60       	ori	r18, 0x08	; 8
     924:	13 96       	adiw	r26, 0x03	; 3
     926:	2c 93       	st	X, r18
     928:	0e 94 03 05 	call	0xa06	; 0xa06 <vfprintf>
     92c:	d8 01       	movw	r26, r16
     92e:	12 96       	adiw	r26, 0x02	; 2
     930:	ed 91       	ld	r30, X+
     932:	fc 91       	ld	r31, X
     934:	13 97       	sbiw	r26, 0x03	; 3
     936:	23 81       	ldd	r18, Z+3	; 0x03
     938:	27 7f       	andi	r18, 0xF7	; 247
     93a:	23 83       	std	Z+3, r18	; 0x03
     93c:	e4 e0       	ldi	r30, 0x04	; 4
     93e:	0c 94 d9 0a 	jmp	0x15b2	; 0x15b2 <__epilogue_restores__+0x1c>

00000942 <puts>:
     942:	0f 93       	push	r16
     944:	1f 93       	push	r17
     946:	cf 93       	push	r28
     948:	df 93       	push	r29
     94a:	e0 91 60 04 	lds	r30, 0x0460	; 0x800460 <__iob+0x2>
     94e:	f0 91 61 04 	lds	r31, 0x0461	; 0x800461 <__iob+0x3>
     952:	23 81       	ldd	r18, Z+3	; 0x03
     954:	21 ff       	sbrs	r18, 1
     956:	1b c0       	rjmp	.+54     	; 0x98e <puts+0x4c>
     958:	8c 01       	movw	r16, r24
     95a:	d0 e0       	ldi	r29, 0x00	; 0
     95c:	c0 e0       	ldi	r28, 0x00	; 0
     95e:	f8 01       	movw	r30, r16
     960:	81 91       	ld	r24, Z+
     962:	8f 01       	movw	r16, r30
     964:	60 91 60 04 	lds	r22, 0x0460	; 0x800460 <__iob+0x2>
     968:	70 91 61 04 	lds	r23, 0x0461	; 0x800461 <__iob+0x3>
     96c:	db 01       	movw	r26, r22
     96e:	18 96       	adiw	r26, 0x08	; 8
     970:	ed 91       	ld	r30, X+
     972:	fc 91       	ld	r31, X
     974:	19 97       	sbiw	r26, 0x09	; 9
     976:	88 23       	and	r24, r24
     978:	31 f0       	breq	.+12     	; 0x986 <puts+0x44>
     97a:	09 95       	icall
     97c:	89 2b       	or	r24, r25
     97e:	79 f3       	breq	.-34     	; 0x95e <puts+0x1c>
     980:	df ef       	ldi	r29, 0xFF	; 255
     982:	cf ef       	ldi	r28, 0xFF	; 255
     984:	ec cf       	rjmp	.-40     	; 0x95e <puts+0x1c>
     986:	8a e0       	ldi	r24, 0x0A	; 10
     988:	09 95       	icall
     98a:	89 2b       	or	r24, r25
     98c:	19 f0       	breq	.+6      	; 0x994 <puts+0x52>
     98e:	8f ef       	ldi	r24, 0xFF	; 255
     990:	9f ef       	ldi	r25, 0xFF	; 255
     992:	02 c0       	rjmp	.+4      	; 0x998 <puts+0x56>
     994:	8d 2f       	mov	r24, r29
     996:	9c 2f       	mov	r25, r28
     998:	df 91       	pop	r29
     99a:	cf 91       	pop	r28
     99c:	1f 91       	pop	r17
     99e:	0f 91       	pop	r16
     9a0:	08 95       	ret

000009a2 <sscanf>:
     9a2:	ae e0       	ldi	r26, 0x0E	; 14
     9a4:	b0 e0       	ldi	r27, 0x00	; 0
     9a6:	e7 ed       	ldi	r30, 0xD7	; 215
     9a8:	f4 e0       	ldi	r31, 0x04	; 4
     9aa:	0c 94 bf 0a 	jmp	0x157e	; 0x157e <__prologue_saves__+0x20>
     9ae:	85 e0       	ldi	r24, 0x05	; 5
     9b0:	8c 83       	std	Y+4, r24	; 0x04
     9b2:	8b 89       	ldd	r24, Y+19	; 0x13
     9b4:	9c 89       	ldd	r25, Y+20	; 0x14
     9b6:	9a 83       	std	Y+2, r25	; 0x02
     9b8:	89 83       	std	Y+1, r24	; 0x01
     9ba:	ae 01       	movw	r20, r28
     9bc:	49 5e       	subi	r20, 0xE9	; 233
     9be:	5f 4f       	sbci	r21, 0xFF	; 255
     9c0:	6d 89       	ldd	r22, Y+21	; 0x15
     9c2:	7e 89       	ldd	r23, Y+22	; 0x16
     9c4:	ce 01       	movw	r24, r28
     9c6:	01 96       	adiw	r24, 0x01	; 1
     9c8:	0e 94 80 08 	call	0x1100	; 0x1100 <vfscanf>
     9cc:	2e 96       	adiw	r28, 0x0e	; 14
     9ce:	e2 e0       	ldi	r30, 0x02	; 2
     9d0:	0c 94 db 0a 	jmp	0x15b6	; 0x15b6 <__epilogue_restores__+0x20>

000009d4 <sscanf_P>:
     9d4:	ae e0       	ldi	r26, 0x0E	; 14
     9d6:	b0 e0       	ldi	r27, 0x00	; 0
     9d8:	e0 ef       	ldi	r30, 0xF0	; 240
     9da:	f4 e0       	ldi	r31, 0x04	; 4
     9dc:	0c 94 bf 0a 	jmp	0x157e	; 0x157e <__prologue_saves__+0x20>
     9e0:	8d e0       	ldi	r24, 0x0D	; 13
     9e2:	8c 83       	std	Y+4, r24	; 0x04
     9e4:	8b 89       	ldd	r24, Y+19	; 0x13
     9e6:	9c 89       	ldd	r25, Y+20	; 0x14
     9e8:	9a 83       	std	Y+2, r25	; 0x02
     9ea:	89 83       	std	Y+1, r24	; 0x01
     9ec:	ae 01       	movw	r20, r28
     9ee:	49 5e       	subi	r20, 0xE9	; 233
     9f0:	5f 4f       	sbci	r21, 0xFF	; 255
     9f2:	6d 89       	ldd	r22, Y+21	; 0x15
     9f4:	7e 89       	ldd	r23, Y+22	; 0x16
     9f6:	ce 01       	movw	r24, r28
     9f8:	01 96       	adiw	r24, 0x01	; 1
     9fa:	0e 94 80 08 	call	0x1100	; 0x1100 <vfscanf>
     9fe:	2e 96       	adiw	r28, 0x0e	; 14
     a00:	e2 e0       	ldi	r30, 0x02	; 2
     a02:	0c 94 db 0a 	jmp	0x15b6	; 0x15b6 <__epilogue_restores__+0x20>

00000a06 <vfprintf>:
     a06:	ab e0       	ldi	r26, 0x0B	; 11
     a08:	b0 e0       	ldi	r27, 0x00	; 0
     a0a:	e9 e0       	ldi	r30, 0x09	; 9
     a0c:	f5 e0       	ldi	r31, 0x05	; 5
     a0e:	0c 94 af 0a 	jmp	0x155e	; 0x155e <__prologue_saves__>
     a12:	6c 01       	movw	r12, r24
     a14:	7b 01       	movw	r14, r22
     a16:	8a 01       	movw	r16, r20
     a18:	fc 01       	movw	r30, r24
     a1a:	17 82       	std	Z+7, r1	; 0x07
     a1c:	16 82       	std	Z+6, r1	; 0x06
     a1e:	83 81       	ldd	r24, Z+3	; 0x03
     a20:	81 ff       	sbrs	r24, 1
     a22:	cc c1       	rjmp	.+920    	; 0xdbc <vfprintf+0x3b6>
     a24:	ce 01       	movw	r24, r28
     a26:	01 96       	adiw	r24, 0x01	; 1
     a28:	3c 01       	movw	r6, r24
     a2a:	f6 01       	movw	r30, r12
     a2c:	93 81       	ldd	r25, Z+3	; 0x03
     a2e:	f7 01       	movw	r30, r14
     a30:	93 fd       	sbrc	r25, 3
     a32:	85 91       	lpm	r24, Z+
     a34:	93 ff       	sbrs	r25, 3
     a36:	81 91       	ld	r24, Z+
     a38:	7f 01       	movw	r14, r30
     a3a:	88 23       	and	r24, r24
     a3c:	09 f4       	brne	.+2      	; 0xa40 <vfprintf+0x3a>
     a3e:	ba c1       	rjmp	.+884    	; 0xdb4 <vfprintf+0x3ae>
     a40:	85 32       	cpi	r24, 0x25	; 37
     a42:	39 f4       	brne	.+14     	; 0xa52 <vfprintf+0x4c>
     a44:	93 fd       	sbrc	r25, 3
     a46:	85 91       	lpm	r24, Z+
     a48:	93 ff       	sbrs	r25, 3
     a4a:	81 91       	ld	r24, Z+
     a4c:	7f 01       	movw	r14, r30
     a4e:	85 32       	cpi	r24, 0x25	; 37
     a50:	29 f4       	brne	.+10     	; 0xa5c <vfprintf+0x56>
     a52:	b6 01       	movw	r22, r12
     a54:	90 e0       	ldi	r25, 0x00	; 0
     a56:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <fputc>
     a5a:	e7 cf       	rjmp	.-50     	; 0xa2a <vfprintf+0x24>
     a5c:	91 2c       	mov	r9, r1
     a5e:	21 2c       	mov	r2, r1
     a60:	31 2c       	mov	r3, r1
     a62:	ff e1       	ldi	r31, 0x1F	; 31
     a64:	f3 15       	cp	r31, r3
     a66:	d8 f0       	brcs	.+54     	; 0xa9e <vfprintf+0x98>
     a68:	8b 32       	cpi	r24, 0x2B	; 43
     a6a:	79 f0       	breq	.+30     	; 0xa8a <vfprintf+0x84>
     a6c:	38 f4       	brcc	.+14     	; 0xa7c <vfprintf+0x76>
     a6e:	80 32       	cpi	r24, 0x20	; 32
     a70:	79 f0       	breq	.+30     	; 0xa90 <vfprintf+0x8a>
     a72:	83 32       	cpi	r24, 0x23	; 35
     a74:	a1 f4       	brne	.+40     	; 0xa9e <vfprintf+0x98>
     a76:	23 2d       	mov	r18, r3
     a78:	20 61       	ori	r18, 0x10	; 16
     a7a:	1d c0       	rjmp	.+58     	; 0xab6 <vfprintf+0xb0>
     a7c:	8d 32       	cpi	r24, 0x2D	; 45
     a7e:	61 f0       	breq	.+24     	; 0xa98 <vfprintf+0x92>
     a80:	80 33       	cpi	r24, 0x30	; 48
     a82:	69 f4       	brne	.+26     	; 0xa9e <vfprintf+0x98>
     a84:	23 2d       	mov	r18, r3
     a86:	21 60       	ori	r18, 0x01	; 1
     a88:	16 c0       	rjmp	.+44     	; 0xab6 <vfprintf+0xb0>
     a8a:	83 2d       	mov	r24, r3
     a8c:	82 60       	ori	r24, 0x02	; 2
     a8e:	38 2e       	mov	r3, r24
     a90:	e3 2d       	mov	r30, r3
     a92:	e4 60       	ori	r30, 0x04	; 4
     a94:	3e 2e       	mov	r3, r30
     a96:	2a c0       	rjmp	.+84     	; 0xaec <vfprintf+0xe6>
     a98:	f3 2d       	mov	r31, r3
     a9a:	f8 60       	ori	r31, 0x08	; 8
     a9c:	1d c0       	rjmp	.+58     	; 0xad8 <vfprintf+0xd2>
     a9e:	37 fc       	sbrc	r3, 7
     aa0:	2d c0       	rjmp	.+90     	; 0xafc <vfprintf+0xf6>
     aa2:	20 ed       	ldi	r18, 0xD0	; 208
     aa4:	28 0f       	add	r18, r24
     aa6:	2a 30       	cpi	r18, 0x0A	; 10
     aa8:	40 f0       	brcs	.+16     	; 0xaba <vfprintf+0xb4>
     aaa:	8e 32       	cpi	r24, 0x2E	; 46
     aac:	b9 f4       	brne	.+46     	; 0xadc <vfprintf+0xd6>
     aae:	36 fc       	sbrc	r3, 6
     ab0:	81 c1       	rjmp	.+770    	; 0xdb4 <vfprintf+0x3ae>
     ab2:	23 2d       	mov	r18, r3
     ab4:	20 64       	ori	r18, 0x40	; 64
     ab6:	32 2e       	mov	r3, r18
     ab8:	19 c0       	rjmp	.+50     	; 0xaec <vfprintf+0xe6>
     aba:	36 fe       	sbrs	r3, 6
     abc:	06 c0       	rjmp	.+12     	; 0xaca <vfprintf+0xc4>
     abe:	8a e0       	ldi	r24, 0x0A	; 10
     ac0:	98 9e       	mul	r9, r24
     ac2:	20 0d       	add	r18, r0
     ac4:	11 24       	eor	r1, r1
     ac6:	92 2e       	mov	r9, r18
     ac8:	11 c0       	rjmp	.+34     	; 0xaec <vfprintf+0xe6>
     aca:	ea e0       	ldi	r30, 0x0A	; 10
     acc:	2e 9e       	mul	r2, r30
     ace:	20 0d       	add	r18, r0
     ad0:	11 24       	eor	r1, r1
     ad2:	22 2e       	mov	r2, r18
     ad4:	f3 2d       	mov	r31, r3
     ad6:	f0 62       	ori	r31, 0x20	; 32
     ad8:	3f 2e       	mov	r3, r31
     ada:	08 c0       	rjmp	.+16     	; 0xaec <vfprintf+0xe6>
     adc:	8c 36       	cpi	r24, 0x6C	; 108
     ade:	21 f4       	brne	.+8      	; 0xae8 <vfprintf+0xe2>
     ae0:	83 2d       	mov	r24, r3
     ae2:	80 68       	ori	r24, 0x80	; 128
     ae4:	38 2e       	mov	r3, r24
     ae6:	02 c0       	rjmp	.+4      	; 0xaec <vfprintf+0xe6>
     ae8:	88 36       	cpi	r24, 0x68	; 104
     aea:	41 f4       	brne	.+16     	; 0xafc <vfprintf+0xf6>
     aec:	f7 01       	movw	r30, r14
     aee:	93 fd       	sbrc	r25, 3
     af0:	85 91       	lpm	r24, Z+
     af2:	93 ff       	sbrs	r25, 3
     af4:	81 91       	ld	r24, Z+
     af6:	7f 01       	movw	r14, r30
     af8:	81 11       	cpse	r24, r1
     afa:	b3 cf       	rjmp	.-154    	; 0xa62 <vfprintf+0x5c>
     afc:	98 2f       	mov	r25, r24
     afe:	9f 7d       	andi	r25, 0xDF	; 223
     b00:	95 54       	subi	r25, 0x45	; 69
     b02:	93 30       	cpi	r25, 0x03	; 3
     b04:	28 f4       	brcc	.+10     	; 0xb10 <vfprintf+0x10a>
     b06:	0c 5f       	subi	r16, 0xFC	; 252
     b08:	1f 4f       	sbci	r17, 0xFF	; 255
     b0a:	9f e3       	ldi	r25, 0x3F	; 63
     b0c:	99 83       	std	Y+1, r25	; 0x01
     b0e:	0d c0       	rjmp	.+26     	; 0xb2a <vfprintf+0x124>
     b10:	83 36       	cpi	r24, 0x63	; 99
     b12:	31 f0       	breq	.+12     	; 0xb20 <vfprintf+0x11a>
     b14:	83 37       	cpi	r24, 0x73	; 115
     b16:	71 f0       	breq	.+28     	; 0xb34 <vfprintf+0x12e>
     b18:	83 35       	cpi	r24, 0x53	; 83
     b1a:	09 f0       	breq	.+2      	; 0xb1e <vfprintf+0x118>
     b1c:	59 c0       	rjmp	.+178    	; 0xbd0 <vfprintf+0x1ca>
     b1e:	21 c0       	rjmp	.+66     	; 0xb62 <vfprintf+0x15c>
     b20:	f8 01       	movw	r30, r16
     b22:	80 81       	ld	r24, Z
     b24:	89 83       	std	Y+1, r24	; 0x01
     b26:	0e 5f       	subi	r16, 0xFE	; 254
     b28:	1f 4f       	sbci	r17, 0xFF	; 255
     b2a:	88 24       	eor	r8, r8
     b2c:	83 94       	inc	r8
     b2e:	91 2c       	mov	r9, r1
     b30:	53 01       	movw	r10, r6
     b32:	13 c0       	rjmp	.+38     	; 0xb5a <vfprintf+0x154>
     b34:	28 01       	movw	r4, r16
     b36:	f2 e0       	ldi	r31, 0x02	; 2
     b38:	4f 0e       	add	r4, r31
     b3a:	51 1c       	adc	r5, r1
     b3c:	f8 01       	movw	r30, r16
     b3e:	a0 80       	ld	r10, Z
     b40:	b1 80       	ldd	r11, Z+1	; 0x01
     b42:	36 fe       	sbrs	r3, 6
     b44:	03 c0       	rjmp	.+6      	; 0xb4c <vfprintf+0x146>
     b46:	69 2d       	mov	r22, r9
     b48:	70 e0       	ldi	r23, 0x00	; 0
     b4a:	02 c0       	rjmp	.+4      	; 0xb50 <vfprintf+0x14a>
     b4c:	6f ef       	ldi	r22, 0xFF	; 255
     b4e:	7f ef       	ldi	r23, 0xFF	; 255
     b50:	c5 01       	movw	r24, r10
     b52:	0e 94 b0 09 	call	0x1360	; 0x1360 <strnlen>
     b56:	4c 01       	movw	r8, r24
     b58:	82 01       	movw	r16, r4
     b5a:	f3 2d       	mov	r31, r3
     b5c:	ff 77       	andi	r31, 0x7F	; 127
     b5e:	3f 2e       	mov	r3, r31
     b60:	16 c0       	rjmp	.+44     	; 0xb8e <vfprintf+0x188>
     b62:	28 01       	movw	r4, r16
     b64:	22 e0       	ldi	r18, 0x02	; 2
     b66:	42 0e       	add	r4, r18
     b68:	51 1c       	adc	r5, r1
     b6a:	f8 01       	movw	r30, r16
     b6c:	a0 80       	ld	r10, Z
     b6e:	b1 80       	ldd	r11, Z+1	; 0x01
     b70:	36 fe       	sbrs	r3, 6
     b72:	03 c0       	rjmp	.+6      	; 0xb7a <vfprintf+0x174>
     b74:	69 2d       	mov	r22, r9
     b76:	70 e0       	ldi	r23, 0x00	; 0
     b78:	02 c0       	rjmp	.+4      	; 0xb7e <vfprintf+0x178>
     b7a:	6f ef       	ldi	r22, 0xFF	; 255
     b7c:	7f ef       	ldi	r23, 0xFF	; 255
     b7e:	c5 01       	movw	r24, r10
     b80:	0e 94 a5 09 	call	0x134a	; 0x134a <strnlen_P>
     b84:	4c 01       	movw	r8, r24
     b86:	f3 2d       	mov	r31, r3
     b88:	f0 68       	ori	r31, 0x80	; 128
     b8a:	3f 2e       	mov	r3, r31
     b8c:	82 01       	movw	r16, r4
     b8e:	33 fc       	sbrc	r3, 3
     b90:	1b c0       	rjmp	.+54     	; 0xbc8 <vfprintf+0x1c2>
     b92:	82 2d       	mov	r24, r2
     b94:	90 e0       	ldi	r25, 0x00	; 0
     b96:	88 16       	cp	r8, r24
     b98:	99 06       	cpc	r9, r25
     b9a:	b0 f4       	brcc	.+44     	; 0xbc8 <vfprintf+0x1c2>
     b9c:	b6 01       	movw	r22, r12
     b9e:	80 e2       	ldi	r24, 0x20	; 32
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <fputc>
     ba6:	2a 94       	dec	r2
     ba8:	f4 cf       	rjmp	.-24     	; 0xb92 <vfprintf+0x18c>
     baa:	f5 01       	movw	r30, r10
     bac:	37 fc       	sbrc	r3, 7
     bae:	85 91       	lpm	r24, Z+
     bb0:	37 fe       	sbrs	r3, 7
     bb2:	81 91       	ld	r24, Z+
     bb4:	5f 01       	movw	r10, r30
     bb6:	b6 01       	movw	r22, r12
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <fputc>
     bbe:	21 10       	cpse	r2, r1
     bc0:	2a 94       	dec	r2
     bc2:	21 e0       	ldi	r18, 0x01	; 1
     bc4:	82 1a       	sub	r8, r18
     bc6:	91 08       	sbc	r9, r1
     bc8:	81 14       	cp	r8, r1
     bca:	91 04       	cpc	r9, r1
     bcc:	71 f7       	brne	.-36     	; 0xbaa <vfprintf+0x1a4>
     bce:	e8 c0       	rjmp	.+464    	; 0xda0 <vfprintf+0x39a>
     bd0:	84 36       	cpi	r24, 0x64	; 100
     bd2:	11 f0       	breq	.+4      	; 0xbd8 <vfprintf+0x1d2>
     bd4:	89 36       	cpi	r24, 0x69	; 105
     bd6:	41 f5       	brne	.+80     	; 0xc28 <vfprintf+0x222>
     bd8:	f8 01       	movw	r30, r16
     bda:	37 fe       	sbrs	r3, 7
     bdc:	07 c0       	rjmp	.+14     	; 0xbec <vfprintf+0x1e6>
     bde:	60 81       	ld	r22, Z
     be0:	71 81       	ldd	r23, Z+1	; 0x01
     be2:	82 81       	ldd	r24, Z+2	; 0x02
     be4:	93 81       	ldd	r25, Z+3	; 0x03
     be6:	0c 5f       	subi	r16, 0xFC	; 252
     be8:	1f 4f       	sbci	r17, 0xFF	; 255
     bea:	08 c0       	rjmp	.+16     	; 0xbfc <vfprintf+0x1f6>
     bec:	60 81       	ld	r22, Z
     bee:	71 81       	ldd	r23, Z+1	; 0x01
     bf0:	07 2e       	mov	r0, r23
     bf2:	00 0c       	add	r0, r0
     bf4:	88 0b       	sbc	r24, r24
     bf6:	99 0b       	sbc	r25, r25
     bf8:	0e 5f       	subi	r16, 0xFE	; 254
     bfa:	1f 4f       	sbci	r17, 0xFF	; 255
     bfc:	f3 2d       	mov	r31, r3
     bfe:	ff 76       	andi	r31, 0x6F	; 111
     c00:	3f 2e       	mov	r3, r31
     c02:	97 ff       	sbrs	r25, 7
     c04:	09 c0       	rjmp	.+18     	; 0xc18 <vfprintf+0x212>
     c06:	90 95       	com	r25
     c08:	80 95       	com	r24
     c0a:	70 95       	com	r23
     c0c:	61 95       	neg	r22
     c0e:	7f 4f       	sbci	r23, 0xFF	; 255
     c10:	8f 4f       	sbci	r24, 0xFF	; 255
     c12:	9f 4f       	sbci	r25, 0xFF	; 255
     c14:	f0 68       	ori	r31, 0x80	; 128
     c16:	3f 2e       	mov	r3, r31
     c18:	2a e0       	ldi	r18, 0x0A	; 10
     c1a:	30 e0       	ldi	r19, 0x00	; 0
     c1c:	a3 01       	movw	r20, r6
     c1e:	0e 94 4e 0a 	call	0x149c	; 0x149c <__ultoa_invert>
     c22:	88 2e       	mov	r8, r24
     c24:	86 18       	sub	r8, r6
     c26:	45 c0       	rjmp	.+138    	; 0xcb2 <vfprintf+0x2ac>
     c28:	85 37       	cpi	r24, 0x75	; 117
     c2a:	31 f4       	brne	.+12     	; 0xc38 <vfprintf+0x232>
     c2c:	23 2d       	mov	r18, r3
     c2e:	2f 7e       	andi	r18, 0xEF	; 239
     c30:	b2 2e       	mov	r11, r18
     c32:	2a e0       	ldi	r18, 0x0A	; 10
     c34:	30 e0       	ldi	r19, 0x00	; 0
     c36:	25 c0       	rjmp	.+74     	; 0xc82 <vfprintf+0x27c>
     c38:	93 2d       	mov	r25, r3
     c3a:	99 7f       	andi	r25, 0xF9	; 249
     c3c:	b9 2e       	mov	r11, r25
     c3e:	8f 36       	cpi	r24, 0x6F	; 111
     c40:	c1 f0       	breq	.+48     	; 0xc72 <vfprintf+0x26c>
     c42:	18 f4       	brcc	.+6      	; 0xc4a <vfprintf+0x244>
     c44:	88 35       	cpi	r24, 0x58	; 88
     c46:	79 f0       	breq	.+30     	; 0xc66 <vfprintf+0x260>
     c48:	b5 c0       	rjmp	.+362    	; 0xdb4 <vfprintf+0x3ae>
     c4a:	80 37       	cpi	r24, 0x70	; 112
     c4c:	19 f0       	breq	.+6      	; 0xc54 <vfprintf+0x24e>
     c4e:	88 37       	cpi	r24, 0x78	; 120
     c50:	21 f0       	breq	.+8      	; 0xc5a <vfprintf+0x254>
     c52:	b0 c0       	rjmp	.+352    	; 0xdb4 <vfprintf+0x3ae>
     c54:	e9 2f       	mov	r30, r25
     c56:	e0 61       	ori	r30, 0x10	; 16
     c58:	be 2e       	mov	r11, r30
     c5a:	b4 fe       	sbrs	r11, 4
     c5c:	0d c0       	rjmp	.+26     	; 0xc78 <vfprintf+0x272>
     c5e:	fb 2d       	mov	r31, r11
     c60:	f4 60       	ori	r31, 0x04	; 4
     c62:	bf 2e       	mov	r11, r31
     c64:	09 c0       	rjmp	.+18     	; 0xc78 <vfprintf+0x272>
     c66:	34 fe       	sbrs	r3, 4
     c68:	0a c0       	rjmp	.+20     	; 0xc7e <vfprintf+0x278>
     c6a:	29 2f       	mov	r18, r25
     c6c:	26 60       	ori	r18, 0x06	; 6
     c6e:	b2 2e       	mov	r11, r18
     c70:	06 c0       	rjmp	.+12     	; 0xc7e <vfprintf+0x278>
     c72:	28 e0       	ldi	r18, 0x08	; 8
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	05 c0       	rjmp	.+10     	; 0xc82 <vfprintf+0x27c>
     c78:	20 e1       	ldi	r18, 0x10	; 16
     c7a:	30 e0       	ldi	r19, 0x00	; 0
     c7c:	02 c0       	rjmp	.+4      	; 0xc82 <vfprintf+0x27c>
     c7e:	20 e1       	ldi	r18, 0x10	; 16
     c80:	32 e0       	ldi	r19, 0x02	; 2
     c82:	f8 01       	movw	r30, r16
     c84:	b7 fe       	sbrs	r11, 7
     c86:	07 c0       	rjmp	.+14     	; 0xc96 <vfprintf+0x290>
     c88:	60 81       	ld	r22, Z
     c8a:	71 81       	ldd	r23, Z+1	; 0x01
     c8c:	82 81       	ldd	r24, Z+2	; 0x02
     c8e:	93 81       	ldd	r25, Z+3	; 0x03
     c90:	0c 5f       	subi	r16, 0xFC	; 252
     c92:	1f 4f       	sbci	r17, 0xFF	; 255
     c94:	06 c0       	rjmp	.+12     	; 0xca2 <vfprintf+0x29c>
     c96:	60 81       	ld	r22, Z
     c98:	71 81       	ldd	r23, Z+1	; 0x01
     c9a:	80 e0       	ldi	r24, 0x00	; 0
     c9c:	90 e0       	ldi	r25, 0x00	; 0
     c9e:	0e 5f       	subi	r16, 0xFE	; 254
     ca0:	1f 4f       	sbci	r17, 0xFF	; 255
     ca2:	a3 01       	movw	r20, r6
     ca4:	0e 94 4e 0a 	call	0x149c	; 0x149c <__ultoa_invert>
     ca8:	88 2e       	mov	r8, r24
     caa:	86 18       	sub	r8, r6
     cac:	fb 2d       	mov	r31, r11
     cae:	ff 77       	andi	r31, 0x7F	; 127
     cb0:	3f 2e       	mov	r3, r31
     cb2:	36 fe       	sbrs	r3, 6
     cb4:	0d c0       	rjmp	.+26     	; 0xcd0 <vfprintf+0x2ca>
     cb6:	23 2d       	mov	r18, r3
     cb8:	2e 7f       	andi	r18, 0xFE	; 254
     cba:	a2 2e       	mov	r10, r18
     cbc:	89 14       	cp	r8, r9
     cbe:	58 f4       	brcc	.+22     	; 0xcd6 <vfprintf+0x2d0>
     cc0:	34 fe       	sbrs	r3, 4
     cc2:	0b c0       	rjmp	.+22     	; 0xcda <vfprintf+0x2d4>
     cc4:	32 fc       	sbrc	r3, 2
     cc6:	09 c0       	rjmp	.+18     	; 0xcda <vfprintf+0x2d4>
     cc8:	83 2d       	mov	r24, r3
     cca:	8e 7e       	andi	r24, 0xEE	; 238
     ccc:	a8 2e       	mov	r10, r24
     cce:	05 c0       	rjmp	.+10     	; 0xcda <vfprintf+0x2d4>
     cd0:	b8 2c       	mov	r11, r8
     cd2:	a3 2c       	mov	r10, r3
     cd4:	03 c0       	rjmp	.+6      	; 0xcdc <vfprintf+0x2d6>
     cd6:	b8 2c       	mov	r11, r8
     cd8:	01 c0       	rjmp	.+2      	; 0xcdc <vfprintf+0x2d6>
     cda:	b9 2c       	mov	r11, r9
     cdc:	a4 fe       	sbrs	r10, 4
     cde:	0f c0       	rjmp	.+30     	; 0xcfe <vfprintf+0x2f8>
     ce0:	fe 01       	movw	r30, r28
     ce2:	e8 0d       	add	r30, r8
     ce4:	f1 1d       	adc	r31, r1
     ce6:	80 81       	ld	r24, Z
     ce8:	80 33       	cpi	r24, 0x30	; 48
     cea:	21 f4       	brne	.+8      	; 0xcf4 <vfprintf+0x2ee>
     cec:	9a 2d       	mov	r25, r10
     cee:	99 7e       	andi	r25, 0xE9	; 233
     cf0:	a9 2e       	mov	r10, r25
     cf2:	09 c0       	rjmp	.+18     	; 0xd06 <vfprintf+0x300>
     cf4:	a2 fe       	sbrs	r10, 2
     cf6:	06 c0       	rjmp	.+12     	; 0xd04 <vfprintf+0x2fe>
     cf8:	b3 94       	inc	r11
     cfa:	b3 94       	inc	r11
     cfc:	04 c0       	rjmp	.+8      	; 0xd06 <vfprintf+0x300>
     cfe:	8a 2d       	mov	r24, r10
     d00:	86 78       	andi	r24, 0x86	; 134
     d02:	09 f0       	breq	.+2      	; 0xd06 <vfprintf+0x300>
     d04:	b3 94       	inc	r11
     d06:	a3 fc       	sbrc	r10, 3
     d08:	11 c0       	rjmp	.+34     	; 0xd2c <vfprintf+0x326>
     d0a:	a0 fe       	sbrs	r10, 0
     d0c:	06 c0       	rjmp	.+12     	; 0xd1a <vfprintf+0x314>
     d0e:	b2 14       	cp	r11, r2
     d10:	88 f4       	brcc	.+34     	; 0xd34 <vfprintf+0x32e>
     d12:	28 0c       	add	r2, r8
     d14:	92 2c       	mov	r9, r2
     d16:	9b 18       	sub	r9, r11
     d18:	0e c0       	rjmp	.+28     	; 0xd36 <vfprintf+0x330>
     d1a:	b2 14       	cp	r11, r2
     d1c:	60 f4       	brcc	.+24     	; 0xd36 <vfprintf+0x330>
     d1e:	b6 01       	movw	r22, r12
     d20:	80 e2       	ldi	r24, 0x20	; 32
     d22:	90 e0       	ldi	r25, 0x00	; 0
     d24:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <fputc>
     d28:	b3 94       	inc	r11
     d2a:	f7 cf       	rjmp	.-18     	; 0xd1a <vfprintf+0x314>
     d2c:	b2 14       	cp	r11, r2
     d2e:	18 f4       	brcc	.+6      	; 0xd36 <vfprintf+0x330>
     d30:	2b 18       	sub	r2, r11
     d32:	02 c0       	rjmp	.+4      	; 0xd38 <vfprintf+0x332>
     d34:	98 2c       	mov	r9, r8
     d36:	21 2c       	mov	r2, r1
     d38:	a4 fe       	sbrs	r10, 4
     d3a:	10 c0       	rjmp	.+32     	; 0xd5c <vfprintf+0x356>
     d3c:	b6 01       	movw	r22, r12
     d3e:	80 e3       	ldi	r24, 0x30	; 48
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <fputc>
     d46:	a2 fe       	sbrs	r10, 2
     d48:	17 c0       	rjmp	.+46     	; 0xd78 <vfprintf+0x372>
     d4a:	a1 fc       	sbrc	r10, 1
     d4c:	03 c0       	rjmp	.+6      	; 0xd54 <vfprintf+0x34e>
     d4e:	88 e7       	ldi	r24, 0x78	; 120
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	02 c0       	rjmp	.+4      	; 0xd58 <vfprintf+0x352>
     d54:	88 e5       	ldi	r24, 0x58	; 88
     d56:	90 e0       	ldi	r25, 0x00	; 0
     d58:	b6 01       	movw	r22, r12
     d5a:	0c c0       	rjmp	.+24     	; 0xd74 <vfprintf+0x36e>
     d5c:	8a 2d       	mov	r24, r10
     d5e:	86 78       	andi	r24, 0x86	; 134
     d60:	59 f0       	breq	.+22     	; 0xd78 <vfprintf+0x372>
     d62:	a1 fe       	sbrs	r10, 1
     d64:	02 c0       	rjmp	.+4      	; 0xd6a <vfprintf+0x364>
     d66:	8b e2       	ldi	r24, 0x2B	; 43
     d68:	01 c0       	rjmp	.+2      	; 0xd6c <vfprintf+0x366>
     d6a:	80 e2       	ldi	r24, 0x20	; 32
     d6c:	a7 fc       	sbrc	r10, 7
     d6e:	8d e2       	ldi	r24, 0x2D	; 45
     d70:	b6 01       	movw	r22, r12
     d72:	90 e0       	ldi	r25, 0x00	; 0
     d74:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <fputc>
     d78:	89 14       	cp	r8, r9
     d7a:	38 f4       	brcc	.+14     	; 0xd8a <vfprintf+0x384>
     d7c:	b6 01       	movw	r22, r12
     d7e:	80 e3       	ldi	r24, 0x30	; 48
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <fputc>
     d86:	9a 94       	dec	r9
     d88:	f7 cf       	rjmp	.-18     	; 0xd78 <vfprintf+0x372>
     d8a:	8a 94       	dec	r8
     d8c:	f3 01       	movw	r30, r6
     d8e:	e8 0d       	add	r30, r8
     d90:	f1 1d       	adc	r31, r1
     d92:	80 81       	ld	r24, Z
     d94:	b6 01       	movw	r22, r12
     d96:	90 e0       	ldi	r25, 0x00	; 0
     d98:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <fputc>
     d9c:	81 10       	cpse	r8, r1
     d9e:	f5 cf       	rjmp	.-22     	; 0xd8a <vfprintf+0x384>
     da0:	22 20       	and	r2, r2
     da2:	09 f4       	brne	.+2      	; 0xda6 <vfprintf+0x3a0>
     da4:	42 ce       	rjmp	.-892    	; 0xa2a <vfprintf+0x24>
     da6:	b6 01       	movw	r22, r12
     da8:	80 e2       	ldi	r24, 0x20	; 32
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <fputc>
     db0:	2a 94       	dec	r2
     db2:	f6 cf       	rjmp	.-20     	; 0xda0 <vfprintf+0x39a>
     db4:	f6 01       	movw	r30, r12
     db6:	86 81       	ldd	r24, Z+6	; 0x06
     db8:	97 81       	ldd	r25, Z+7	; 0x07
     dba:	02 c0       	rjmp	.+4      	; 0xdc0 <vfprintf+0x3ba>
     dbc:	8f ef       	ldi	r24, 0xFF	; 255
     dbe:	9f ef       	ldi	r25, 0xFF	; 255
     dc0:	2b 96       	adiw	r28, 0x0b	; 11
     dc2:	e2 e1       	ldi	r30, 0x12	; 18
     dc4:	0c 94 cb 0a 	jmp	0x1596	; 0x1596 <__epilogue_restores__>

00000dc8 <putval>:
     dc8:	20 fd       	sbrc	r18, 0
     dca:	09 c0       	rjmp	.+18     	; 0xdde <putval+0x16>
     dcc:	fc 01       	movw	r30, r24
     dce:	23 fd       	sbrc	r18, 3
     dd0:	05 c0       	rjmp	.+10     	; 0xddc <putval+0x14>
     dd2:	22 ff       	sbrs	r18, 2
     dd4:	02 c0       	rjmp	.+4      	; 0xdda <putval+0x12>
     dd6:	73 83       	std	Z+3, r23	; 0x03
     dd8:	62 83       	std	Z+2, r22	; 0x02
     dda:	51 83       	std	Z+1, r21	; 0x01
     ddc:	40 83       	st	Z, r20
     dde:	08 95       	ret

00000de0 <mulacc>:
     de0:	44 fd       	sbrc	r20, 4
     de2:	17 c0       	rjmp	.+46     	; 0xe12 <mulacc+0x32>
     de4:	46 fd       	sbrc	r20, 6
     de6:	17 c0       	rjmp	.+46     	; 0xe16 <mulacc+0x36>
     de8:	ab 01       	movw	r20, r22
     dea:	bc 01       	movw	r22, r24
     dec:	da 01       	movw	r26, r20
     dee:	fb 01       	movw	r30, r22
     df0:	aa 0f       	add	r26, r26
     df2:	bb 1f       	adc	r27, r27
     df4:	ee 1f       	adc	r30, r30
     df6:	ff 1f       	adc	r31, r31
     df8:	10 94       	com	r1
     dfa:	d1 f7       	brne	.-12     	; 0xdf0 <mulacc+0x10>
     dfc:	4a 0f       	add	r20, r26
     dfe:	5b 1f       	adc	r21, r27
     e00:	6e 1f       	adc	r22, r30
     e02:	7f 1f       	adc	r23, r31
     e04:	cb 01       	movw	r24, r22
     e06:	ba 01       	movw	r22, r20
     e08:	66 0f       	add	r22, r22
     e0a:	77 1f       	adc	r23, r23
     e0c:	88 1f       	adc	r24, r24
     e0e:	99 1f       	adc	r25, r25
     e10:	09 c0       	rjmp	.+18     	; 0xe24 <mulacc+0x44>
     e12:	33 e0       	ldi	r19, 0x03	; 3
     e14:	01 c0       	rjmp	.+2      	; 0xe18 <mulacc+0x38>
     e16:	34 e0       	ldi	r19, 0x04	; 4
     e18:	66 0f       	add	r22, r22
     e1a:	77 1f       	adc	r23, r23
     e1c:	88 1f       	adc	r24, r24
     e1e:	99 1f       	adc	r25, r25
     e20:	31 50       	subi	r19, 0x01	; 1
     e22:	d1 f7       	brne	.-12     	; 0xe18 <mulacc+0x38>
     e24:	62 0f       	add	r22, r18
     e26:	71 1d       	adc	r23, r1
     e28:	81 1d       	adc	r24, r1
     e2a:	91 1d       	adc	r25, r1
     e2c:	08 95       	ret

00000e2e <skip_spaces>:
     e2e:	0f 93       	push	r16
     e30:	1f 93       	push	r17
     e32:	cf 93       	push	r28
     e34:	df 93       	push	r29
     e36:	8c 01       	movw	r16, r24
     e38:	c8 01       	movw	r24, r16
     e3a:	0e 94 bb 09 	call	0x1376	; 0x1376 <fgetc>
     e3e:	ec 01       	movw	r28, r24
     e40:	97 fd       	sbrc	r25, 7
     e42:	08 c0       	rjmp	.+16     	; 0xe54 <skip_spaces+0x26>
     e44:	0e 94 91 09 	call	0x1322	; 0x1322 <isspace>
     e48:	89 2b       	or	r24, r25
     e4a:	b1 f7       	brne	.-20     	; 0xe38 <skip_spaces+0xa>
     e4c:	b8 01       	movw	r22, r16
     e4e:	ce 01       	movw	r24, r28
     e50:	0e 94 35 0a 	call	0x146a	; 0x146a <ungetc>
     e54:	ce 01       	movw	r24, r28
     e56:	df 91       	pop	r29
     e58:	cf 91       	pop	r28
     e5a:	1f 91       	pop	r17
     e5c:	0f 91       	pop	r16
     e5e:	08 95       	ret

00000e60 <conv_int>:
     e60:	8f 92       	push	r8
     e62:	9f 92       	push	r9
     e64:	af 92       	push	r10
     e66:	bf 92       	push	r11
     e68:	ef 92       	push	r14
     e6a:	ff 92       	push	r15
     e6c:	0f 93       	push	r16
     e6e:	1f 93       	push	r17
     e70:	cf 93       	push	r28
     e72:	df 93       	push	r29
     e74:	8c 01       	movw	r16, r24
     e76:	d6 2f       	mov	r29, r22
     e78:	7a 01       	movw	r14, r20
     e7a:	b2 2e       	mov	r11, r18
     e7c:	0e 94 bb 09 	call	0x1376	; 0x1376 <fgetc>
     e80:	9c 01       	movw	r18, r24
     e82:	33 27       	eor	r19, r19
     e84:	2b 32       	cpi	r18, 0x2B	; 43
     e86:	31 05       	cpc	r19, r1
     e88:	31 f0       	breq	.+12     	; 0xe96 <conv_int+0x36>
     e8a:	2d 32       	cpi	r18, 0x2D	; 45
     e8c:	31 05       	cpc	r19, r1
     e8e:	61 f4       	brne	.+24     	; 0xea8 <conv_int+0x48>
     e90:	8b 2d       	mov	r24, r11
     e92:	80 68       	ori	r24, 0x80	; 128
     e94:	b8 2e       	mov	r11, r24
     e96:	d1 50       	subi	r29, 0x01	; 1
     e98:	11 f4       	brne	.+4      	; 0xe9e <conv_int+0x3e>
     e9a:	80 e0       	ldi	r24, 0x00	; 0
     e9c:	68 c0       	rjmp	.+208    	; 0xf6e <conv_int+0x10e>
     e9e:	c8 01       	movw	r24, r16
     ea0:	0e 94 bb 09 	call	0x1376	; 0x1376 <fgetc>
     ea4:	97 fd       	sbrc	r25, 7
     ea6:	f9 cf       	rjmp	.-14     	; 0xe9a <conv_int+0x3a>
     ea8:	cb 2d       	mov	r28, r11
     eaa:	cd 7f       	andi	r28, 0xFD	; 253
     eac:	2b 2d       	mov	r18, r11
     eae:	20 73       	andi	r18, 0x30	; 48
     eb0:	09 f5       	brne	.+66     	; 0xef4 <conv_int+0x94>
     eb2:	80 33       	cpi	r24, 0x30	; 48
     eb4:	f9 f4       	brne	.+62     	; 0xef4 <conv_int+0x94>
     eb6:	aa 24       	eor	r10, r10
     eb8:	aa 94       	dec	r10
     eba:	ad 0e       	add	r10, r29
     ebc:	09 f4       	brne	.+2      	; 0xec0 <conv_int+0x60>
     ebe:	43 c0       	rjmp	.+134    	; 0xf46 <conv_int+0xe6>
     ec0:	c8 01       	movw	r24, r16
     ec2:	0e 94 bb 09 	call	0x1376	; 0x1376 <fgetc>
     ec6:	97 fd       	sbrc	r25, 7
     ec8:	3e c0       	rjmp	.+124    	; 0xf46 <conv_int+0xe6>
     eca:	9c 01       	movw	r18, r24
     ecc:	2f 7d       	andi	r18, 0xDF	; 223
     ece:	33 27       	eor	r19, r19
     ed0:	28 35       	cpi	r18, 0x58	; 88
     ed2:	31 05       	cpc	r19, r1
     ed4:	49 f4       	brne	.+18     	; 0xee8 <conv_int+0x88>
     ed6:	c2 64       	ori	r28, 0x42	; 66
     ed8:	d2 50       	subi	r29, 0x02	; 2
     eda:	a9 f1       	breq	.+106    	; 0xf46 <conv_int+0xe6>
     edc:	c8 01       	movw	r24, r16
     ede:	0e 94 bb 09 	call	0x1376	; 0x1376 <fgetc>
     ee2:	97 ff       	sbrs	r25, 7
     ee4:	07 c0       	rjmp	.+14     	; 0xef4 <conv_int+0x94>
     ee6:	2f c0       	rjmp	.+94     	; 0xf46 <conv_int+0xe6>
     ee8:	b6 fe       	sbrs	r11, 6
     eea:	02 c0       	rjmp	.+4      	; 0xef0 <conv_int+0x90>
     eec:	c2 60       	ori	r28, 0x02	; 2
     eee:	01 c0       	rjmp	.+2      	; 0xef2 <conv_int+0x92>
     ef0:	c2 61       	ori	r28, 0x12	; 18
     ef2:	da 2d       	mov	r29, r10
     ef4:	81 2c       	mov	r8, r1
     ef6:	91 2c       	mov	r9, r1
     ef8:	54 01       	movw	r10, r8
     efa:	20 ed       	ldi	r18, 0xD0	; 208
     efc:	28 0f       	add	r18, r24
     efe:	28 30       	cpi	r18, 0x08	; 8
     f00:	80 f0       	brcs	.+32     	; 0xf22 <conv_int+0xc2>
     f02:	c4 ff       	sbrs	r28, 4
     f04:	04 c0       	rjmp	.+8      	; 0xf0e <conv_int+0xae>
     f06:	b8 01       	movw	r22, r16
     f08:	0e 94 35 0a 	call	0x146a	; 0x146a <ungetc>
     f0c:	19 c0       	rjmp	.+50     	; 0xf40 <conv_int+0xe0>
     f0e:	2a 30       	cpi	r18, 0x0A	; 10
     f10:	40 f0       	brcs	.+16     	; 0xf22 <conv_int+0xc2>
     f12:	c6 ff       	sbrs	r28, 6
     f14:	f8 cf       	rjmp	.-16     	; 0xf06 <conv_int+0xa6>
     f16:	2f 7d       	andi	r18, 0xDF	; 223
     f18:	3f ee       	ldi	r19, 0xEF	; 239
     f1a:	32 0f       	add	r19, r18
     f1c:	36 30       	cpi	r19, 0x06	; 6
     f1e:	98 f7       	brcc	.-26     	; 0xf06 <conv_int+0xa6>
     f20:	27 50       	subi	r18, 0x07	; 7
     f22:	4c 2f       	mov	r20, r28
     f24:	c5 01       	movw	r24, r10
     f26:	b4 01       	movw	r22, r8
     f28:	0e 94 f0 06 	call	0xde0	; 0xde0 <mulacc>
     f2c:	4b 01       	movw	r8, r22
     f2e:	5c 01       	movw	r10, r24
     f30:	c2 60       	ori	r28, 0x02	; 2
     f32:	d1 50       	subi	r29, 0x01	; 1
     f34:	59 f0       	breq	.+22     	; 0xf4c <conv_int+0xec>
     f36:	c8 01       	movw	r24, r16
     f38:	0e 94 bb 09 	call	0x1376	; 0x1376 <fgetc>
     f3c:	97 ff       	sbrs	r25, 7
     f3e:	dd cf       	rjmp	.-70     	; 0xefa <conv_int+0x9a>
     f40:	c1 fd       	sbrc	r28, 1
     f42:	04 c0       	rjmp	.+8      	; 0xf4c <conv_int+0xec>
     f44:	aa cf       	rjmp	.-172    	; 0xe9a <conv_int+0x3a>
     f46:	81 2c       	mov	r8, r1
     f48:	91 2c       	mov	r9, r1
     f4a:	54 01       	movw	r10, r8
     f4c:	c7 ff       	sbrs	r28, 7
     f4e:	08 c0       	rjmp	.+16     	; 0xf60 <conv_int+0x100>
     f50:	b0 94       	com	r11
     f52:	a0 94       	com	r10
     f54:	90 94       	com	r9
     f56:	80 94       	com	r8
     f58:	81 1c       	adc	r8, r1
     f5a:	91 1c       	adc	r9, r1
     f5c:	a1 1c       	adc	r10, r1
     f5e:	b1 1c       	adc	r11, r1
     f60:	2c 2f       	mov	r18, r28
     f62:	b5 01       	movw	r22, r10
     f64:	a4 01       	movw	r20, r8
     f66:	c7 01       	movw	r24, r14
     f68:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <putval>
     f6c:	81 e0       	ldi	r24, 0x01	; 1
     f6e:	df 91       	pop	r29
     f70:	cf 91       	pop	r28
     f72:	1f 91       	pop	r17
     f74:	0f 91       	pop	r16
     f76:	ff 90       	pop	r15
     f78:	ef 90       	pop	r14
     f7a:	bf 90       	pop	r11
     f7c:	af 90       	pop	r10
     f7e:	9f 90       	pop	r9
     f80:	8f 90       	pop	r8
     f82:	08 95       	ret

00000f84 <conv_brk>:
     f84:	a0 e2       	ldi	r26, 0x20	; 32
     f86:	b0 e0       	ldi	r27, 0x00	; 0
     f88:	e8 ec       	ldi	r30, 0xC8	; 200
     f8a:	f7 e0       	ldi	r31, 0x07	; 7
     f8c:	0c 94 b2 0a 	jmp	0x1564	; 0x1564 <__prologue_saves__+0x6>
     f90:	5c 01       	movw	r10, r24
     f92:	96 2e       	mov	r9, r22
     f94:	7a 01       	movw	r14, r20
     f96:	f9 01       	movw	r30, r18
     f98:	8e 01       	movw	r16, r28
     f9a:	0f 5f       	subi	r16, 0xFF	; 255
     f9c:	1f 4f       	sbci	r17, 0xFF	; 255
     f9e:	68 01       	movw	r12, r16
     fa0:	80 e2       	ldi	r24, 0x20	; 32
     fa2:	d8 01       	movw	r26, r16
     fa4:	1d 92       	st	X+, r1
     fa6:	8a 95       	dec	r24
     fa8:	e9 f7       	brne	.-6      	; 0xfa4 <conv_brk+0x20>
     faa:	d5 01       	movw	r26, r10
     fac:	13 96       	adiw	r26, 0x03	; 3
     fae:	8c 90       	ld	r8, X
     fb0:	80 e0       	ldi	r24, 0x00	; 0
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	61 2c       	mov	r6, r1
     fb6:	71 2c       	mov	r7, r1
     fb8:	30 e0       	ldi	r19, 0x00	; 0
     fba:	61 e0       	ldi	r22, 0x01	; 1
     fbc:	70 e0       	ldi	r23, 0x00	; 0
     fbe:	83 fc       	sbrc	r8, 3
     fc0:	25 91       	lpm	r18, Z+
     fc2:	83 fe       	sbrs	r8, 3
     fc4:	21 91       	ld	r18, Z+
     fc6:	8f 01       	movw	r16, r30
     fc8:	52 2e       	mov	r5, r18
     fca:	21 11       	cpse	r18, r1
     fcc:	03 c0       	rjmp	.+6      	; 0xfd4 <conv_brk+0x50>
     fce:	80 e0       	ldi	r24, 0x00	; 0
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	92 c0       	rjmp	.+292    	; 0x10f8 <conv_brk+0x174>
     fd4:	2e 35       	cpi	r18, 0x5E	; 94
     fd6:	11 f4       	brne	.+4      	; 0xfdc <conv_brk+0x58>
     fd8:	00 97       	sbiw	r24, 0x00	; 0
     fda:	51 f1       	breq	.+84     	; 0x1030 <conv_brk+0xac>
     fdc:	43 2f       	mov	r20, r19
     fde:	50 e0       	ldi	r21, 0x00	; 0
     fe0:	48 17       	cp	r20, r24
     fe2:	59 07       	cpc	r21, r25
     fe4:	3c f4       	brge	.+14     	; 0xff4 <conv_brk+0x70>
     fe6:	2d 35       	cpi	r18, 0x5D	; 93
     fe8:	59 f1       	breq	.+86     	; 0x1040 <conv_brk+0xbc>
     fea:	2d 32       	cpi	r18, 0x2D	; 45
     fec:	19 f4       	brne	.+6      	; 0xff4 <conv_brk+0x70>
     fee:	77 20       	and	r7, r7
     ff0:	09 f1       	breq	.+66     	; 0x1034 <conv_brk+0xb0>
     ff2:	03 c0       	rjmp	.+6      	; 0xffa <conv_brk+0x76>
     ff4:	77 20       	and	r7, r7
     ff6:	09 f4       	brne	.+2      	; 0xffa <conv_brk+0x76>
     ff8:	6a c0       	rjmp	.+212    	; 0x10ce <conv_brk+0x14a>
     ffa:	45 2d       	mov	r20, r5
     ffc:	46 95       	lsr	r20
     ffe:	46 95       	lsr	r20
    1000:	46 95       	lsr	r20
    1002:	d6 01       	movw	r26, r12
    1004:	a4 0f       	add	r26, r20
    1006:	b1 1d       	adc	r27, r1
    1008:	45 2d       	mov	r20, r5
    100a:	47 70       	andi	r20, 0x07	; 7
    100c:	8b 01       	movw	r16, r22
    100e:	02 c0       	rjmp	.+4      	; 0x1014 <conv_brk+0x90>
    1010:	00 0f       	add	r16, r16
    1012:	11 1f       	adc	r17, r17
    1014:	4a 95       	dec	r20
    1016:	e2 f7       	brpl	.-8      	; 0x1010 <conv_brk+0x8c>
    1018:	a8 01       	movw	r20, r16
    101a:	5c 91       	ld	r21, X
    101c:	45 2b       	or	r20, r21
    101e:	4c 93       	st	X, r20
    1020:	65 14       	cp	r6, r5
    1022:	59 f0       	breq	.+22     	; 0x103a <conv_brk+0xb6>
    1024:	56 14       	cp	r5, r6
    1026:	10 f4       	brcc	.+4      	; 0x102c <conv_brk+0xa8>
    1028:	53 94       	inc	r5
    102a:	e7 cf       	rjmp	.-50     	; 0xffa <conv_brk+0x76>
    102c:	5a 94       	dec	r5
    102e:	e5 cf       	rjmp	.-54     	; 0xffa <conv_brk+0x76>
    1030:	31 e0       	ldi	r19, 0x01	; 1
    1032:	04 c0       	rjmp	.+8      	; 0x103c <conv_brk+0xb8>
    1034:	77 24       	eor	r7, r7
    1036:	73 94       	inc	r7
    1038:	01 c0       	rjmp	.+2      	; 0x103c <conv_brk+0xb8>
    103a:	71 2c       	mov	r7, r1
    103c:	01 96       	adiw	r24, 0x01	; 1
    103e:	bf cf       	rjmp	.-130    	; 0xfbe <conv_brk+0x3a>
    1040:	77 20       	and	r7, r7
    1042:	19 f0       	breq	.+6      	; 0x104a <conv_brk+0xc6>
    1044:	8e 81       	ldd	r24, Y+6	; 0x06
    1046:	80 62       	ori	r24, 0x20	; 32
    1048:	8e 83       	std	Y+6, r24	; 0x06
    104a:	31 11       	cpse	r19, r1
    104c:	03 c0       	rjmp	.+6      	; 0x1054 <conv_brk+0xd0>
    104e:	88 24       	eor	r8, r8
    1050:	83 94       	inc	r8
    1052:	17 c0       	rjmp	.+46     	; 0x1082 <conv_brk+0xfe>
    1054:	f6 01       	movw	r30, r12
    1056:	9e 01       	movw	r18, r28
    1058:	2f 5d       	subi	r18, 0xDF	; 223
    105a:	3f 4f       	sbci	r19, 0xFF	; 255
    105c:	80 81       	ld	r24, Z
    105e:	80 95       	com	r24
    1060:	81 93       	st	Z+, r24
    1062:	2e 17       	cp	r18, r30
    1064:	3f 07       	cpc	r19, r31
    1066:	d1 f7       	brne	.-12     	; 0x105c <conv_brk+0xd8>
    1068:	f2 cf       	rjmp	.-28     	; 0x104e <conv_brk+0xca>
    106a:	e1 14       	cp	r14, r1
    106c:	f1 04       	cpc	r15, r1
    106e:	29 f0       	breq	.+10     	; 0x107a <conv_brk+0xf6>
    1070:	d7 01       	movw	r26, r14
    1072:	8c 93       	st	X, r24
    1074:	f7 01       	movw	r30, r14
    1076:	31 96       	adiw	r30, 0x01	; 1
    1078:	7f 01       	movw	r14, r30
    107a:	9a 94       	dec	r9
    107c:	81 2c       	mov	r8, r1
    107e:	99 20       	and	r9, r9
    1080:	f9 f0       	breq	.+62     	; 0x10c0 <conv_brk+0x13c>
    1082:	c5 01       	movw	r24, r10
    1084:	0e 94 bb 09 	call	0x1376	; 0x1376 <fgetc>
    1088:	97 fd       	sbrc	r25, 7
    108a:	18 c0       	rjmp	.+48     	; 0x10bc <conv_brk+0x138>
    108c:	fc 01       	movw	r30, r24
    108e:	ff 27       	eor	r31, r31
    1090:	23 e0       	ldi	r18, 0x03	; 3
    1092:	f5 95       	asr	r31
    1094:	e7 95       	ror	r30
    1096:	2a 95       	dec	r18
    1098:	e1 f7       	brne	.-8      	; 0x1092 <conv_brk+0x10e>
    109a:	ec 0d       	add	r30, r12
    109c:	fd 1d       	adc	r31, r13
    109e:	20 81       	ld	r18, Z
    10a0:	30 e0       	ldi	r19, 0x00	; 0
    10a2:	ac 01       	movw	r20, r24
    10a4:	47 70       	andi	r20, 0x07	; 7
    10a6:	55 27       	eor	r21, r21
    10a8:	02 c0       	rjmp	.+4      	; 0x10ae <conv_brk+0x12a>
    10aa:	35 95       	asr	r19
    10ac:	27 95       	ror	r18
    10ae:	4a 95       	dec	r20
    10b0:	e2 f7       	brpl	.-8      	; 0x10aa <conv_brk+0x126>
    10b2:	20 fd       	sbrc	r18, 0
    10b4:	da cf       	rjmp	.-76     	; 0x106a <conv_brk+0xe6>
    10b6:	b5 01       	movw	r22, r10
    10b8:	0e 94 35 0a 	call	0x146a	; 0x146a <ungetc>
    10bc:	81 10       	cpse	r8, r1
    10be:	87 cf       	rjmp	.-242    	; 0xfce <conv_brk+0x4a>
    10c0:	e1 14       	cp	r14, r1
    10c2:	f1 04       	cpc	r15, r1
    10c4:	11 f0       	breq	.+4      	; 0x10ca <conv_brk+0x146>
    10c6:	d7 01       	movw	r26, r14
    10c8:	1c 92       	st	X, r1
    10ca:	c8 01       	movw	r24, r16
    10cc:	15 c0       	rjmp	.+42     	; 0x10f8 <conv_brk+0x174>
    10ce:	42 2f       	mov	r20, r18
    10d0:	46 95       	lsr	r20
    10d2:	46 95       	lsr	r20
    10d4:	46 95       	lsr	r20
    10d6:	d6 01       	movw	r26, r12
    10d8:	a4 0f       	add	r26, r20
    10da:	b1 1d       	adc	r27, r1
    10dc:	42 2f       	mov	r20, r18
    10de:	47 70       	andi	r20, 0x07	; 7
    10e0:	8b 01       	movw	r16, r22
    10e2:	02 c0       	rjmp	.+4      	; 0x10e8 <conv_brk+0x164>
    10e4:	00 0f       	add	r16, r16
    10e6:	11 1f       	adc	r17, r17
    10e8:	4a 95       	dec	r20
    10ea:	e2 f7       	brpl	.-8      	; 0x10e4 <conv_brk+0x160>
    10ec:	a8 01       	movw	r20, r16
    10ee:	5c 91       	ld	r21, X
    10f0:	45 2b       	or	r20, r21
    10f2:	4c 93       	st	X, r20
    10f4:	62 2e       	mov	r6, r18
    10f6:	a2 cf       	rjmp	.-188    	; 0x103c <conv_brk+0xb8>
    10f8:	a0 96       	adiw	r28, 0x20	; 32
    10fa:	ef e0       	ldi	r30, 0x0F	; 15
    10fc:	0c 94 ce 0a 	jmp	0x159c	; 0x159c <__epilogue_restores__+0x6>

00001100 <vfscanf>:
    1100:	a0 e0       	ldi	r26, 0x00	; 0
    1102:	b0 e0       	ldi	r27, 0x00	; 0
    1104:	e6 e8       	ldi	r30, 0x86	; 134
    1106:	f8 e0       	ldi	r31, 0x08	; 8
    1108:	0c 94 b2 0a 	jmp	0x1564	; 0x1564 <__prologue_saves__+0x6>
    110c:	6c 01       	movw	r12, r24
    110e:	eb 01       	movw	r28, r22
    1110:	5a 01       	movw	r10, r20
    1112:	fc 01       	movw	r30, r24
    1114:	17 82       	std	Z+7, r1	; 0x07
    1116:	16 82       	std	Z+6, r1	; 0x06
    1118:	51 2c       	mov	r5, r1
    111a:	f6 01       	movw	r30, r12
    111c:	e3 80       	ldd	r14, Z+3	; 0x03
    111e:	fe 01       	movw	r30, r28
    1120:	e3 fc       	sbrc	r14, 3
    1122:	85 91       	lpm	r24, Z+
    1124:	e3 fe       	sbrs	r14, 3
    1126:	81 91       	ld	r24, Z+
    1128:	18 2f       	mov	r17, r24
    112a:	ef 01       	movw	r28, r30
    112c:	88 23       	and	r24, r24
    112e:	09 f4       	brne	.+2      	; 0x1132 <vfscanf+0x32>
    1130:	ee c0       	rjmp	.+476    	; 0x130e <vfscanf+0x20e>
    1132:	90 e0       	ldi	r25, 0x00	; 0
    1134:	0e 94 91 09 	call	0x1322	; 0x1322 <isspace>
    1138:	89 2b       	or	r24, r25
    113a:	21 f0       	breq	.+8      	; 0x1144 <vfscanf+0x44>
    113c:	c6 01       	movw	r24, r12
    113e:	0e 94 17 07 	call	0xe2e	; 0xe2e <skip_spaces>
    1142:	eb cf       	rjmp	.-42     	; 0x111a <vfscanf+0x1a>
    1144:	15 32       	cpi	r17, 0x25	; 37
    1146:	41 f4       	brne	.+16     	; 0x1158 <vfscanf+0x58>
    1148:	fe 01       	movw	r30, r28
    114a:	e3 fc       	sbrc	r14, 3
    114c:	15 91       	lpm	r17, Z+
    114e:	e3 fe       	sbrs	r14, 3
    1150:	11 91       	ld	r17, Z+
    1152:	ef 01       	movw	r28, r30
    1154:	15 32       	cpi	r17, 0x25	; 37
    1156:	81 f4       	brne	.+32     	; 0x1178 <vfscanf+0x78>
    1158:	c6 01       	movw	r24, r12
    115a:	0e 94 bb 09 	call	0x1376	; 0x1376 <fgetc>
    115e:	97 fd       	sbrc	r25, 7
    1160:	d4 c0       	rjmp	.+424    	; 0x130a <vfscanf+0x20a>
    1162:	41 2f       	mov	r20, r17
    1164:	50 e0       	ldi	r21, 0x00	; 0
    1166:	9c 01       	movw	r18, r24
    1168:	33 27       	eor	r19, r19
    116a:	24 17       	cp	r18, r20
    116c:	35 07       	cpc	r19, r21
    116e:	a9 f2       	breq	.-86     	; 0x111a <vfscanf+0x1a>
    1170:	b6 01       	movw	r22, r12
    1172:	0e 94 35 0a 	call	0x146a	; 0x146a <ungetc>
    1176:	cb c0       	rjmp	.+406    	; 0x130e <vfscanf+0x20e>
    1178:	1a 32       	cpi	r17, 0x2A	; 42
    117a:	39 f4       	brne	.+14     	; 0x118a <vfscanf+0x8a>
    117c:	e3 fc       	sbrc	r14, 3
    117e:	15 91       	lpm	r17, Z+
    1180:	e3 fe       	sbrs	r14, 3
    1182:	11 91       	ld	r17, Z+
    1184:	ef 01       	movw	r28, r30
    1186:	01 e0       	ldi	r16, 0x01	; 1
    1188:	01 c0       	rjmp	.+2      	; 0x118c <vfscanf+0x8c>
    118a:	00 e0       	ldi	r16, 0x00	; 0
    118c:	f1 2c       	mov	r15, r1
    118e:	20 ed       	ldi	r18, 0xD0	; 208
    1190:	21 0f       	add	r18, r17
    1192:	2a 30       	cpi	r18, 0x0A	; 10
    1194:	80 f4       	brcc	.+32     	; 0x11b6 <vfscanf+0xb6>
    1196:	02 60       	ori	r16, 0x02	; 2
    1198:	6f 2d       	mov	r22, r15
    119a:	70 e0       	ldi	r23, 0x00	; 0
    119c:	80 e0       	ldi	r24, 0x00	; 0
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	40 e2       	ldi	r20, 0x20	; 32
    11a2:	0e 94 f0 06 	call	0xde0	; 0xde0 <mulacc>
    11a6:	f6 2e       	mov	r15, r22
    11a8:	fe 01       	movw	r30, r28
    11aa:	e3 fc       	sbrc	r14, 3
    11ac:	15 91       	lpm	r17, Z+
    11ae:	e3 fe       	sbrs	r14, 3
    11b0:	11 91       	ld	r17, Z+
    11b2:	ef 01       	movw	r28, r30
    11b4:	ec cf       	rjmp	.-40     	; 0x118e <vfscanf+0x8e>
    11b6:	01 ff       	sbrs	r16, 1
    11b8:	03 c0       	rjmp	.+6      	; 0x11c0 <vfscanf+0xc0>
    11ba:	f1 10       	cpse	r15, r1
    11bc:	03 c0       	rjmp	.+6      	; 0x11c4 <vfscanf+0xc4>
    11be:	a7 c0       	rjmp	.+334    	; 0x130e <vfscanf+0x20e>
    11c0:	ff 24       	eor	r15, r15
    11c2:	fa 94       	dec	r15
    11c4:	18 36       	cpi	r17, 0x68	; 104
    11c6:	19 f0       	breq	.+6      	; 0x11ce <vfscanf+0xce>
    11c8:	1c 36       	cpi	r17, 0x6C	; 108
    11ca:	51 f0       	breq	.+20     	; 0x11e0 <vfscanf+0xe0>
    11cc:	10 c0       	rjmp	.+32     	; 0x11ee <vfscanf+0xee>
    11ce:	fe 01       	movw	r30, r28
    11d0:	e3 fc       	sbrc	r14, 3
    11d2:	15 91       	lpm	r17, Z+
    11d4:	e3 fe       	sbrs	r14, 3
    11d6:	11 91       	ld	r17, Z+
    11d8:	ef 01       	movw	r28, r30
    11da:	18 36       	cpi	r17, 0x68	; 104
    11dc:	41 f4       	brne	.+16     	; 0x11ee <vfscanf+0xee>
    11de:	08 60       	ori	r16, 0x08	; 8
    11e0:	04 60       	ori	r16, 0x04	; 4
    11e2:	fe 01       	movw	r30, r28
    11e4:	e3 fc       	sbrc	r14, 3
    11e6:	15 91       	lpm	r17, Z+
    11e8:	e3 fe       	sbrs	r14, 3
    11ea:	11 91       	ld	r17, Z+
    11ec:	ef 01       	movw	r28, r30
    11ee:	11 23       	and	r17, r17
    11f0:	09 f4       	brne	.+2      	; 0x11f4 <vfscanf+0xf4>
    11f2:	8d c0       	rjmp	.+282    	; 0x130e <vfscanf+0x20e>
    11f4:	61 2f       	mov	r22, r17
    11f6:	70 e0       	ldi	r23, 0x00	; 0
    11f8:	8c e5       	ldi	r24, 0x5C	; 92
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	0e 94 9a 09 	call	0x1334	; 0x1334 <strchr_P>
    1200:	89 2b       	or	r24, r25
    1202:	09 f4       	brne	.+2      	; 0x1206 <vfscanf+0x106>
    1204:	84 c0       	rjmp	.+264    	; 0x130e <vfscanf+0x20e>
    1206:	00 fd       	sbrc	r16, 0
    1208:	07 c0       	rjmp	.+14     	; 0x1218 <vfscanf+0x118>
    120a:	f5 01       	movw	r30, r10
    120c:	80 80       	ld	r8, Z
    120e:	91 80       	ldd	r9, Z+1	; 0x01
    1210:	c5 01       	movw	r24, r10
    1212:	02 96       	adiw	r24, 0x02	; 2
    1214:	5c 01       	movw	r10, r24
    1216:	02 c0       	rjmp	.+4      	; 0x121c <vfscanf+0x11c>
    1218:	81 2c       	mov	r8, r1
    121a:	91 2c       	mov	r9, r1
    121c:	1e 36       	cpi	r17, 0x6E	; 110
    121e:	51 f4       	brne	.+20     	; 0x1234 <vfscanf+0x134>
    1220:	f6 01       	movw	r30, r12
    1222:	46 81       	ldd	r20, Z+6	; 0x06
    1224:	57 81       	ldd	r21, Z+7	; 0x07
    1226:	60 e0       	ldi	r22, 0x00	; 0
    1228:	70 e0       	ldi	r23, 0x00	; 0
    122a:	20 2f       	mov	r18, r16
    122c:	c4 01       	movw	r24, r8
    122e:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <putval>
    1232:	73 cf       	rjmp	.-282    	; 0x111a <vfscanf+0x1a>
    1234:	13 36       	cpi	r17, 0x63	; 99
    1236:	a9 f4       	brne	.+42     	; 0x1262 <vfscanf+0x162>
    1238:	01 fd       	sbrc	r16, 1
    123a:	02 c0       	rjmp	.+4      	; 0x1240 <vfscanf+0x140>
    123c:	ff 24       	eor	r15, r15
    123e:	f3 94       	inc	r15
    1240:	c6 01       	movw	r24, r12
    1242:	0e 94 bb 09 	call	0x1376	; 0x1376 <fgetc>
    1246:	97 fd       	sbrc	r25, 7
    1248:	60 c0       	rjmp	.+192    	; 0x130a <vfscanf+0x20a>
    124a:	81 14       	cp	r8, r1
    124c:	91 04       	cpc	r9, r1
    124e:	29 f0       	breq	.+10     	; 0x125a <vfscanf+0x15a>
    1250:	f4 01       	movw	r30, r8
    1252:	80 83       	st	Z, r24
    1254:	c4 01       	movw	r24, r8
    1256:	01 96       	adiw	r24, 0x01	; 1
    1258:	4c 01       	movw	r8, r24
    125a:	fa 94       	dec	r15
    125c:	f1 10       	cpse	r15, r1
    125e:	f0 cf       	rjmp	.-32     	; 0x1240 <vfscanf+0x140>
    1260:	50 c0       	rjmp	.+160    	; 0x1302 <vfscanf+0x202>
    1262:	1b 35       	cpi	r17, 0x5B	; 91
    1264:	59 f4       	brne	.+22     	; 0x127c <vfscanf+0x17c>
    1266:	9e 01       	movw	r18, r28
    1268:	a4 01       	movw	r20, r8
    126a:	6f 2d       	mov	r22, r15
    126c:	c6 01       	movw	r24, r12
    126e:	0e 94 c2 07 	call	0xf84	; 0xf84 <conv_brk>
    1272:	ec 01       	movw	r28, r24
    1274:	89 2b       	or	r24, r25
    1276:	09 f0       	breq	.+2      	; 0x127a <vfscanf+0x17a>
    1278:	44 c0       	rjmp	.+136    	; 0x1302 <vfscanf+0x202>
    127a:	3e c0       	rjmp	.+124    	; 0x12f8 <vfscanf+0x1f8>
    127c:	c6 01       	movw	r24, r12
    127e:	0e 94 17 07 	call	0xe2e	; 0xe2e <skip_spaces>
    1282:	97 fd       	sbrc	r25, 7
    1284:	42 c0       	rjmp	.+132    	; 0x130a <vfscanf+0x20a>
    1286:	1f 36       	cpi	r17, 0x6F	; 111
    1288:	61 f1       	breq	.+88     	; 0x12e2 <vfscanf+0x1e2>
    128a:	28 f4       	brcc	.+10     	; 0x1296 <vfscanf+0x196>
    128c:	14 36       	cpi	r17, 0x64	; 100
    128e:	39 f1       	breq	.+78     	; 0x12de <vfscanf+0x1de>
    1290:	19 36       	cpi	r17, 0x69	; 105
    1292:	51 f1       	breq	.+84     	; 0x12e8 <vfscanf+0x1e8>
    1294:	28 c0       	rjmp	.+80     	; 0x12e6 <vfscanf+0x1e6>
    1296:	13 37       	cpi	r17, 0x73	; 115
    1298:	71 f0       	breq	.+28     	; 0x12b6 <vfscanf+0x1b6>
    129a:	15 37       	cpi	r17, 0x75	; 117
    129c:	01 f1       	breq	.+64     	; 0x12de <vfscanf+0x1de>
    129e:	23 c0       	rjmp	.+70     	; 0x12e6 <vfscanf+0x1e6>
    12a0:	81 14       	cp	r8, r1
    12a2:	91 04       	cpc	r9, r1
    12a4:	29 f0       	breq	.+10     	; 0x12b0 <vfscanf+0x1b0>
    12a6:	f4 01       	movw	r30, r8
    12a8:	60 82       	st	Z, r6
    12aa:	c4 01       	movw	r24, r8
    12ac:	01 96       	adiw	r24, 0x01	; 1
    12ae:	4c 01       	movw	r8, r24
    12b0:	fa 94       	dec	r15
    12b2:	ff 20       	and	r15, r15
    12b4:	71 f0       	breq	.+28     	; 0x12d2 <vfscanf+0x1d2>
    12b6:	c6 01       	movw	r24, r12
    12b8:	0e 94 bb 09 	call	0x1376	; 0x1376 <fgetc>
    12bc:	3c 01       	movw	r6, r24
    12be:	97 fd       	sbrc	r25, 7
    12c0:	08 c0       	rjmp	.+16     	; 0x12d2 <vfscanf+0x1d2>
    12c2:	0e 94 91 09 	call	0x1322	; 0x1322 <isspace>
    12c6:	89 2b       	or	r24, r25
    12c8:	59 f3       	breq	.-42     	; 0x12a0 <vfscanf+0x1a0>
    12ca:	b6 01       	movw	r22, r12
    12cc:	c3 01       	movw	r24, r6
    12ce:	0e 94 35 0a 	call	0x146a	; 0x146a <ungetc>
    12d2:	81 14       	cp	r8, r1
    12d4:	91 04       	cpc	r9, r1
    12d6:	a9 f0       	breq	.+42     	; 0x1302 <vfscanf+0x202>
    12d8:	f4 01       	movw	r30, r8
    12da:	10 82       	st	Z, r1
    12dc:	12 c0       	rjmp	.+36     	; 0x1302 <vfscanf+0x202>
    12de:	00 62       	ori	r16, 0x20	; 32
    12e0:	03 c0       	rjmp	.+6      	; 0x12e8 <vfscanf+0x1e8>
    12e2:	00 61       	ori	r16, 0x10	; 16
    12e4:	01 c0       	rjmp	.+2      	; 0x12e8 <vfscanf+0x1e8>
    12e6:	00 64       	ori	r16, 0x40	; 64
    12e8:	20 2f       	mov	r18, r16
    12ea:	a4 01       	movw	r20, r8
    12ec:	6f 2d       	mov	r22, r15
    12ee:	c6 01       	movw	r24, r12
    12f0:	0e 94 30 07 	call	0xe60	; 0xe60 <conv_int>
    12f4:	81 11       	cpse	r24, r1
    12f6:	05 c0       	rjmp	.+10     	; 0x1302 <vfscanf+0x202>
    12f8:	f6 01       	movw	r30, r12
    12fa:	83 81       	ldd	r24, Z+3	; 0x03
    12fc:	80 73       	andi	r24, 0x30	; 48
    12fe:	29 f4       	brne	.+10     	; 0x130a <vfscanf+0x20a>
    1300:	06 c0       	rjmp	.+12     	; 0x130e <vfscanf+0x20e>
    1302:	00 fd       	sbrc	r16, 0
    1304:	0a cf       	rjmp	.-492    	; 0x111a <vfscanf+0x1a>
    1306:	53 94       	inc	r5
    1308:	08 cf       	rjmp	.-496    	; 0x111a <vfscanf+0x1a>
    130a:	55 20       	and	r5, r5
    130c:	19 f0       	breq	.+6      	; 0x1314 <vfscanf+0x214>
    130e:	85 2d       	mov	r24, r5
    1310:	90 e0       	ldi	r25, 0x00	; 0
    1312:	02 c0       	rjmp	.+4      	; 0x1318 <vfscanf+0x218>
    1314:	8f ef       	ldi	r24, 0xFF	; 255
    1316:	9f ef       	ldi	r25, 0xFF	; 255
    1318:	cd b7       	in	r28, 0x3d	; 61
    131a:	de b7       	in	r29, 0x3e	; 62
    131c:	ef e0       	ldi	r30, 0x0F	; 15
    131e:	0c 94 ce 0a 	jmp	0x159c	; 0x159c <__epilogue_restores__+0x6>

00001322 <isspace>:
    1322:	91 11       	cpse	r25, r1
    1324:	0c 94 ac 0a 	jmp	0x1558	; 0x1558 <__ctype_isfalse>
    1328:	80 32       	cpi	r24, 0x20	; 32
    132a:	19 f0       	breq	.+6      	; 0x1332 <isspace+0x10>
    132c:	89 50       	subi	r24, 0x09	; 9
    132e:	85 50       	subi	r24, 0x05	; 5
    1330:	c8 f7       	brcc	.-14     	; 0x1324 <isspace+0x2>
    1332:	08 95       	ret

00001334 <strchr_P>:
    1334:	fc 01       	movw	r30, r24
    1336:	05 90       	lpm	r0, Z+
    1338:	06 16       	cp	r0, r22
    133a:	21 f0       	breq	.+8      	; 0x1344 <strchr_P+0x10>
    133c:	00 20       	and	r0, r0
    133e:	d9 f7       	brne	.-10     	; 0x1336 <strchr_P+0x2>
    1340:	c0 01       	movw	r24, r0
    1342:	08 95       	ret
    1344:	31 97       	sbiw	r30, 0x01	; 1
    1346:	cf 01       	movw	r24, r30
    1348:	08 95       	ret

0000134a <strnlen_P>:
    134a:	fc 01       	movw	r30, r24
    134c:	05 90       	lpm	r0, Z+
    134e:	61 50       	subi	r22, 0x01	; 1
    1350:	70 40       	sbci	r23, 0x00	; 0
    1352:	01 10       	cpse	r0, r1
    1354:	d8 f7       	brcc	.-10     	; 0x134c <strnlen_P+0x2>
    1356:	80 95       	com	r24
    1358:	90 95       	com	r25
    135a:	8e 0f       	add	r24, r30
    135c:	9f 1f       	adc	r25, r31
    135e:	08 95       	ret

00001360 <strnlen>:
    1360:	fc 01       	movw	r30, r24
    1362:	61 50       	subi	r22, 0x01	; 1
    1364:	70 40       	sbci	r23, 0x00	; 0
    1366:	01 90       	ld	r0, Z+
    1368:	01 10       	cpse	r0, r1
    136a:	d8 f7       	brcc	.-10     	; 0x1362 <strnlen+0x2>
    136c:	80 95       	com	r24
    136e:	90 95       	com	r25
    1370:	8e 0f       	add	r24, r30
    1372:	9f 1f       	adc	r25, r31
    1374:	08 95       	ret

00001376 <fgetc>:
    1376:	cf 93       	push	r28
    1378:	df 93       	push	r29
    137a:	ec 01       	movw	r28, r24
    137c:	2b 81       	ldd	r18, Y+3	; 0x03
    137e:	20 ff       	sbrs	r18, 0
    1380:	33 c0       	rjmp	.+102    	; 0x13e8 <fgetc+0x72>
    1382:	26 ff       	sbrs	r18, 6
    1384:	0a c0       	rjmp	.+20     	; 0x139a <fgetc+0x24>
    1386:	2f 7b       	andi	r18, 0xBF	; 191
    1388:	2b 83       	std	Y+3, r18	; 0x03
    138a:	8e 81       	ldd	r24, Y+6	; 0x06
    138c:	9f 81       	ldd	r25, Y+7	; 0x07
    138e:	01 96       	adiw	r24, 0x01	; 1
    1390:	9f 83       	std	Y+7, r25	; 0x07
    1392:	8e 83       	std	Y+6, r24	; 0x06
    1394:	8a 81       	ldd	r24, Y+2	; 0x02
    1396:	90 e0       	ldi	r25, 0x00	; 0
    1398:	29 c0       	rjmp	.+82     	; 0x13ec <fgetc+0x76>
    139a:	22 ff       	sbrs	r18, 2
    139c:	0f c0       	rjmp	.+30     	; 0x13bc <fgetc+0x46>
    139e:	e8 81       	ld	r30, Y
    13a0:	f9 81       	ldd	r31, Y+1	; 0x01
    13a2:	80 81       	ld	r24, Z
    13a4:	08 2e       	mov	r0, r24
    13a6:	00 0c       	add	r0, r0
    13a8:	99 0b       	sbc	r25, r25
    13aa:	00 97       	sbiw	r24, 0x00	; 0
    13ac:	19 f4       	brne	.+6      	; 0x13b4 <fgetc+0x3e>
    13ae:	20 62       	ori	r18, 0x20	; 32
    13b0:	2b 83       	std	Y+3, r18	; 0x03
    13b2:	1a c0       	rjmp	.+52     	; 0x13e8 <fgetc+0x72>
    13b4:	31 96       	adiw	r30, 0x01	; 1
    13b6:	f9 83       	std	Y+1, r31	; 0x01
    13b8:	e8 83       	st	Y, r30
    13ba:	0e c0       	rjmp	.+28     	; 0x13d8 <fgetc+0x62>
    13bc:	ea 85       	ldd	r30, Y+10	; 0x0a
    13be:	fb 85       	ldd	r31, Y+11	; 0x0b
    13c0:	09 95       	icall
    13c2:	97 ff       	sbrs	r25, 7
    13c4:	09 c0       	rjmp	.+18     	; 0x13d8 <fgetc+0x62>
    13c6:	2b 81       	ldd	r18, Y+3	; 0x03
    13c8:	01 96       	adiw	r24, 0x01	; 1
    13ca:	11 f0       	breq	.+4      	; 0x13d0 <fgetc+0x5a>
    13cc:	80 e2       	ldi	r24, 0x20	; 32
    13ce:	01 c0       	rjmp	.+2      	; 0x13d2 <fgetc+0x5c>
    13d0:	80 e1       	ldi	r24, 0x10	; 16
    13d2:	82 2b       	or	r24, r18
    13d4:	8b 83       	std	Y+3, r24	; 0x03
    13d6:	08 c0       	rjmp	.+16     	; 0x13e8 <fgetc+0x72>
    13d8:	2e 81       	ldd	r18, Y+6	; 0x06
    13da:	3f 81       	ldd	r19, Y+7	; 0x07
    13dc:	2f 5f       	subi	r18, 0xFF	; 255
    13de:	3f 4f       	sbci	r19, 0xFF	; 255
    13e0:	3f 83       	std	Y+7, r19	; 0x07
    13e2:	2e 83       	std	Y+6, r18	; 0x06
    13e4:	99 27       	eor	r25, r25
    13e6:	02 c0       	rjmp	.+4      	; 0x13ec <fgetc+0x76>
    13e8:	8f ef       	ldi	r24, 0xFF	; 255
    13ea:	9f ef       	ldi	r25, 0xFF	; 255
    13ec:	df 91       	pop	r29
    13ee:	cf 91       	pop	r28
    13f0:	08 95       	ret

000013f2 <fputc>:
    13f2:	0f 93       	push	r16
    13f4:	1f 93       	push	r17
    13f6:	cf 93       	push	r28
    13f8:	df 93       	push	r29
    13fa:	fb 01       	movw	r30, r22
    13fc:	23 81       	ldd	r18, Z+3	; 0x03
    13fe:	21 fd       	sbrc	r18, 1
    1400:	03 c0       	rjmp	.+6      	; 0x1408 <fputc+0x16>
    1402:	8f ef       	ldi	r24, 0xFF	; 255
    1404:	9f ef       	ldi	r25, 0xFF	; 255
    1406:	2c c0       	rjmp	.+88     	; 0x1460 <fputc+0x6e>
    1408:	22 ff       	sbrs	r18, 2
    140a:	16 c0       	rjmp	.+44     	; 0x1438 <fputc+0x46>
    140c:	46 81       	ldd	r20, Z+6	; 0x06
    140e:	57 81       	ldd	r21, Z+7	; 0x07
    1410:	24 81       	ldd	r18, Z+4	; 0x04
    1412:	35 81       	ldd	r19, Z+5	; 0x05
    1414:	42 17       	cp	r20, r18
    1416:	53 07       	cpc	r21, r19
    1418:	44 f4       	brge	.+16     	; 0x142a <fputc+0x38>
    141a:	a0 81       	ld	r26, Z
    141c:	b1 81       	ldd	r27, Z+1	; 0x01
    141e:	9d 01       	movw	r18, r26
    1420:	2f 5f       	subi	r18, 0xFF	; 255
    1422:	3f 4f       	sbci	r19, 0xFF	; 255
    1424:	31 83       	std	Z+1, r19	; 0x01
    1426:	20 83       	st	Z, r18
    1428:	8c 93       	st	X, r24
    142a:	26 81       	ldd	r18, Z+6	; 0x06
    142c:	37 81       	ldd	r19, Z+7	; 0x07
    142e:	2f 5f       	subi	r18, 0xFF	; 255
    1430:	3f 4f       	sbci	r19, 0xFF	; 255
    1432:	37 83       	std	Z+7, r19	; 0x07
    1434:	26 83       	std	Z+6, r18	; 0x06
    1436:	14 c0       	rjmp	.+40     	; 0x1460 <fputc+0x6e>
    1438:	8b 01       	movw	r16, r22
    143a:	ec 01       	movw	r28, r24
    143c:	fb 01       	movw	r30, r22
    143e:	00 84       	ldd	r0, Z+8	; 0x08
    1440:	f1 85       	ldd	r31, Z+9	; 0x09
    1442:	e0 2d       	mov	r30, r0
    1444:	09 95       	icall
    1446:	89 2b       	or	r24, r25
    1448:	e1 f6       	brne	.-72     	; 0x1402 <fputc+0x10>
    144a:	d8 01       	movw	r26, r16
    144c:	16 96       	adiw	r26, 0x06	; 6
    144e:	8d 91       	ld	r24, X+
    1450:	9c 91       	ld	r25, X
    1452:	17 97       	sbiw	r26, 0x07	; 7
    1454:	01 96       	adiw	r24, 0x01	; 1
    1456:	17 96       	adiw	r26, 0x07	; 7
    1458:	9c 93       	st	X, r25
    145a:	8e 93       	st	-X, r24
    145c:	16 97       	sbiw	r26, 0x06	; 6
    145e:	ce 01       	movw	r24, r28
    1460:	df 91       	pop	r29
    1462:	cf 91       	pop	r28
    1464:	1f 91       	pop	r17
    1466:	0f 91       	pop	r16
    1468:	08 95       	ret

0000146a <ungetc>:
    146a:	fb 01       	movw	r30, r22
    146c:	23 81       	ldd	r18, Z+3	; 0x03
    146e:	20 ff       	sbrs	r18, 0
    1470:	12 c0       	rjmp	.+36     	; 0x1496 <ungetc+0x2c>
    1472:	26 fd       	sbrc	r18, 6
    1474:	10 c0       	rjmp	.+32     	; 0x1496 <ungetc+0x2c>
    1476:	8f 3f       	cpi	r24, 0xFF	; 255
    1478:	3f ef       	ldi	r19, 0xFF	; 255
    147a:	93 07       	cpc	r25, r19
    147c:	61 f0       	breq	.+24     	; 0x1496 <ungetc+0x2c>
    147e:	82 83       	std	Z+2, r24	; 0x02
    1480:	2f 7d       	andi	r18, 0xDF	; 223
    1482:	20 64       	ori	r18, 0x40	; 64
    1484:	23 83       	std	Z+3, r18	; 0x03
    1486:	26 81       	ldd	r18, Z+6	; 0x06
    1488:	37 81       	ldd	r19, Z+7	; 0x07
    148a:	21 50       	subi	r18, 0x01	; 1
    148c:	31 09       	sbc	r19, r1
    148e:	37 83       	std	Z+7, r19	; 0x07
    1490:	26 83       	std	Z+6, r18	; 0x06
    1492:	99 27       	eor	r25, r25
    1494:	08 95       	ret
    1496:	8f ef       	ldi	r24, 0xFF	; 255
    1498:	9f ef       	ldi	r25, 0xFF	; 255
    149a:	08 95       	ret

0000149c <__ultoa_invert>:
    149c:	fa 01       	movw	r30, r20
    149e:	aa 27       	eor	r26, r26
    14a0:	28 30       	cpi	r18, 0x08	; 8
    14a2:	51 f1       	breq	.+84     	; 0x14f8 <__ultoa_invert+0x5c>
    14a4:	20 31       	cpi	r18, 0x10	; 16
    14a6:	81 f1       	breq	.+96     	; 0x1508 <__ultoa_invert+0x6c>
    14a8:	e8 94       	clt
    14aa:	6f 93       	push	r22
    14ac:	6e 7f       	andi	r22, 0xFE	; 254
    14ae:	6e 5f       	subi	r22, 0xFE	; 254
    14b0:	7f 4f       	sbci	r23, 0xFF	; 255
    14b2:	8f 4f       	sbci	r24, 0xFF	; 255
    14b4:	9f 4f       	sbci	r25, 0xFF	; 255
    14b6:	af 4f       	sbci	r26, 0xFF	; 255
    14b8:	b1 e0       	ldi	r27, 0x01	; 1
    14ba:	3e d0       	rcall	.+124    	; 0x1538 <__ultoa_invert+0x9c>
    14bc:	b4 e0       	ldi	r27, 0x04	; 4
    14be:	3c d0       	rcall	.+120    	; 0x1538 <__ultoa_invert+0x9c>
    14c0:	67 0f       	add	r22, r23
    14c2:	78 1f       	adc	r23, r24
    14c4:	89 1f       	adc	r24, r25
    14c6:	9a 1f       	adc	r25, r26
    14c8:	a1 1d       	adc	r26, r1
    14ca:	68 0f       	add	r22, r24
    14cc:	79 1f       	adc	r23, r25
    14ce:	8a 1f       	adc	r24, r26
    14d0:	91 1d       	adc	r25, r1
    14d2:	a1 1d       	adc	r26, r1
    14d4:	6a 0f       	add	r22, r26
    14d6:	71 1d       	adc	r23, r1
    14d8:	81 1d       	adc	r24, r1
    14da:	91 1d       	adc	r25, r1
    14dc:	a1 1d       	adc	r26, r1
    14de:	20 d0       	rcall	.+64     	; 0x1520 <__ultoa_invert+0x84>
    14e0:	09 f4       	brne	.+2      	; 0x14e4 <__ultoa_invert+0x48>
    14e2:	68 94       	set
    14e4:	3f 91       	pop	r19
    14e6:	2a e0       	ldi	r18, 0x0A	; 10
    14e8:	26 9f       	mul	r18, r22
    14ea:	11 24       	eor	r1, r1
    14ec:	30 19       	sub	r19, r0
    14ee:	30 5d       	subi	r19, 0xD0	; 208
    14f0:	31 93       	st	Z+, r19
    14f2:	de f6       	brtc	.-74     	; 0x14aa <__ultoa_invert+0xe>
    14f4:	cf 01       	movw	r24, r30
    14f6:	08 95       	ret
    14f8:	46 2f       	mov	r20, r22
    14fa:	47 70       	andi	r20, 0x07	; 7
    14fc:	40 5d       	subi	r20, 0xD0	; 208
    14fe:	41 93       	st	Z+, r20
    1500:	b3 e0       	ldi	r27, 0x03	; 3
    1502:	0f d0       	rcall	.+30     	; 0x1522 <__ultoa_invert+0x86>
    1504:	c9 f7       	brne	.-14     	; 0x14f8 <__ultoa_invert+0x5c>
    1506:	f6 cf       	rjmp	.-20     	; 0x14f4 <__ultoa_invert+0x58>
    1508:	46 2f       	mov	r20, r22
    150a:	4f 70       	andi	r20, 0x0F	; 15
    150c:	40 5d       	subi	r20, 0xD0	; 208
    150e:	4a 33       	cpi	r20, 0x3A	; 58
    1510:	18 f0       	brcs	.+6      	; 0x1518 <__ultoa_invert+0x7c>
    1512:	49 5d       	subi	r20, 0xD9	; 217
    1514:	31 fd       	sbrc	r19, 1
    1516:	40 52       	subi	r20, 0x20	; 32
    1518:	41 93       	st	Z+, r20
    151a:	02 d0       	rcall	.+4      	; 0x1520 <__ultoa_invert+0x84>
    151c:	a9 f7       	brne	.-22     	; 0x1508 <__ultoa_invert+0x6c>
    151e:	ea cf       	rjmp	.-44     	; 0x14f4 <__ultoa_invert+0x58>
    1520:	b4 e0       	ldi	r27, 0x04	; 4
    1522:	a6 95       	lsr	r26
    1524:	97 95       	ror	r25
    1526:	87 95       	ror	r24
    1528:	77 95       	ror	r23
    152a:	67 95       	ror	r22
    152c:	ba 95       	dec	r27
    152e:	c9 f7       	brne	.-14     	; 0x1522 <__ultoa_invert+0x86>
    1530:	00 97       	sbiw	r24, 0x00	; 0
    1532:	61 05       	cpc	r22, r1
    1534:	71 05       	cpc	r23, r1
    1536:	08 95       	ret
    1538:	9b 01       	movw	r18, r22
    153a:	ac 01       	movw	r20, r24
    153c:	0a 2e       	mov	r0, r26
    153e:	06 94       	lsr	r0
    1540:	57 95       	ror	r21
    1542:	47 95       	ror	r20
    1544:	37 95       	ror	r19
    1546:	27 95       	ror	r18
    1548:	ba 95       	dec	r27
    154a:	c9 f7       	brne	.-14     	; 0x153e <__ultoa_invert+0xa2>
    154c:	62 0f       	add	r22, r18
    154e:	73 1f       	adc	r23, r19
    1550:	84 1f       	adc	r24, r20
    1552:	95 1f       	adc	r25, r21
    1554:	a0 1d       	adc	r26, r0
    1556:	08 95       	ret

00001558 <__ctype_isfalse>:
    1558:	99 27       	eor	r25, r25
    155a:	88 27       	eor	r24, r24

0000155c <__ctype_istrue>:
    155c:	08 95       	ret

0000155e <__prologue_saves__>:
    155e:	2f 92       	push	r2
    1560:	3f 92       	push	r3
    1562:	4f 92       	push	r4
    1564:	5f 92       	push	r5
    1566:	6f 92       	push	r6
    1568:	7f 92       	push	r7
    156a:	8f 92       	push	r8
    156c:	9f 92       	push	r9
    156e:	af 92       	push	r10
    1570:	bf 92       	push	r11
    1572:	cf 92       	push	r12
    1574:	df 92       	push	r13
    1576:	ef 92       	push	r14
    1578:	ff 92       	push	r15
    157a:	0f 93       	push	r16
    157c:	1f 93       	push	r17
    157e:	cf 93       	push	r28
    1580:	df 93       	push	r29
    1582:	cd b7       	in	r28, 0x3d	; 61
    1584:	de b7       	in	r29, 0x3e	; 62
    1586:	ca 1b       	sub	r28, r26
    1588:	db 0b       	sbc	r29, r27
    158a:	0f b6       	in	r0, 0x3f	; 63
    158c:	f8 94       	cli
    158e:	de bf       	out	0x3e, r29	; 62
    1590:	0f be       	out	0x3f, r0	; 63
    1592:	cd bf       	out	0x3d, r28	; 61
    1594:	09 94       	ijmp

00001596 <__epilogue_restores__>:
    1596:	2a 88       	ldd	r2, Y+18	; 0x12
    1598:	39 88       	ldd	r3, Y+17	; 0x11
    159a:	48 88       	ldd	r4, Y+16	; 0x10
    159c:	5f 84       	ldd	r5, Y+15	; 0x0f
    159e:	6e 84       	ldd	r6, Y+14	; 0x0e
    15a0:	7d 84       	ldd	r7, Y+13	; 0x0d
    15a2:	8c 84       	ldd	r8, Y+12	; 0x0c
    15a4:	9b 84       	ldd	r9, Y+11	; 0x0b
    15a6:	aa 84       	ldd	r10, Y+10	; 0x0a
    15a8:	b9 84       	ldd	r11, Y+9	; 0x09
    15aa:	c8 84       	ldd	r12, Y+8	; 0x08
    15ac:	df 80       	ldd	r13, Y+7	; 0x07
    15ae:	ee 80       	ldd	r14, Y+6	; 0x06
    15b0:	fd 80       	ldd	r15, Y+5	; 0x05
    15b2:	0c 81       	ldd	r16, Y+4	; 0x04
    15b4:	1b 81       	ldd	r17, Y+3	; 0x03
    15b6:	aa 81       	ldd	r26, Y+2	; 0x02
    15b8:	b9 81       	ldd	r27, Y+1	; 0x01
    15ba:	ce 0f       	add	r28, r30
    15bc:	d1 1d       	adc	r29, r1
    15be:	0f b6       	in	r0, 0x3f	; 63
    15c0:	f8 94       	cli
    15c2:	de bf       	out	0x3e, r29	; 62
    15c4:	0f be       	out	0x3f, r0	; 63
    15c6:	cd bf       	out	0x3d, r28	; 61
    15c8:	ed 01       	movw	r28, r26
    15ca:	08 95       	ret

000015cc <_exit>:
    15cc:	f8 94       	cli

000015ce <__stop_program>:
    15ce:	ff cf       	rjmp	.-2      	; 0x15ce <__stop_program>
