
proj4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000017a  00800100  000011fa  0000128e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000013  0080027a  0080027a  00001408  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001408  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001464  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  000014a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d0f  00000000  00000000  00001604  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d91  00000000  00000000  00003313  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bde  00000000  00000000  000040a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000320  00000000  00000000  00004c84  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008aa  00000000  00000000  00004fa4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ad4  00000000  00000000  0000584e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  00006322  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
       8:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
       c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__vector_3>
      10:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      14:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      28:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      2c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      30:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      34:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      38:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      3c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      40:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      44:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      48:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      4c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      50:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      54:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      58:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	12 e0       	ldi	r17, 0x02	; 2
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	ea ef       	ldi	r30, 0xFA	; 250
      70:	f1 e1       	ldi	r31, 0x11	; 17
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	aa 37       	cpi	r26, 0x7A	; 122
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	22 e0       	ldi	r18, 0x02	; 2
      80:	aa e7       	ldi	r26, 0x7A	; 122
      82:	b2 e0       	ldi	r27, 0x02	; 2
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	ad 38       	cpi	r26, 0x8D	; 141
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <main>
      92:	0c 94 fb 08 	jmp	0x11f6	; 0x11f6 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <time>:
      9a:	fc 01       	movw	r30, r24
      9c:	0f b6       	in	r0, 0x3f	; 63
      9e:	f8 94       	cli
      a0:	60 91 89 02 	lds	r22, 0x0289	; 0x800289 <__system_time>
      a4:	70 91 8a 02 	lds	r23, 0x028A	; 0x80028a <__system_time+0x1>
      a8:	80 91 8b 02 	lds	r24, 0x028B	; 0x80028b <__system_time+0x2>
      ac:	90 91 8c 02 	lds	r25, 0x028C	; 0x80028c <__system_time+0x3>
      b0:	0f be       	out	0x3f, r0	; 63
      b2:	30 97       	sbiw	r30, 0x00	; 0
      b4:	21 f0       	breq	.+8      	; 0xbe <time+0x24>
      b6:	60 83       	st	Z, r22
      b8:	71 83       	std	Z+1, r23	; 0x01
      ba:	82 83       	std	Z+2, r24	; 0x02
      bc:	93 83       	std	Z+3, r25	; 0x03
      be:	08 95       	ret

000000c0 <LCD_WriteDigit>:
	char mask, nibble;
	char *ptr;
	char i;


	if (digit > 5)                              // Skip if digit is illegal
      c0:	66 30       	cpi	r22, 0x06	; 6
      c2:	b0 f5       	brcc	.+108    	; 0x130 <LCD_WriteDigit+0x70>
	return;

	//Lookup character table for segmet data
	if ((c >= '*') && (c <= 'z'))
      c4:	96 ed       	ldi	r25, 0xD6	; 214
      c6:	98 0f       	add	r25, r24
      c8:	91 35       	cpi	r25, 0x51	; 81
      ca:	68 f4       	brcc	.+26     	; 0xe6 <LCD_WriteDigit+0x26>
	{
		// c is a letter
		if (c >= 'a')                           // Convert to upper case
      cc:	81 36       	cpi	r24, 0x61	; 97
      ce:	08 f0       	brcs	.+2      	; 0xd2 <LCD_WriteDigit+0x12>
		c &= ~0x20;                         // if necessarry
      d0:	8f 7d       	andi	r24, 0xDF	; 223

		c -= '*';

		seg = LCD_character_table[c];
      d2:	8a 52       	subi	r24, 0x2A	; 42
      d4:	e8 2f       	mov	r30, r24
      d6:	f0 e0       	ldi	r31, 0x00	; 0
      d8:	ee 0f       	add	r30, r30
      da:	ff 1f       	adc	r31, r31
      dc:	e6 5f       	subi	r30, 0xF6	; 246
      de:	fe 4f       	sbci	r31, 0xFE	; 254
      e0:	20 81       	ld	r18, Z
      e2:	31 81       	ldd	r19, Z+1	; 0x01
      e4:	02 c0       	rjmp	.+4      	; 0xea <LCD_WriteDigit+0x2a>
*
*****************************************************************************/
void LCD_WriteDigit(char c, char digit)
{

	unsigned int seg = 0x0000;                  // Holds the segment pattern
      e6:	20 e0       	ldi	r18, 0x00	; 0
      e8:	30 e0       	ldi	r19, 0x00	; 0

		seg = LCD_character_table[c];
	}

	// Adjust mask according to LCD segment mapping
	if (digit & 0x01)
      ea:	a6 2f       	mov	r26, r22
      ec:	a1 70       	andi	r26, 0x01	; 1
      ee:	60 fd       	sbrc	r22, 0
      f0:	02 c0       	rjmp	.+4      	; 0xf6 <LCD_WriteDigit+0x36>
	mask = 0x0F;                // Digit 1, 3, 5
	else
	mask = 0xF0;                // Digit 0, 2, 4
      f2:	70 ef       	ldi	r23, 0xF0	; 240
      f4:	01 c0       	rjmp	.+2      	; 0xf8 <LCD_WriteDigit+0x38>
		seg = LCD_character_table[c];
	}

	// Adjust mask according to LCD segment mapping
	if (digit & 0x01)
	mask = 0x0F;                // Digit 1, 3, 5
      f6:	7f e0       	ldi	r23, 0x0F	; 15
	else
	mask = 0xF0;                // Digit 0, 2, 4

	//ptr = LCD_Data + (digit >> 1);  // digit = {0,0,1,1,2,2}
	ptr = pLCDREG + (digit >> 1);  // digit = {0,0,1,1,2,2}
      f8:	66 95       	lsr	r22
      fa:	e6 2f       	mov	r30, r22
      fc:	f0 e0       	ldi	r31, 0x00	; 0
      fe:	e4 51       	subi	r30, 0x14	; 20
     100:	ff 4f       	sbci	r31, 0xFF	; 255
     102:	af 01       	movw	r20, r30
     104:	4c 5e       	subi	r20, 0xEC	; 236
     106:	5f 4f       	sbci	r21, 0xFF	; 255

	for (i = 0; i < 4; i++)
	{
		nibble = seg & 0x000F;
     108:	82 2f       	mov	r24, r18
     10a:	8f 70       	andi	r24, 0x0F	; 15
		seg >>= 4;
     10c:	32 95       	swap	r19
     10e:	22 95       	swap	r18
     110:	2f 70       	andi	r18, 0x0F	; 15
     112:	23 27       	eor	r18, r19
     114:	3f 70       	andi	r19, 0x0F	; 15
     116:	23 27       	eor	r18, r19
		if (digit & 0x01)
     118:	aa 23       	and	r26, r26
     11a:	11 f0       	breq	.+4      	; 0x120 <LCD_WriteDigit+0x60>
		nibble <<= 4;
     11c:	82 95       	swap	r24
     11e:	80 7f       	andi	r24, 0xF0	; 240
		*ptr = (*ptr & mask) | nibble;
     120:	90 81       	ld	r25, Z
     122:	97 23       	and	r25, r23
     124:	89 2b       	or	r24, r25
     126:	80 83       	st	Z, r24
		ptr += 5;
     128:	35 96       	adiw	r30, 0x05	; 5
	mask = 0xF0;                // Digit 0, 2, 4

	//ptr = LCD_Data + (digit >> 1);  // digit = {0,0,1,1,2,2}
	ptr = pLCDREG + (digit >> 1);  // digit = {0,0,1,1,2,2}

	for (i = 0; i < 4; i++)
     12a:	4e 17       	cp	r20, r30
     12c:	5f 07       	cpc	r21, r31
     12e:	61 f7       	brne	.-40     	; 0x108 <LCD_WriteDigit+0x48>
     130:	08 95       	ret

00000132 <LCD_AllSegments>:
*****************************************************************************/
void LCD_AllSegments(char show)
{
	unsigned char i;

	if (show)
     132:	91 e0       	ldi	r25, 0x01	; 1
     134:	81 11       	cpse	r24, r1
     136:	01 c0       	rjmp	.+2      	; 0x13a <LCD_AllSegments+0x8>
     138:	90 e0       	ldi	r25, 0x00	; 0
     13a:	89 2f       	mov	r24, r25
     13c:	81 95       	neg	r24
     13e:	ec ee       	ldi	r30, 0xEC	; 236
     140:	f0 e0       	ldi	r31, 0x00	; 0
	show = 0xFF;

	// Set/clear all bits in all LCD registers
	for (i=0; i < LCD_REGISTER_COUNT; i++)
	*(pLCDREG + i) = show;
     142:	81 93       	st	Z+, r24

	if (show)
	show = 0xFF;

	// Set/clear all bits in all LCD registers
	for (i=0; i < LCD_REGISTER_COUNT; i++)
     144:	e1 15       	cp	r30, r1
     146:	91 e0       	ldi	r25, 0x01	; 1
     148:	f9 07       	cpc	r31, r25
     14a:	d9 f7       	brne	.-10     	; 0x142 <LCD_AllSegments+0x10>
	*(pLCDREG + i) = show;
     14c:	08 95       	ret

0000014e <LCD_Init>:
*                   Set up the LCD (timing, contrast, etc.)
*
*****************************************************************************/
void LCD_Init (void)
{
	LCD_AllSegments(FALSE);                     // Clear segment buffer.
     14e:	80 e0       	ldi	r24, 0x00	; 0
     150:	0e 94 99 00 	call	0x132	; 0x132 <LCD_AllSegments>

	LCD_CONTRAST_LEVEL(LCD_INITIAL_CONTRAST);    //Set the LCD contrast level
     154:	e7 ee       	ldi	r30, 0xE7	; 231
     156:	f0 e0       	ldi	r31, 0x00	; 0
     158:	80 81       	ld	r24, Z
     15a:	8f 60       	ori	r24, 0x0F	; 15
     15c:	80 83       	st	Z, r24

	// Select asynchronous clock source, enable all COM pins and enable all
	// segment pins.
	LCDCRB = (1<<LCDCS) | (3<<LCDMUX0) | (7<<LCDPM0);
     15e:	87 eb       	ldi	r24, 0xB7	; 183
     160:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>

	// Set LCD prescaler to give a framerate of 32,0 Hz
	LCDFRR = (0<<LCDPS0) | (7<<LCDCD0);
     164:	87 e0       	ldi	r24, 0x07	; 7
     166:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>

	LCDCRA = (1<<LCDEN) | (1<<LCDAB);           // Enable LCD and set low power waveform
     16a:	80 ec       	ldi	r24, 0xC0	; 192
     16c:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
	//LCDCRA |= (1<<LCDIE);  // fixed--don't need this

	//updated 2006-10-10, setting LCD drive time to 1150us in FW rev 07,
	//instead of previous 300us in FW rev 06. Due to some variations on the LCD
	//glass provided to the AVR Butterfly production.
	LCDCCR |= (1<<LCDDC2) | (1<<LCDDC1) | (1<<LCDDC0);
     170:	80 81       	ld	r24, Z
     172:	80 6e       	ori	r24, 0xE0	; 224
     174:	80 83       	st	Z, r24
     176:	08 95       	ret

00000178 <__vector_3>:
    (void) ((m < b) && (m = b));
    (void) ((m < c) && (m = c));

    return m;

}
     178:	1f 92       	push	r1
     17a:	0f 92       	push	r0
     17c:	0f b6       	in	r0, 0x3f	; 63
     17e:	0f 92       	push	r0
     180:	11 24       	eor	r1, r1
     182:	8f 93       	push	r24
     184:	9f 93       	push	r25
     186:	1c 99       	sbic	0x03, 4	; 3
     188:	08 c0       	rjmp	.+16     	; 0x19a <__vector_3+0x22>
     18a:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <pinBPrev.2582>
     18e:	84 ff       	sbrs	r24, 4
     190:	04 c0       	rjmp	.+8      	; 0x19a <__vector_3+0x22>
     192:	95 b1       	in	r25, 0x05	; 5
     194:	81 e0       	ldi	r24, 0x01	; 1
     196:	89 27       	eor	r24, r25
     198:	85 b9       	out	0x05, r24	; 5
     19a:	83 b1       	in	r24, 0x03	; 3
     19c:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <pinBPrev.2582>
     1a0:	9f 91       	pop	r25
     1a2:	8f 91       	pop	r24
     1a4:	0f 90       	pop	r0
     1a6:	0f be       	out	0x3f, r0	; 63
     1a8:	0f 90       	pop	r0
     1aa:	1f 90       	pop	r1
     1ac:	18 95       	reti

000001ae <lcd_puts>:
     1ae:	0f 93       	push	r16
     1b0:	1f 93       	push	r17
     1b2:	cf 93       	push	r28
     1b4:	fc 01       	movw	r30, r24
     1b6:	80 81       	ld	r24, Z
     1b8:	88 23       	and	r24, r24
     1ba:	69 f0       	breq	.+26     	; 0x1d6 <lcd_puts+0x28>
     1bc:	8f 01       	movw	r16, r30
     1be:	0f 5f       	subi	r16, 0xFF	; 255
     1c0:	1f 4f       	sbci	r17, 0xFF	; 255
     1c2:	c0 e0       	ldi	r28, 0x00	; 0
     1c4:	6c 2f       	mov	r22, r28
     1c6:	0e 94 60 00 	call	0xc0	; 0xc0 <LCD_WriteDigit>
     1ca:	f8 01       	movw	r30, r16
     1cc:	81 91       	ld	r24, Z+
     1ce:	8f 01       	movw	r16, r30
     1d0:	cf 5f       	subi	r28, 0xFF	; 255
     1d2:	81 11       	cpse	r24, r1
     1d4:	f7 cf       	rjmp	.-18     	; 0x1c4 <lcd_puts+0x16>
     1d6:	cf 91       	pop	r28
     1d8:	1f 91       	pop	r17
     1da:	0f 91       	pop	r16
     1dc:	08 95       	ret

000001de <interrupts_init>:
     1de:	ec e6       	ldi	r30, 0x6C	; 108
     1e0:	f0 e0       	ldi	r31, 0x00	; 0
     1e2:	80 81       	ld	r24, Z
     1e4:	80 61       	ori	r24, 0x10	; 16
     1e6:	80 83       	st	Z, r24
     1e8:	80 e8       	ldi	r24, 0x80	; 128
     1ea:	8d bb       	out	0x1d, r24	; 29
     1ec:	08 95       	ret

000001ee <joy_init>:
     1ee:	84 b1       	in	r24, 0x04	; 4
     1f0:	8f 73       	andi	r24, 0x3F	; 63
     1f2:	84 b9       	out	0x04, r24	; 4
     1f4:	85 b1       	in	r24, 0x05	; 5
     1f6:	80 6c       	ori	r24, 0xC0	; 192
     1f8:	85 b9       	out	0x05, r24	; 5
     1fa:	8d b1       	in	r24, 0x0d	; 13
     1fc:	83 7f       	andi	r24, 0xF3	; 243
     1fe:	8d b9       	out	0x0d, r24	; 13
     200:	8e b1       	in	r24, 0x0e	; 14
     202:	8c 60       	ori	r24, 0x0C	; 12
     204:	8e b9       	out	0x0e, r24	; 14
     206:	08 95       	ret

00000208 <pins_init>:
     208:	84 b1       	in	r24, 0x04	; 4
     20a:	8f 71       	andi	r24, 0x1F	; 31
     20c:	84 b9       	out	0x04, r24	; 4
     20e:	6b 98       	cbi	0x0d, 3	; 13
     210:	85 b1       	in	r24, 0x05	; 5
     212:	80 6e       	ori	r24, 0xE0	; 224
     214:	85 b9       	out	0x05, r24	; 5
     216:	73 9a       	sbi	0x0e, 3	; 14
     218:	20 9a       	sbi	0x04, 0	; 4
     21a:	21 9a       	sbi	0x04, 1	; 4
     21c:	25 9a       	sbi	0x04, 5	; 4
     21e:	20 9a       	sbi	0x04, 0	; 4
     220:	21 9a       	sbi	0x04, 1	; 4
     222:	0e 94 ef 00 	call	0x1de	; 0x1de <interrupts_init>
     226:	78 94       	sei
     228:	08 95       	ret

0000022a <increase_bet>:
     22a:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <BET>
     22e:	90 91 78 01 	lds	r25, 0x0178	; 0x800178 <BET+0x1>
     232:	89 30       	cpi	r24, 0x09	; 9
     234:	91 05       	cpc	r25, r1
     236:	64 f4       	brge	.+24     	; 0x250 <increase_bet+0x26>
     238:	20 91 79 01 	lds	r18, 0x0179	; 0x800179 <WALLET>
     23c:	30 91 7a 01 	lds	r19, 0x017A	; 0x80017a <WALLET+0x1>
     240:	82 17       	cp	r24, r18
     242:	93 07       	cpc	r25, r19
     244:	2c f4       	brge	.+10     	; 0x250 <increase_bet+0x26>
     246:	01 96       	adiw	r24, 0x01	; 1
     248:	90 93 78 01 	sts	0x0178, r25	; 0x800178 <BET+0x1>
     24c:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <BET>
     250:	08 95       	ret

00000252 <reset>:
     252:	81 e0       	ldi	r24, 0x01	; 1
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	90 93 78 01 	sts	0x0178, r25	; 0x800178 <BET+0x1>
     25a:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <BET>
     25e:	8a e0       	ldi	r24, 0x0A	; 10
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	90 93 7a 01 	sts	0x017A, r25	; 0x80017a <WALLET+0x1>
     266:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <WALLET>
     26a:	08 95       	ret

0000026c <slot_machine_screen>:
     26c:	89 e8       	ldi	r24, 0x89	; 137
     26e:	91 e0       	ldi	r25, 0x01	; 1
     270:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_puts>
     274:	08 95       	ret

00000276 <earnings_screen>:
     276:	80 91 79 01 	lds	r24, 0x0179	; 0x800179 <WALLET>
     27a:	90 91 7a 01 	lds	r25, 0x017A	; 0x80017a <WALLET+0x1>
     27e:	18 16       	cp	r1, r24
     280:	19 06       	cpc	r1, r25
     282:	1c f4       	brge	.+6      	; 0x28a <earnings_screen+0x14>
     284:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_puts>
     288:	08 95       	ret
     28a:	80 e9       	ldi	r24, 0x90	; 144
     28c:	91 e0       	ldi	r25, 0x01	; 1
     28e:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_puts>
     292:	08 95       	ret

00000294 <JoyGet>:
     294:	83 b1       	in	r24, 0x03	; 3
     296:	9c b1       	in	r25, 0x0c	; 12
     298:	90 95       	com	r25
     29a:	9c 70       	andi	r25, 0x0C	; 12
     29c:	80 95       	com	r24
     29e:	80 7c       	andi	r24, 0xC0	; 192
     2a0:	89 2b       	or	r24, r25
     2a2:	08 95       	ret

000002a4 <push_button>:
     2a4:	8e b1       	in	r24, 0x0e	; 14
     2a6:	88 70       	andi	r24, 0x08	; 8
     2a8:	08 95       	ret

000002aa <multiplier>:
     2aa:	cf 93       	push	r28
     2ac:	df 93       	push	r29
     2ae:	ec 01       	movw	r28, r24
     2b0:	60 e7       	ldi	r22, 0x70	; 112
     2b2:	72 e0       	ldi	r23, 0x02	; 2
     2b4:	0e 94 81 05 	call	0xb02	; 0xb02 <strcmp>
     2b8:	89 2b       	or	r24, r25
     2ba:	09 f4       	brne	.+2      	; 0x2be <multiplier+0x14>
     2bc:	8d c0       	rjmp	.+282    	; 0x3d8 <multiplier+0x12e>
     2be:	6c e6       	ldi	r22, 0x6C	; 108
     2c0:	72 e0       	ldi	r23, 0x02	; 2
     2c2:	ce 01       	movw	r24, r28
     2c4:	0e 94 81 05 	call	0xb02	; 0xb02 <strcmp>
     2c8:	89 2b       	or	r24, r25
     2ca:	09 f4       	brne	.+2      	; 0x2ce <multiplier+0x24>
     2cc:	87 c0       	rjmp	.+270    	; 0x3dc <multiplier+0x132>
     2ce:	68 e6       	ldi	r22, 0x68	; 104
     2d0:	72 e0       	ldi	r23, 0x02	; 2
     2d2:	ce 01       	movw	r24, r28
     2d4:	0e 94 81 05 	call	0xb02	; 0xb02 <strcmp>
     2d8:	89 2b       	or	r24, r25
     2da:	09 f4       	brne	.+2      	; 0x2de <multiplier+0x34>
     2dc:	81 c0       	rjmp	.+258    	; 0x3e0 <multiplier+0x136>
     2de:	64 e6       	ldi	r22, 0x64	; 100
     2e0:	72 e0       	ldi	r23, 0x02	; 2
     2e2:	ce 01       	movw	r24, r28
     2e4:	0e 94 81 05 	call	0xb02	; 0xb02 <strcmp>
     2e8:	89 2b       	or	r24, r25
     2ea:	09 f4       	brne	.+2      	; 0x2ee <multiplier+0x44>
     2ec:	7b c0       	rjmp	.+246    	; 0x3e4 <multiplier+0x13a>
     2ee:	60 e6       	ldi	r22, 0x60	; 96
     2f0:	72 e0       	ldi	r23, 0x02	; 2
     2f2:	ce 01       	movw	r24, r28
     2f4:	0e 94 81 05 	call	0xb02	; 0xb02 <strcmp>
     2f8:	89 2b       	or	r24, r25
     2fa:	09 f4       	brne	.+2      	; 0x2fe <multiplier+0x54>
     2fc:	75 c0       	rjmp	.+234    	; 0x3e8 <multiplier+0x13e>
     2fe:	6c e5       	ldi	r22, 0x5C	; 92
     300:	72 e0       	ldi	r23, 0x02	; 2
     302:	ce 01       	movw	r24, r28
     304:	0e 94 81 05 	call	0xb02	; 0xb02 <strcmp>
     308:	89 2b       	or	r24, r25
     30a:	09 f4       	brne	.+2      	; 0x30e <multiplier+0x64>
     30c:	6f c0       	rjmp	.+222    	; 0x3ec <multiplier+0x142>
     30e:	68 e5       	ldi	r22, 0x58	; 88
     310:	72 e0       	ldi	r23, 0x02	; 2
     312:	ce 01       	movw	r24, r28
     314:	0e 94 81 05 	call	0xb02	; 0xb02 <strcmp>
     318:	89 2b       	or	r24, r25
     31a:	09 f4       	brne	.+2      	; 0x31e <multiplier+0x74>
     31c:	69 c0       	rjmp	.+210    	; 0x3f0 <multiplier+0x146>
     31e:	64 e5       	ldi	r22, 0x54	; 84
     320:	72 e0       	ldi	r23, 0x02	; 2
     322:	ce 01       	movw	r24, r28
     324:	0e 94 81 05 	call	0xb02	; 0xb02 <strcmp>
     328:	89 2b       	or	r24, r25
     32a:	09 f4       	brne	.+2      	; 0x32e <multiplier+0x84>
     32c:	63 c0       	rjmp	.+198    	; 0x3f4 <multiplier+0x14a>
     32e:	60 e5       	ldi	r22, 0x50	; 80
     330:	72 e0       	ldi	r23, 0x02	; 2
     332:	ce 01       	movw	r24, r28
     334:	0e 94 81 05 	call	0xb02	; 0xb02 <strcmp>
     338:	89 2b       	or	r24, r25
     33a:	09 f4       	brne	.+2      	; 0x33e <multiplier+0x94>
     33c:	5d c0       	rjmp	.+186    	; 0x3f8 <multiplier+0x14e>
     33e:	6c e4       	ldi	r22, 0x4C	; 76
     340:	72 e0       	ldi	r23, 0x02	; 2
     342:	ce 01       	movw	r24, r28
     344:	0e 94 81 05 	call	0xb02	; 0xb02 <strcmp>
     348:	89 2b       	or	r24, r25
     34a:	09 f4       	brne	.+2      	; 0x34e <multiplier+0xa4>
     34c:	57 c0       	rjmp	.+174    	; 0x3fc <multiplier+0x152>
     34e:	68 e4       	ldi	r22, 0x48	; 72
     350:	72 e0       	ldi	r23, 0x02	; 2
     352:	ce 01       	movw	r24, r28
     354:	0e 94 81 05 	call	0xb02	; 0xb02 <strcmp>
     358:	89 2b       	or	r24, r25
     35a:	09 f4       	brne	.+2      	; 0x35e <multiplier+0xb4>
     35c:	51 c0       	rjmp	.+162    	; 0x400 <__LOCK_REGION_LENGTH__>
     35e:	64 e4       	ldi	r22, 0x44	; 68
     360:	72 e0       	ldi	r23, 0x02	; 2
     362:	ce 01       	movw	r24, r28
     364:	0e 94 81 05 	call	0xb02	; 0xb02 <strcmp>
     368:	89 2b       	or	r24, r25
     36a:	09 f4       	brne	.+2      	; 0x36e <multiplier+0xc4>
     36c:	4b c0       	rjmp	.+150    	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     36e:	60 e4       	ldi	r22, 0x40	; 64
     370:	72 e0       	ldi	r23, 0x02	; 2
     372:	ce 01       	movw	r24, r28
     374:	0e 94 81 05 	call	0xb02	; 0xb02 <strcmp>
     378:	89 2b       	or	r24, r25
     37a:	09 f4       	brne	.+2      	; 0x37e <multiplier+0xd4>
     37c:	45 c0       	rjmp	.+138    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     37e:	6c e3       	ldi	r22, 0x3C	; 60
     380:	72 e0       	ldi	r23, 0x02	; 2
     382:	ce 01       	movw	r24, r28
     384:	0e 94 81 05 	call	0xb02	; 0xb02 <strcmp>
     388:	89 2b       	or	r24, r25
     38a:	09 f4       	brne	.+2      	; 0x38e <multiplier+0xe4>
     38c:	3f c0       	rjmp	.+126    	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     38e:	68 e3       	ldi	r22, 0x38	; 56
     390:	72 e0       	ldi	r23, 0x02	; 2
     392:	ce 01       	movw	r24, r28
     394:	0e 94 81 05 	call	0xb02	; 0xb02 <strcmp>
     398:	89 2b       	or	r24, r25
     39a:	d1 f1       	breq	.+116    	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     39c:	64 e3       	ldi	r22, 0x34	; 52
     39e:	72 e0       	ldi	r23, 0x02	; 2
     3a0:	ce 01       	movw	r24, r28
     3a2:	0e 94 81 05 	call	0xb02	; 0xb02 <strcmp>
     3a6:	89 2b       	or	r24, r25
     3a8:	a9 f1       	breq	.+106    	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
     3aa:	60 e3       	ldi	r22, 0x30	; 48
     3ac:	72 e0       	ldi	r23, 0x02	; 2
     3ae:	ce 01       	movw	r24, r28
     3b0:	0e 94 81 05 	call	0xb02	; 0xb02 <strcmp>
     3b4:	89 2b       	or	r24, r25
     3b6:	81 f1       	breq	.+96     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     3b8:	6c e2       	ldi	r22, 0x2C	; 44
     3ba:	72 e0       	ldi	r23, 0x02	; 2
     3bc:	ce 01       	movw	r24, r28
     3be:	0e 94 81 05 	call	0xb02	; 0xb02 <strcmp>
     3c2:	89 2b       	or	r24, r25
     3c4:	59 f1       	breq	.+86     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
     3c6:	68 e2       	ldi	r22, 0x28	; 40
     3c8:	72 e0       	ldi	r23, 0x02	; 2
     3ca:	ce 01       	movw	r24, r28
     3cc:	0e 94 81 05 	call	0xb02	; 0xb02 <strcmp>
     3d0:	89 2b       	or	r24, r25
     3d2:	31 f1       	breq	.+76     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     3d4:	80 e0       	ldi	r24, 0x00	; 0
     3d6:	25 c0       	rjmp	.+74     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3d8:	81 e0       	ldi	r24, 0x01	; 1
     3da:	23 c0       	rjmp	.+70     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3dc:	81 e0       	ldi	r24, 0x01	; 1
     3de:	21 c0       	rjmp	.+66     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3e0:	81 e0       	ldi	r24, 0x01	; 1
     3e2:	1f c0       	rjmp	.+62     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3e4:	81 e0       	ldi	r24, 0x01	; 1
     3e6:	1d c0       	rjmp	.+58     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3e8:	81 e0       	ldi	r24, 0x01	; 1
     3ea:	1b c0       	rjmp	.+54     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3ec:	81 e0       	ldi	r24, 0x01	; 1
     3ee:	19 c0       	rjmp	.+50     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3f0:	82 e0       	ldi	r24, 0x02	; 2
     3f2:	17 c0       	rjmp	.+46     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3f4:	82 e0       	ldi	r24, 0x02	; 2
     3f6:	15 c0       	rjmp	.+42     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3f8:	82 e0       	ldi	r24, 0x02	; 2
     3fa:	13 c0       	rjmp	.+38     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3fc:	82 e0       	ldi	r24, 0x02	; 2
     3fe:	11 c0       	rjmp	.+34     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     400:	82 e0       	ldi	r24, 0x02	; 2
     402:	0f c0       	rjmp	.+30     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     404:	83 e0       	ldi	r24, 0x03	; 3
     406:	0d c0       	rjmp	.+26     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     408:	83 e0       	ldi	r24, 0x03	; 3
     40a:	0b c0       	rjmp	.+22     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     40c:	83 e0       	ldi	r24, 0x03	; 3
     40e:	09 c0       	rjmp	.+18     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     410:	84 e0       	ldi	r24, 0x04	; 4
     412:	07 c0       	rjmp	.+14     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     414:	84 e0       	ldi	r24, 0x04	; 4
     416:	05 c0       	rjmp	.+10     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     418:	85 e0       	ldi	r24, 0x05	; 5
     41a:	03 c0       	rjmp	.+6      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     41c:	85 e0       	ldi	r24, 0x05	; 5
     41e:	01 c0       	rjmp	.+2      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     420:	85 e0       	ldi	r24, 0x05	; 5
     422:	df 91       	pop	r29
     424:	cf 91       	pop	r28
     426:	08 95       	ret

00000428 <spin>:
     428:	9f 92       	push	r9
     42a:	af 92       	push	r10
     42c:	bf 92       	push	r11
     42e:	cf 92       	push	r12
     430:	df 92       	push	r13
     432:	ef 92       	push	r14
     434:	ff 92       	push	r15
     436:	0f 93       	push	r16
     438:	1f 93       	push	r17
     43a:	cf 93       	push	r28
     43c:	df 93       	push	r29
     43e:	80 e0       	ldi	r24, 0x00	; 0
     440:	90 e0       	ldi	r25, 0x00	; 0
     442:	0e 94 4d 00 	call	0x9a	; 0x9a <time>
     446:	cb 01       	movw	r24, r22
     448:	0e 94 76 05 	call	0xaec	; 0xaec <srand>
     44c:	0e 94 71 05 	call	0xae2	; 0xae2 <rand>
     450:	62 e3       	ldi	r22, 0x32	; 50
     452:	70 e0       	ldi	r23, 0x00	; 0
     454:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <__divmodhi4>
     458:	6c 01       	movw	r12, r24
     45a:	84 e0       	ldi	r24, 0x04	; 4
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	0e 94 04 04 	call	0x808	; 0x808 <malloc>
     462:	90 93 7d 02 	sts	0x027D, r25	; 0x80027d <WORD+0x1>
     466:	80 93 7c 02 	sts	0x027C, r24	; 0x80027c <WORD>
     46a:	0f 2e       	mov	r0, r31
     46c:	f4 e6       	ldi	r31, 0x64	; 100
     46e:	ef 2e       	mov	r14, r31
     470:	f1 2c       	mov	r15, r1
     472:	f0 2d       	mov	r31, r0
     474:	00 e0       	ldi	r16, 0x00	; 0
     476:	10 e0       	ldi	r17, 0x00	; 0
     478:	0f 2e       	mov	r0, r31
     47a:	f9 e2       	ldi	r31, 0x29	; 41
     47c:	9f 2e       	mov	r9, r31
     47e:	f0 2d       	mov	r31, r0
     480:	0f 2e       	mov	r0, r31
     482:	f2 e3       	ldi	r31, 0x32	; 50
     484:	af 2e       	mov	r10, r31
     486:	f0 2d       	mov	r31, r0
     488:	2d c0       	rjmp	.+90     	; 0x4e4 <spin+0xbc>
     48a:	8f e1       	ldi	r24, 0x1F	; 31
     48c:	9e e4       	ldi	r25, 0x4E	; 78
     48e:	01 97       	sbiw	r24, 0x01	; 1
     490:	f1 f7       	brne	.-4      	; 0x48e <spin+0x66>
     492:	00 c0       	rjmp	.+0      	; 0x494 <spin+0x6c>
     494:	00 00       	nop
     496:	03 30       	cpi	r16, 0x03	; 3
     498:	d0 f4       	brcc	.+52     	; 0x4ce <spin+0xa6>
     49a:	19 9d       	mul	r17, r9
     49c:	81 2d       	mov	r24, r1
     49e:	11 24       	eor	r1, r1
     4a0:	86 95       	lsr	r24
     4a2:	86 95       	lsr	r24
     4a4:	86 95       	lsr	r24
     4a6:	91 2f       	mov	r25, r17
     4a8:	8a 9d       	mul	r24, r10
     4aa:	90 19       	sub	r25, r0
     4ac:	11 24       	eor	r1, r1
     4ae:	89 2f       	mov	r24, r25
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	c8 16       	cp	r12, r24
     4b4:	d9 06       	cpc	r13, r25
     4b6:	59 f4       	brne	.+22     	; 0x4ce <spin+0xa6>
     4b8:	ce 01       	movw	r24, r28
     4ba:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_puts>
     4be:	e0 91 7c 02 	lds	r30, 0x027C	; 0x80027c <WORD>
     4c2:	f0 91 7d 02 	lds	r31, 0x027D	; 0x80027d <WORD+0x1>
     4c6:	e0 0f       	add	r30, r16
     4c8:	f1 1d       	adc	r31, r1
     4ca:	c0 83       	st	Z, r28
     4cc:	0f 5f       	subi	r16, 0xFF	; 255
     4ce:	03 30       	cpi	r16, 0x03	; 3
     4d0:	29 f0       	breq	.+10     	; 0x4dc <spin+0xb4>
     4d2:	1f 5f       	subi	r17, 0xFF	; 255
     4d4:	21 96       	adiw	r28, 0x01	; 1
     4d6:	c7 34       	cpi	r28, 0x47	; 71
     4d8:	d1 05       	cpc	r29, r1
     4da:	b9 f6       	brne	.-82     	; 0x48a <spin+0x62>
     4dc:	e1 e0       	ldi	r30, 0x01	; 1
     4de:	ee 1a       	sub	r14, r30
     4e0:	f1 08       	sbc	r15, r1
     4e2:	19 f0       	breq	.+6      	; 0x4ea <spin+0xc2>
     4e4:	c1 e4       	ldi	r28, 0x41	; 65
     4e6:	d0 e0       	ldi	r29, 0x00	; 0
     4e8:	d0 cf       	rjmp	.-96     	; 0x48a <spin+0x62>
     4ea:	80 91 7c 02 	lds	r24, 0x027C	; 0x80027c <WORD>
     4ee:	90 91 7d 02 	lds	r25, 0x027D	; 0x80027d <WORD+0x1>
     4f2:	fc 01       	movw	r30, r24
     4f4:	13 82       	std	Z+3, r1	; 0x03
     4f6:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_puts>
     4fa:	80 91 7c 02 	lds	r24, 0x027C	; 0x80027c <WORD>
     4fe:	90 91 7d 02 	lds	r25, 0x027D	; 0x80027d <WORD+0x1>
     502:	0e 94 55 01 	call	0x2aa	; 0x2aa <multiplier>
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	00 97       	sbiw	r24, 0x00	; 0
     50a:	c9 f0       	breq	.+50     	; 0x53e <__stack+0x3f>
     50c:	60 91 77 01 	lds	r22, 0x0177	; 0x800177 <BET>
     510:	70 91 78 01 	lds	r23, 0x0178	; 0x800178 <BET+0x1>
     514:	40 91 79 01 	lds	r20, 0x0179	; 0x800179 <WALLET>
     518:	50 91 7a 01 	lds	r21, 0x017A	; 0x80017a <WALLET+0x1>
     51c:	46 1b       	sub	r20, r22
     51e:	57 0b       	sbc	r21, r23
     520:	86 9f       	mul	r24, r22
     522:	90 01       	movw	r18, r0
     524:	87 9f       	mul	r24, r23
     526:	30 0d       	add	r19, r0
     528:	96 9f       	mul	r25, r22
     52a:	30 0d       	add	r19, r0
     52c:	11 24       	eor	r1, r1
     52e:	ca 01       	movw	r24, r20
     530:	82 0f       	add	r24, r18
     532:	93 1f       	adc	r25, r19
     534:	90 93 7a 01 	sts	0x017A, r25	; 0x80017a <WALLET+0x1>
     538:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <WALLET>
     53c:	0e c0       	rjmp	.+28     	; 0x55a <__stack+0x5b>
     53e:	80 91 79 01 	lds	r24, 0x0179	; 0x800179 <WALLET>
     542:	90 91 7a 01 	lds	r25, 0x017A	; 0x80017a <WALLET+0x1>
     546:	20 91 77 01 	lds	r18, 0x0177	; 0x800177 <BET>
     54a:	30 91 78 01 	lds	r19, 0x0178	; 0x800178 <BET+0x1>
     54e:	82 1b       	sub	r24, r18
     550:	93 0b       	sbc	r25, r19
     552:	90 93 7a 01 	sts	0x017A, r25	; 0x80017a <WALLET+0x1>
     556:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <WALLET>
     55a:	df 91       	pop	r29
     55c:	cf 91       	pop	r28
     55e:	1f 91       	pop	r17
     560:	0f 91       	pop	r16
     562:	ff 90       	pop	r15
     564:	ef 90       	pop	r14
     566:	df 90       	pop	r13
     568:	cf 90       	pop	r12
     56a:	bf 90       	pop	r11
     56c:	af 90       	pop	r10
     56e:	9f 90       	pop	r9
     570:	08 95       	ret

00000572 <which_button>:
     572:	cf 93       	push	r28
     574:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <__data_end>
     578:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <__data_end+0x1>
     57c:	89 2b       	or	r24, r25
     57e:	21 f4       	brne	.+8      	; 0x588 <which_button+0x16>
     580:	84 e7       	ldi	r24, 0x74	; 116
     582:	92 e0       	ldi	r25, 0x02	; 2
     584:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_puts>
     588:	0e 94 4a 01 	call	0x294	; 0x294 <JoyGet>
     58c:	c8 2f       	mov	r28, r24
     58e:	0e 94 52 01 	call	0x2a4	; 0x2a4 <push_button>
     592:	c8 17       	cp	r28, r24
     594:	99 f0       	breq	.+38     	; 0x5bc <which_button+0x4a>
     596:	85 b1       	in	r24, 0x05	; 5
     598:	80 78       	andi	r24, 0x80	; 128
     59a:	c8 17       	cp	r28, r24
     59c:	89 f0       	breq	.+34     	; 0x5c0 <which_button+0x4e>
     59e:	85 b1       	in	r24, 0x05	; 5
     5a0:	80 74       	andi	r24, 0x40	; 64
     5a2:	c8 17       	cp	r28, r24
     5a4:	79 f0       	breq	.+30     	; 0x5c4 <which_button+0x52>
     5a6:	8e b1       	in	r24, 0x0e	; 14
     5a8:	88 70       	andi	r24, 0x08	; 8
     5aa:	c8 17       	cp	r28, r24
     5ac:	69 f0       	breq	.+26     	; 0x5c8 <which_button+0x56>
     5ae:	8e b1       	in	r24, 0x0e	; 14
     5b0:	88 70       	andi	r24, 0x08	; 8
     5b2:	c8 17       	cp	r28, r24
     5b4:	59 f0       	breq	.+22     	; 0x5cc <which_button+0x5a>
     5b6:	0e 94 52 01 	call	0x2a4	; 0x2a4 <push_button>
     5ba:	09 c0       	rjmp	.+18     	; 0x5ce <which_button+0x5c>
     5bc:	81 e0       	ldi	r24, 0x01	; 1
     5be:	07 c0       	rjmp	.+14     	; 0x5ce <which_button+0x5c>
     5c0:	82 e0       	ldi	r24, 0x02	; 2
     5c2:	05 c0       	rjmp	.+10     	; 0x5ce <which_button+0x5c>
     5c4:	83 e0       	ldi	r24, 0x03	; 3
     5c6:	03 c0       	rjmp	.+6      	; 0x5ce <which_button+0x5c>
     5c8:	84 e0       	ldi	r24, 0x04	; 4
     5ca:	01 c0       	rjmp	.+2      	; 0x5ce <which_button+0x5c>
     5cc:	85 e0       	ldi	r24, 0x05	; 5
     5ce:	cf 91       	pop	r28
     5d0:	08 95       	ret

000005d2 <main>:

	//#####################
int main() {
     5d2:	0f 93       	push	r16
     5d4:	1f 93       	push	r17
     5d6:	cf 93       	push	r28
     5d8:	df 93       	push	r29
	stderr = stdin = stdout = &uart_stream;
     5da:	e3 e8       	ldi	r30, 0x83	; 131
     5dc:	f2 e0       	ldi	r31, 0x02	; 2
     5de:	8b e7       	ldi	r24, 0x7B	; 123
     5e0:	91 e0       	ldi	r25, 0x01	; 1
     5e2:	93 83       	std	Z+3, r25	; 0x03
     5e4:	82 83       	std	Z+2, r24	; 0x02
     5e6:	91 83       	std	Z+1, r25	; 0x01
     5e8:	80 83       	st	Z, r24
     5ea:	95 83       	std	Z+5, r25	; 0x05
     5ec:	84 83       	std	Z+4, r24	; 0x04
	printf("welocome project 5 game \n");
     5ee:	85 e9       	ldi	r24, 0x95	; 149
     5f0:	91 e0       	ldi	r25, 0x01	; 1
     5f2:	0e 94 a0 05 	call	0xb40	; 0xb40 <puts>
	UARTInit();
     5f6:	0e 94 ce 03 	call	0x79c	; 0x79c <UARTInit>
	LCD_Init();
     5fa:	0e 94 a7 00 	call	0x14e	; 0x14e <LCD_Init>
	lcd_puts("HEllo");
     5fe:	8e ea       	ldi	r24, 0xAE	; 174
     600:	91 e0       	ldi	r25, 0x01	; 1
     602:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_puts>
	//_delay_ms(1000);
	pins_init();
     606:	0e 94 04 01 	call	0x208	; 0x208 <pins_init>
	joy_init();
     60a:	0e 94 f7 00 	call	0x1ee	; 0x1ee <joy_init>

	uint8_t loop_flag = 1;
     60e:	d1 e0       	ldi	r29, 0x01	; 1
	uint8_t btn_pressed = 0;

		while (loop_flag) {

			btn_pressed = which_button();
			printf(" btn=%d \n",(int)btn_pressed);
     610:	04 eb       	ldi	r16, 0xB4	; 180
     612:	11 e0       	ldi	r17, 0x01	; 1
     614:	01 c0       	rjmp	.+2      	; 0x618 <main+0x46>
	joy_init();

	uint8_t loop_flag = 1;
	uint8_t btn_pressed = 0;

		while (loop_flag) {
     616:	d8 2f       	mov	r29, r24

			btn_pressed = which_button();
     618:	0e 94 b9 02 	call	0x572	; 0x572 <which_button>
     61c:	c8 2f       	mov	r28, r24
			printf(" btn=%d \n",(int)btn_pressed);
     61e:	1f 92       	push	r1
     620:	8f 93       	push	r24
     622:	1f 93       	push	r17
     624:	0f 93       	push	r16
     626:	0e 94 8a 05 	call	0xb14	; 0xb14 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     62a:	2f ef       	ldi	r18, 0xFF	; 255
     62c:	80 e7       	ldi	r24, 0x70	; 112
     62e:	92 e0       	ldi	r25, 0x02	; 2
     630:	21 50       	subi	r18, 0x01	; 1
     632:	80 40       	sbci	r24, 0x00	; 0
     634:	90 40       	sbci	r25, 0x00	; 0
     636:	e1 f7       	brne	.-8      	; 0x630 <main+0x5e>
     638:	00 c0       	rjmp	.+0      	; 0x63a <main+0x68>
     63a:	00 00       	nop
			_delay_ms(100);
			switch (btn_pressed) {
     63c:	0f 90       	pop	r0
     63e:	0f 90       	pop	r0
     640:	0f 90       	pop	r0
     642:	0f 90       	pop	r0
     644:	c2 30       	cpi	r28, 0x02	; 2
     646:	01 f1       	breq	.+64     	; 0x688 <main+0xb6>
     648:	30 f4       	brcc	.+12     	; 0x656 <main+0x84>
     64a:	cc 23       	and	r28, r28
     64c:	09 f4       	brne	.+2      	; 0x650 <main+0x7e>
     64e:	6d c0       	rjmp	.+218    	; 0x72a <main+0x158>
     650:	c1 30       	cpi	r28, 0x01	; 1
     652:	49 f0       	breq	.+18     	; 0x666 <main+0x94>
     654:	78 c0       	rjmp	.+240    	; 0x746 <main+0x174>
     656:	c4 30       	cpi	r28, 0x04	; 4
     658:	09 f4       	brne	.+2      	; 0x65c <main+0x8a>
     65a:	45 c0       	rjmp	.+138    	; 0x6e6 <main+0x114>
     65c:	88 f1       	brcs	.+98     	; 0x6c0 <main+0xee>
     65e:	c5 30       	cpi	r28, 0x05	; 5
     660:	09 f4       	brne	.+2      	; 0x664 <main+0x92>
     662:	52 c0       	rjmp	.+164    	; 0x708 <main+0x136>
     664:	70 c0       	rjmp	.+224    	; 0x746 <main+0x174>

				// push button
				case 1: {
					printf("I am a case1 up \n");
     666:	8e eb       	ldi	r24, 0xBE	; 190
     668:	91 e0       	ldi	r25, 0x01	; 1
     66a:	0e 94 a0 05 	call	0xb40	; 0xb40 <puts>
					spin();
     66e:	0e 94 14 02 	call	0x428	; 0x428 <spin>
     672:	2f ef       	ldi	r18, 0xFF	; 255
     674:	89 e6       	ldi	r24, 0x69	; 105
     676:	98 e1       	ldi	r25, 0x18	; 24
     678:	21 50       	subi	r18, 0x01	; 1
     67a:	80 40       	sbci	r24, 0x00	; 0
     67c:	90 40       	sbci	r25, 0x00	; 0
     67e:	e1 f7       	brne	.-8      	; 0x678 <main+0xa6>
     680:	00 c0       	rjmp	.+0      	; 0x682 <main+0xb0>
     682:	00 00       	nop
     684:	8d 2f       	mov	r24, r29
     686:	5c c0       	rjmp	.+184    	; 0x740 <main+0x16e>
					break;
				}

				// up button
				case 2: {
					printf("I am a case2 up \n");
     688:	8f ec       	ldi	r24, 0xCF	; 207
     68a:	91 e0       	ldi	r25, 0x01	; 1
     68c:	0e 94 a0 05 	call	0xb40	; 0xb40 <puts>

					increase_bet();
     690:	0e 94 15 01 	call	0x22a	; 0x22a <increase_bet>
     694:	2f ef       	ldi	r18, 0xFF	; 255
     696:	89 e6       	ldi	r24, 0x69	; 105
     698:	98 e1       	ldi	r25, 0x18	; 24
     69a:	21 50       	subi	r18, 0x01	; 1
     69c:	80 40       	sbci	r24, 0x00	; 0
     69e:	90 40       	sbci	r25, 0x00	; 0
     6a0:	e1 f7       	brne	.-8      	; 0x69a <main+0xc8>
     6a2:	00 c0       	rjmp	.+0      	; 0x6a4 <main+0xd2>
     6a4:	00 00       	nop
					_delay_ms(1000);
					slot_machine_screen();
     6a6:	0e 94 36 01 	call	0x26c	; 0x26c <slot_machine_screen>
     6aa:	2f ef       	ldi	r18, 0xFF	; 255
     6ac:	89 e6       	ldi	r24, 0x69	; 105
     6ae:	98 e1       	ldi	r25, 0x18	; 24
     6b0:	21 50       	subi	r18, 0x01	; 1
     6b2:	80 40       	sbci	r24, 0x00	; 0
     6b4:	90 40       	sbci	r25, 0x00	; 0
     6b6:	e1 f7       	brne	.-8      	; 0x6b0 <main+0xde>
     6b8:	00 c0       	rjmp	.+0      	; 0x6ba <main+0xe8>
     6ba:	00 00       	nop
     6bc:	8d 2f       	mov	r24, r29
     6be:	40 c0       	rjmp	.+128    	; 0x740 <main+0x16e>
					break;
				}

				// down button
				case 3: {
					printf("I am a case3 down \n");
     6c0:	80 ee       	ldi	r24, 0xE0	; 224
     6c2:	91 e0       	ldi	r25, 0x01	; 1
     6c4:	0e 94 a0 05 	call	0xb40	; 0xb40 <puts>

					reset();
     6c8:	0e 94 29 01 	call	0x252	; 0x252 <reset>
					slot_machine_screen();
     6cc:	0e 94 36 01 	call	0x26c	; 0x26c <slot_machine_screen>
     6d0:	2f ef       	ldi	r18, 0xFF	; 255
     6d2:	89 e6       	ldi	r24, 0x69	; 105
     6d4:	98 e1       	ldi	r25, 0x18	; 24
     6d6:	21 50       	subi	r18, 0x01	; 1
     6d8:	80 40       	sbci	r24, 0x00	; 0
     6da:	90 40       	sbci	r25, 0x00	; 0
     6dc:	e1 f7       	brne	.-8      	; 0x6d6 <main+0x104>
     6de:	00 c0       	rjmp	.+0      	; 0x6e0 <main+0x10e>
     6e0:	00 00       	nop
     6e2:	8d 2f       	mov	r24, r29
     6e4:	2d c0       	rjmp	.+90     	; 0x740 <main+0x16e>
					break;
				}

				// left button
				case 4: {
					printf("I am a case4 left \n");
     6e6:	83 ef       	ldi	r24, 0xF3	; 243
     6e8:	91 e0       	ldi	r25, 0x01	; 1
     6ea:	0e 94 a0 05 	call	0xb40	; 0xb40 <puts>

					earnings_screen();
     6ee:	0e 94 3b 01 	call	0x276	; 0x276 <earnings_screen>
     6f2:	2f ef       	ldi	r18, 0xFF	; 255
     6f4:	83 e2       	ldi	r24, 0x23	; 35
     6f6:	94 ef       	ldi	r25, 0xF4	; 244
     6f8:	21 50       	subi	r18, 0x01	; 1
     6fa:	80 40       	sbci	r24, 0x00	; 0
     6fc:	90 40       	sbci	r25, 0x00	; 0
     6fe:	e1 f7       	brne	.-8      	; 0x6f8 <main+0x126>
     700:	00 c0       	rjmp	.+0      	; 0x702 <main+0x130>
     702:	00 00       	nop
     704:	8d 2f       	mov	r24, r29
     706:	1c c0       	rjmp	.+56     	; 0x740 <main+0x16e>
					break;
				}

				// right button
				case 5: {
					printf("I am a case5 right \n");
     708:	86 e0       	ldi	r24, 0x06	; 6
     70a:	92 e0       	ldi	r25, 0x02	; 2
     70c:	0e 94 a0 05 	call	0xb40	; 0xb40 <puts>

					slot_machine_screen();
     710:	0e 94 36 01 	call	0x26c	; 0x26c <slot_machine_screen>
     714:	2f ef       	ldi	r18, 0xFF	; 255
     716:	89 e6       	ldi	r24, 0x69	; 105
     718:	98 e1       	ldi	r25, 0x18	; 24
     71a:	21 50       	subi	r18, 0x01	; 1
     71c:	80 40       	sbci	r24, 0x00	; 0
     71e:	90 40       	sbci	r25, 0x00	; 0
     720:	e1 f7       	brne	.-8      	; 0x71a <main+0x148>
     722:	00 c0       	rjmp	.+0      	; 0x724 <main+0x152>
     724:	00 00       	nop
     726:	8d 2f       	mov	r24, r29
     728:	0b c0       	rjmp	.+22     	; 0x740 <main+0x16e>
					_delay_ms(1000);
					break;
				}

				case 0: {
					printf("I am a case0 \n");
     72a:	8a e1       	ldi	r24, 0x1A	; 26
     72c:	92 e0       	ldi	r25, 0x02	; 2
     72e:	0e 94 a0 05 	call	0xb40	; 0xb40 <puts>

					loop_flag = 0;
					free(WORD);
     732:	80 91 7c 02 	lds	r24, 0x027C	; 0x80027c <WORD>
     736:	90 91 7d 02 	lds	r25, 0x027D	; 0x80027d <WORD+0x1>
     73a:	0e 94 9c 04 	call	0x938	; 0x938 <free>
     73e:	05 c0       	rjmp	.+10     	; 0x74a <main+0x178>
	joy_init();

	uint8_t loop_flag = 1;
	uint8_t btn_pressed = 0;

		while (loop_flag) {
     740:	d1 11       	cpse	r29, r1
     742:	69 cf       	rjmp	.-302    	; 0x616 <main+0x44>
     744:	02 c0       	rjmp	.+4      	; 0x74a <main+0x178>
     746:	d1 11       	cpse	r29, r1
     748:	67 cf       	rjmp	.-306    	; 0x618 <main+0x46>


		}
    return EXIT_SUCCESS;
	
}
     74a:	80 e0       	ldi	r24, 0x00	; 0
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	df 91       	pop	r29
     750:	cf 91       	pop	r28
     752:	1f 91       	pop	r17
     754:	0f 91       	pop	r16
     756:	08 95       	ret

00000758 <UARTPutch>:
    UDR = ch;

    return 0;
}

int UARTPutch(char ch, FILE *stream) {
     758:	cf 93       	push	r28
     75a:	c8 2f       	mov	r28, r24

    if (ch == '\n')
     75c:	8a 30       	cpi	r24, 0x0A	; 10
     75e:	19 f4       	brne	.+6      	; 0x766 <UARTPutch+0xe>
        UARTPutch('\r', stream);
     760:	8d e0       	ldi	r24, 0x0D	; 13
     762:	0e 94 ac 03 	call	0x758	; 0x758 <UARTPutch>

    while (!(UCSRA & (1 << UDRE)));  // loop until bit is set
     766:	e0 ec       	ldi	r30, 0xC0	; 192
     768:	f0 e0       	ldi	r31, 0x00	; 0
     76a:	80 81       	ld	r24, Z
     76c:	85 ff       	sbrs	r24, 5
     76e:	fd cf       	rjmp	.-6      	; 0x76a <UARTPutch+0x12>
    UDR = ch;
     770:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>

    return 0;

}
     774:	80 e0       	ldi	r24, 0x00	; 0
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	cf 91       	pop	r28
     77a:	08 95       	ret

0000077c <UARTGetch>:

int UARTGetch(FILE *stream) {
     77c:	cf 93       	push	r28
     77e:	bc 01       	movw	r22, r24

    unsigned char ch;

    while (!(UCSRA & (1 << RXC)));  // loop until bit is set
     780:	e0 ec       	ldi	r30, 0xC0	; 192
     782:	f0 e0       	ldi	r31, 0x00	; 0
     784:	90 81       	ld	r25, Z
     786:	99 23       	and	r25, r25
     788:	ec f7       	brge	.-6      	; 0x784 <UARTGetch+0x8>
    ch = UDR;
     78a:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>

    /* Echo the output back to the terminal */
    UARTPutch(ch, stream);
     78e:	8c 2f       	mov	r24, r28
     790:	0e 94 ac 03 	call	0x758	; 0x758 <UARTPutch>

    return ch;
}
     794:	8c 2f       	mov	r24, r28
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	cf 91       	pop	r28
     79a:	08 95       	ret

0000079c <UARTInit>:
void UARTInit(void) {

    // BAUD RATE of 4800 for 8Mhz
    // UBRRH = 0;
    // UBRRL = 103;
    UBRRH = (((F_CPU / BAUD_RATE) / 16) - 1) >> 8;  // set baud rate
     79c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    UBRRL = (((F_CPU / BAUD_RATE) / 16) - 1);
     7a0:	87 e6       	ldi	r24, 0x67	; 103
     7a2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>


    UCSRA = 0;  //clearing all flags
     7a6:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>


    UCSRB = (1 << RXEN0) | (1 << TXEN0);
     7aa:	88 e1       	ldi	r24, 0x18	; 24
     7ac:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    //  UCSRB = (1<<RXEN)|(1<<TXEN);


    // UCSR0C =(1<<USBS0)|(3<<UCSZ00);
    /* Set Frame: Data 8 Bit, No Parity and 2 Stop Bit */
    UCSRC = (1 << USBS0) | (3 << UCSZ00);
     7b0:	8e e0       	ldi	r24, 0x0E	; 14
     7b2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     7b6:	08 95       	ret

000007b8 <__divmodhi4>:
     7b8:	97 fb       	bst	r25, 7
     7ba:	07 2e       	mov	r0, r23
     7bc:	16 f4       	brtc	.+4      	; 0x7c2 <__divmodhi4+0xa>
     7be:	00 94       	com	r0
     7c0:	07 d0       	rcall	.+14     	; 0x7d0 <__divmodhi4_neg1>
     7c2:	77 fd       	sbrc	r23, 7
     7c4:	09 d0       	rcall	.+18     	; 0x7d8 <__divmodhi4_neg2>
     7c6:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <__udivmodhi4>
     7ca:	07 fc       	sbrc	r0, 7
     7cc:	05 d0       	rcall	.+10     	; 0x7d8 <__divmodhi4_neg2>
     7ce:	3e f4       	brtc	.+14     	; 0x7de <__divmodhi4_exit>

000007d0 <__divmodhi4_neg1>:
     7d0:	90 95       	com	r25
     7d2:	81 95       	neg	r24
     7d4:	9f 4f       	sbci	r25, 0xFF	; 255
     7d6:	08 95       	ret

000007d8 <__divmodhi4_neg2>:
     7d8:	70 95       	com	r23
     7da:	61 95       	neg	r22
     7dc:	7f 4f       	sbci	r23, 0xFF	; 255

000007de <__divmodhi4_exit>:
     7de:	08 95       	ret

000007e0 <__udivmodhi4>:
     7e0:	aa 1b       	sub	r26, r26
     7e2:	bb 1b       	sub	r27, r27
     7e4:	51 e1       	ldi	r21, 0x11	; 17
     7e6:	07 c0       	rjmp	.+14     	; 0x7f6 <__udivmodhi4_ep>

000007e8 <__udivmodhi4_loop>:
     7e8:	aa 1f       	adc	r26, r26
     7ea:	bb 1f       	adc	r27, r27
     7ec:	a6 17       	cp	r26, r22
     7ee:	b7 07       	cpc	r27, r23
     7f0:	10 f0       	brcs	.+4      	; 0x7f6 <__udivmodhi4_ep>
     7f2:	a6 1b       	sub	r26, r22
     7f4:	b7 0b       	sbc	r27, r23

000007f6 <__udivmodhi4_ep>:
     7f6:	88 1f       	adc	r24, r24
     7f8:	99 1f       	adc	r25, r25
     7fa:	5a 95       	dec	r21
     7fc:	a9 f7       	brne	.-22     	; 0x7e8 <__udivmodhi4_loop>
     7fe:	80 95       	com	r24
     800:	90 95       	com	r25
     802:	bc 01       	movw	r22, r24
     804:	cd 01       	movw	r24, r26
     806:	08 95       	ret

00000808 <malloc>:
     808:	0f 93       	push	r16
     80a:	1f 93       	push	r17
     80c:	cf 93       	push	r28
     80e:	df 93       	push	r29
     810:	82 30       	cpi	r24, 0x02	; 2
     812:	91 05       	cpc	r25, r1
     814:	10 f4       	brcc	.+4      	; 0x81a <malloc+0x12>
     816:	82 e0       	ldi	r24, 0x02	; 2
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	e0 91 81 02 	lds	r30, 0x0281	; 0x800281 <__flp>
     81e:	f0 91 82 02 	lds	r31, 0x0282	; 0x800282 <__flp+0x1>
     822:	20 e0       	ldi	r18, 0x00	; 0
     824:	30 e0       	ldi	r19, 0x00	; 0
     826:	a0 e0       	ldi	r26, 0x00	; 0
     828:	b0 e0       	ldi	r27, 0x00	; 0
     82a:	30 97       	sbiw	r30, 0x00	; 0
     82c:	19 f1       	breq	.+70     	; 0x874 <malloc+0x6c>
     82e:	40 81       	ld	r20, Z
     830:	51 81       	ldd	r21, Z+1	; 0x01
     832:	02 81       	ldd	r16, Z+2	; 0x02
     834:	13 81       	ldd	r17, Z+3	; 0x03
     836:	48 17       	cp	r20, r24
     838:	59 07       	cpc	r21, r25
     83a:	c8 f0       	brcs	.+50     	; 0x86e <malloc+0x66>
     83c:	84 17       	cp	r24, r20
     83e:	95 07       	cpc	r25, r21
     840:	69 f4       	brne	.+26     	; 0x85c <malloc+0x54>
     842:	10 97       	sbiw	r26, 0x00	; 0
     844:	31 f0       	breq	.+12     	; 0x852 <malloc+0x4a>
     846:	12 96       	adiw	r26, 0x02	; 2
     848:	0c 93       	st	X, r16
     84a:	12 97       	sbiw	r26, 0x02	; 2
     84c:	13 96       	adiw	r26, 0x03	; 3
     84e:	1c 93       	st	X, r17
     850:	27 c0       	rjmp	.+78     	; 0x8a0 <malloc+0x98>
     852:	00 93 81 02 	sts	0x0281, r16	; 0x800281 <__flp>
     856:	10 93 82 02 	sts	0x0282, r17	; 0x800282 <__flp+0x1>
     85a:	22 c0       	rjmp	.+68     	; 0x8a0 <malloc+0x98>
     85c:	21 15       	cp	r18, r1
     85e:	31 05       	cpc	r19, r1
     860:	19 f0       	breq	.+6      	; 0x868 <malloc+0x60>
     862:	42 17       	cp	r20, r18
     864:	53 07       	cpc	r21, r19
     866:	18 f4       	brcc	.+6      	; 0x86e <malloc+0x66>
     868:	9a 01       	movw	r18, r20
     86a:	bd 01       	movw	r22, r26
     86c:	ef 01       	movw	r28, r30
     86e:	df 01       	movw	r26, r30
     870:	f8 01       	movw	r30, r16
     872:	db cf       	rjmp	.-74     	; 0x82a <malloc+0x22>
     874:	21 15       	cp	r18, r1
     876:	31 05       	cpc	r19, r1
     878:	f9 f0       	breq	.+62     	; 0x8b8 <malloc+0xb0>
     87a:	28 1b       	sub	r18, r24
     87c:	39 0b       	sbc	r19, r25
     87e:	24 30       	cpi	r18, 0x04	; 4
     880:	31 05       	cpc	r19, r1
     882:	80 f4       	brcc	.+32     	; 0x8a4 <malloc+0x9c>
     884:	8a 81       	ldd	r24, Y+2	; 0x02
     886:	9b 81       	ldd	r25, Y+3	; 0x03
     888:	61 15       	cp	r22, r1
     88a:	71 05       	cpc	r23, r1
     88c:	21 f0       	breq	.+8      	; 0x896 <malloc+0x8e>
     88e:	fb 01       	movw	r30, r22
     890:	93 83       	std	Z+3, r25	; 0x03
     892:	82 83       	std	Z+2, r24	; 0x02
     894:	04 c0       	rjmp	.+8      	; 0x89e <malloc+0x96>
     896:	90 93 82 02 	sts	0x0282, r25	; 0x800282 <__flp+0x1>
     89a:	80 93 81 02 	sts	0x0281, r24	; 0x800281 <__flp>
     89e:	fe 01       	movw	r30, r28
     8a0:	32 96       	adiw	r30, 0x02	; 2
     8a2:	44 c0       	rjmp	.+136    	; 0x92c <malloc+0x124>
     8a4:	fe 01       	movw	r30, r28
     8a6:	e2 0f       	add	r30, r18
     8a8:	f3 1f       	adc	r31, r19
     8aa:	81 93       	st	Z+, r24
     8ac:	91 93       	st	Z+, r25
     8ae:	22 50       	subi	r18, 0x02	; 2
     8b0:	31 09       	sbc	r19, r1
     8b2:	39 83       	std	Y+1, r19	; 0x01
     8b4:	28 83       	st	Y, r18
     8b6:	3a c0       	rjmp	.+116    	; 0x92c <malloc+0x124>
     8b8:	20 91 7f 02 	lds	r18, 0x027F	; 0x80027f <__brkval>
     8bc:	30 91 80 02 	lds	r19, 0x0280	; 0x800280 <__brkval+0x1>
     8c0:	23 2b       	or	r18, r19
     8c2:	41 f4       	brne	.+16     	; 0x8d4 <malloc+0xcc>
     8c4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     8c8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     8cc:	30 93 80 02 	sts	0x0280, r19	; 0x800280 <__brkval+0x1>
     8d0:	20 93 7f 02 	sts	0x027F, r18	; 0x80027f <__brkval>
     8d4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     8d8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     8dc:	21 15       	cp	r18, r1
     8de:	31 05       	cpc	r19, r1
     8e0:	41 f4       	brne	.+16     	; 0x8f2 <malloc+0xea>
     8e2:	2d b7       	in	r18, 0x3d	; 61
     8e4:	3e b7       	in	r19, 0x3e	; 62
     8e6:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     8ea:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     8ee:	24 1b       	sub	r18, r20
     8f0:	35 0b       	sbc	r19, r21
     8f2:	e0 91 7f 02 	lds	r30, 0x027F	; 0x80027f <__brkval>
     8f6:	f0 91 80 02 	lds	r31, 0x0280	; 0x800280 <__brkval+0x1>
     8fa:	e2 17       	cp	r30, r18
     8fc:	f3 07       	cpc	r31, r19
     8fe:	a0 f4       	brcc	.+40     	; 0x928 <malloc+0x120>
     900:	2e 1b       	sub	r18, r30
     902:	3f 0b       	sbc	r19, r31
     904:	28 17       	cp	r18, r24
     906:	39 07       	cpc	r19, r25
     908:	78 f0       	brcs	.+30     	; 0x928 <malloc+0x120>
     90a:	ac 01       	movw	r20, r24
     90c:	4e 5f       	subi	r20, 0xFE	; 254
     90e:	5f 4f       	sbci	r21, 0xFF	; 255
     910:	24 17       	cp	r18, r20
     912:	35 07       	cpc	r19, r21
     914:	48 f0       	brcs	.+18     	; 0x928 <malloc+0x120>
     916:	4e 0f       	add	r20, r30
     918:	5f 1f       	adc	r21, r31
     91a:	50 93 80 02 	sts	0x0280, r21	; 0x800280 <__brkval+0x1>
     91e:	40 93 7f 02 	sts	0x027F, r20	; 0x80027f <__brkval>
     922:	81 93       	st	Z+, r24
     924:	91 93       	st	Z+, r25
     926:	02 c0       	rjmp	.+4      	; 0x92c <malloc+0x124>
     928:	e0 e0       	ldi	r30, 0x00	; 0
     92a:	f0 e0       	ldi	r31, 0x00	; 0
     92c:	cf 01       	movw	r24, r30
     92e:	df 91       	pop	r29
     930:	cf 91       	pop	r28
     932:	1f 91       	pop	r17
     934:	0f 91       	pop	r16
     936:	08 95       	ret

00000938 <free>:
     938:	cf 93       	push	r28
     93a:	df 93       	push	r29
     93c:	00 97       	sbiw	r24, 0x00	; 0
     93e:	09 f4       	brne	.+2      	; 0x942 <free+0xa>
     940:	81 c0       	rjmp	.+258    	; 0xa44 <free+0x10c>
     942:	fc 01       	movw	r30, r24
     944:	32 97       	sbiw	r30, 0x02	; 2
     946:	13 82       	std	Z+3, r1	; 0x03
     948:	12 82       	std	Z+2, r1	; 0x02
     94a:	a0 91 81 02 	lds	r26, 0x0281	; 0x800281 <__flp>
     94e:	b0 91 82 02 	lds	r27, 0x0282	; 0x800282 <__flp+0x1>
     952:	10 97       	sbiw	r26, 0x00	; 0
     954:	81 f4       	brne	.+32     	; 0x976 <free+0x3e>
     956:	20 81       	ld	r18, Z
     958:	31 81       	ldd	r19, Z+1	; 0x01
     95a:	82 0f       	add	r24, r18
     95c:	93 1f       	adc	r25, r19
     95e:	20 91 7f 02 	lds	r18, 0x027F	; 0x80027f <__brkval>
     962:	30 91 80 02 	lds	r19, 0x0280	; 0x800280 <__brkval+0x1>
     966:	28 17       	cp	r18, r24
     968:	39 07       	cpc	r19, r25
     96a:	51 f5       	brne	.+84     	; 0x9c0 <free+0x88>
     96c:	f0 93 80 02 	sts	0x0280, r31	; 0x800280 <__brkval+0x1>
     970:	e0 93 7f 02 	sts	0x027F, r30	; 0x80027f <__brkval>
     974:	67 c0       	rjmp	.+206    	; 0xa44 <free+0x10c>
     976:	ed 01       	movw	r28, r26
     978:	20 e0       	ldi	r18, 0x00	; 0
     97a:	30 e0       	ldi	r19, 0x00	; 0
     97c:	ce 17       	cp	r28, r30
     97e:	df 07       	cpc	r29, r31
     980:	40 f4       	brcc	.+16     	; 0x992 <free+0x5a>
     982:	4a 81       	ldd	r20, Y+2	; 0x02
     984:	5b 81       	ldd	r21, Y+3	; 0x03
     986:	9e 01       	movw	r18, r28
     988:	41 15       	cp	r20, r1
     98a:	51 05       	cpc	r21, r1
     98c:	f1 f0       	breq	.+60     	; 0x9ca <free+0x92>
     98e:	ea 01       	movw	r28, r20
     990:	f5 cf       	rjmp	.-22     	; 0x97c <free+0x44>
     992:	d3 83       	std	Z+3, r29	; 0x03
     994:	c2 83       	std	Z+2, r28	; 0x02
     996:	40 81       	ld	r20, Z
     998:	51 81       	ldd	r21, Z+1	; 0x01
     99a:	84 0f       	add	r24, r20
     99c:	95 1f       	adc	r25, r21
     99e:	c8 17       	cp	r28, r24
     9a0:	d9 07       	cpc	r29, r25
     9a2:	59 f4       	brne	.+22     	; 0x9ba <free+0x82>
     9a4:	88 81       	ld	r24, Y
     9a6:	99 81       	ldd	r25, Y+1	; 0x01
     9a8:	84 0f       	add	r24, r20
     9aa:	95 1f       	adc	r25, r21
     9ac:	02 96       	adiw	r24, 0x02	; 2
     9ae:	91 83       	std	Z+1, r25	; 0x01
     9b0:	80 83       	st	Z, r24
     9b2:	8a 81       	ldd	r24, Y+2	; 0x02
     9b4:	9b 81       	ldd	r25, Y+3	; 0x03
     9b6:	93 83       	std	Z+3, r25	; 0x03
     9b8:	82 83       	std	Z+2, r24	; 0x02
     9ba:	21 15       	cp	r18, r1
     9bc:	31 05       	cpc	r19, r1
     9be:	29 f4       	brne	.+10     	; 0x9ca <free+0x92>
     9c0:	f0 93 82 02 	sts	0x0282, r31	; 0x800282 <__flp+0x1>
     9c4:	e0 93 81 02 	sts	0x0281, r30	; 0x800281 <__flp>
     9c8:	3d c0       	rjmp	.+122    	; 0xa44 <free+0x10c>
     9ca:	e9 01       	movw	r28, r18
     9cc:	fb 83       	std	Y+3, r31	; 0x03
     9ce:	ea 83       	std	Y+2, r30	; 0x02
     9d0:	49 91       	ld	r20, Y+
     9d2:	59 91       	ld	r21, Y+
     9d4:	c4 0f       	add	r28, r20
     9d6:	d5 1f       	adc	r29, r21
     9d8:	ec 17       	cp	r30, r28
     9da:	fd 07       	cpc	r31, r29
     9dc:	61 f4       	brne	.+24     	; 0x9f6 <free+0xbe>
     9de:	80 81       	ld	r24, Z
     9e0:	91 81       	ldd	r25, Z+1	; 0x01
     9e2:	84 0f       	add	r24, r20
     9e4:	95 1f       	adc	r25, r21
     9e6:	02 96       	adiw	r24, 0x02	; 2
     9e8:	e9 01       	movw	r28, r18
     9ea:	99 83       	std	Y+1, r25	; 0x01
     9ec:	88 83       	st	Y, r24
     9ee:	82 81       	ldd	r24, Z+2	; 0x02
     9f0:	93 81       	ldd	r25, Z+3	; 0x03
     9f2:	9b 83       	std	Y+3, r25	; 0x03
     9f4:	8a 83       	std	Y+2, r24	; 0x02
     9f6:	e0 e0       	ldi	r30, 0x00	; 0
     9f8:	f0 e0       	ldi	r31, 0x00	; 0
     9fa:	12 96       	adiw	r26, 0x02	; 2
     9fc:	8d 91       	ld	r24, X+
     9fe:	9c 91       	ld	r25, X
     a00:	13 97       	sbiw	r26, 0x03	; 3
     a02:	00 97       	sbiw	r24, 0x00	; 0
     a04:	19 f0       	breq	.+6      	; 0xa0c <free+0xd4>
     a06:	fd 01       	movw	r30, r26
     a08:	dc 01       	movw	r26, r24
     a0a:	f7 cf       	rjmp	.-18     	; 0x9fa <free+0xc2>
     a0c:	8d 91       	ld	r24, X+
     a0e:	9c 91       	ld	r25, X
     a10:	11 97       	sbiw	r26, 0x01	; 1
     a12:	9d 01       	movw	r18, r26
     a14:	2e 5f       	subi	r18, 0xFE	; 254
     a16:	3f 4f       	sbci	r19, 0xFF	; 255
     a18:	82 0f       	add	r24, r18
     a1a:	93 1f       	adc	r25, r19
     a1c:	20 91 7f 02 	lds	r18, 0x027F	; 0x80027f <__brkval>
     a20:	30 91 80 02 	lds	r19, 0x0280	; 0x800280 <__brkval+0x1>
     a24:	28 17       	cp	r18, r24
     a26:	39 07       	cpc	r19, r25
     a28:	69 f4       	brne	.+26     	; 0xa44 <free+0x10c>
     a2a:	30 97       	sbiw	r30, 0x00	; 0
     a2c:	29 f4       	brne	.+10     	; 0xa38 <free+0x100>
     a2e:	10 92 82 02 	sts	0x0282, r1	; 0x800282 <__flp+0x1>
     a32:	10 92 81 02 	sts	0x0281, r1	; 0x800281 <__flp>
     a36:	02 c0       	rjmp	.+4      	; 0xa3c <free+0x104>
     a38:	13 82       	std	Z+3, r1	; 0x03
     a3a:	12 82       	std	Z+2, r1	; 0x02
     a3c:	b0 93 80 02 	sts	0x0280, r27	; 0x800280 <__brkval+0x1>
     a40:	a0 93 7f 02 	sts	0x027F, r26	; 0x80027f <__brkval>
     a44:	df 91       	pop	r29
     a46:	cf 91       	pop	r28
     a48:	08 95       	ret

00000a4a <do_rand>:
     a4a:	8f 92       	push	r8
     a4c:	9f 92       	push	r9
     a4e:	af 92       	push	r10
     a50:	bf 92       	push	r11
     a52:	cf 92       	push	r12
     a54:	df 92       	push	r13
     a56:	ef 92       	push	r14
     a58:	ff 92       	push	r15
     a5a:	cf 93       	push	r28
     a5c:	df 93       	push	r29
     a5e:	ec 01       	movw	r28, r24
     a60:	68 81       	ld	r22, Y
     a62:	79 81       	ldd	r23, Y+1	; 0x01
     a64:	8a 81       	ldd	r24, Y+2	; 0x02
     a66:	9b 81       	ldd	r25, Y+3	; 0x03
     a68:	61 15       	cp	r22, r1
     a6a:	71 05       	cpc	r23, r1
     a6c:	81 05       	cpc	r24, r1
     a6e:	91 05       	cpc	r25, r1
     a70:	21 f4       	brne	.+8      	; 0xa7a <do_rand+0x30>
     a72:	64 e2       	ldi	r22, 0x24	; 36
     a74:	79 ed       	ldi	r23, 0xD9	; 217
     a76:	8b e5       	ldi	r24, 0x5B	; 91
     a78:	97 e0       	ldi	r25, 0x07	; 7
     a7a:	2d e1       	ldi	r18, 0x1D	; 29
     a7c:	33 ef       	ldi	r19, 0xF3	; 243
     a7e:	41 e0       	ldi	r20, 0x01	; 1
     a80:	50 e0       	ldi	r21, 0x00	; 0
     a82:	0e 94 61 08 	call	0x10c2	; 0x10c2 <__divmodsi4>
     a86:	49 01       	movw	r8, r18
     a88:	5a 01       	movw	r10, r20
     a8a:	9b 01       	movw	r18, r22
     a8c:	ac 01       	movw	r20, r24
     a8e:	a7 ea       	ldi	r26, 0xA7	; 167
     a90:	b1 e4       	ldi	r27, 0x41	; 65
     a92:	0e 94 80 08 	call	0x1100	; 0x1100 <__muluhisi3>
     a96:	6b 01       	movw	r12, r22
     a98:	7c 01       	movw	r14, r24
     a9a:	ac ee       	ldi	r26, 0xEC	; 236
     a9c:	b4 ef       	ldi	r27, 0xF4	; 244
     a9e:	a5 01       	movw	r20, r10
     aa0:	94 01       	movw	r18, r8
     aa2:	0e 94 8e 08 	call	0x111c	; 0x111c <__mulohisi3>
     aa6:	dc 01       	movw	r26, r24
     aa8:	cb 01       	movw	r24, r22
     aaa:	8c 0d       	add	r24, r12
     aac:	9d 1d       	adc	r25, r13
     aae:	ae 1d       	adc	r26, r14
     ab0:	bf 1d       	adc	r27, r15
     ab2:	b7 ff       	sbrs	r27, 7
     ab4:	03 c0       	rjmp	.+6      	; 0xabc <do_rand+0x72>
     ab6:	01 97       	sbiw	r24, 0x01	; 1
     ab8:	a1 09       	sbc	r26, r1
     aba:	b0 48       	sbci	r27, 0x80	; 128
     abc:	88 83       	st	Y, r24
     abe:	99 83       	std	Y+1, r25	; 0x01
     ac0:	aa 83       	std	Y+2, r26	; 0x02
     ac2:	bb 83       	std	Y+3, r27	; 0x03
     ac4:	9f 77       	andi	r25, 0x7F	; 127
     ac6:	df 91       	pop	r29
     ac8:	cf 91       	pop	r28
     aca:	ff 90       	pop	r15
     acc:	ef 90       	pop	r14
     ace:	df 90       	pop	r13
     ad0:	cf 90       	pop	r12
     ad2:	bf 90       	pop	r11
     ad4:	af 90       	pop	r10
     ad6:	9f 90       	pop	r9
     ad8:	8f 90       	pop	r8
     ada:	08 95       	ret

00000adc <rand_r>:
     adc:	0e 94 25 05 	call	0xa4a	; 0xa4a <do_rand>
     ae0:	08 95       	ret

00000ae2 <rand>:
     ae2:	86 e0       	ldi	r24, 0x06	; 6
     ae4:	91 e0       	ldi	r25, 0x01	; 1
     ae6:	0e 94 25 05 	call	0xa4a	; 0xa4a <do_rand>
     aea:	08 95       	ret

00000aec <srand>:
     aec:	a0 e0       	ldi	r26, 0x00	; 0
     aee:	b0 e0       	ldi	r27, 0x00	; 0
     af0:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <next>
     af4:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <next+0x1>
     af8:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <next+0x2>
     afc:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <next+0x3>
     b00:	08 95       	ret

00000b02 <strcmp>:
     b02:	fb 01       	movw	r30, r22
     b04:	dc 01       	movw	r26, r24
     b06:	8d 91       	ld	r24, X+
     b08:	01 90       	ld	r0, Z+
     b0a:	80 19       	sub	r24, r0
     b0c:	01 10       	cpse	r0, r1
     b0e:	d9 f3       	breq	.-10     	; 0xb06 <strcmp+0x4>
     b10:	99 0b       	sbc	r25, r25
     b12:	08 95       	ret

00000b14 <printf>:
     b14:	a0 e0       	ldi	r26, 0x00	; 0
     b16:	b0 e0       	ldi	r27, 0x00	; 0
     b18:	e0 e9       	ldi	r30, 0x90	; 144
     b1a:	f5 e0       	ldi	r31, 0x05	; 5
     b1c:	0c 94 a3 08 	jmp	0x1146	; 0x1146 <__prologue_saves__+0x20>
     b20:	ae 01       	movw	r20, r28
     b22:	4b 5f       	subi	r20, 0xFB	; 251
     b24:	5f 4f       	sbci	r21, 0xFF	; 255
     b26:	fa 01       	movw	r30, r20
     b28:	61 91       	ld	r22, Z+
     b2a:	71 91       	ld	r23, Z+
     b2c:	af 01       	movw	r20, r30
     b2e:	80 91 85 02 	lds	r24, 0x0285	; 0x800285 <__iob+0x2>
     b32:	90 91 86 02 	lds	r25, 0x0286	; 0x800286 <__iob+0x3>
     b36:	0e 94 d0 05 	call	0xba0	; 0xba0 <vfprintf>
     b3a:	e2 e0       	ldi	r30, 0x02	; 2
     b3c:	0c 94 bf 08 	jmp	0x117e	; 0x117e <__epilogue_restores__+0x20>

00000b40 <puts>:
     b40:	0f 93       	push	r16
     b42:	1f 93       	push	r17
     b44:	cf 93       	push	r28
     b46:	df 93       	push	r29
     b48:	e0 91 85 02 	lds	r30, 0x0285	; 0x800285 <__iob+0x2>
     b4c:	f0 91 86 02 	lds	r31, 0x0286	; 0x800286 <__iob+0x3>
     b50:	23 81       	ldd	r18, Z+3	; 0x03
     b52:	21 ff       	sbrs	r18, 1
     b54:	1b c0       	rjmp	.+54     	; 0xb8c <puts+0x4c>
     b56:	8c 01       	movw	r16, r24
     b58:	d0 e0       	ldi	r29, 0x00	; 0
     b5a:	c0 e0       	ldi	r28, 0x00	; 0
     b5c:	f8 01       	movw	r30, r16
     b5e:	81 91       	ld	r24, Z+
     b60:	8f 01       	movw	r16, r30
     b62:	60 91 85 02 	lds	r22, 0x0285	; 0x800285 <__iob+0x2>
     b66:	70 91 86 02 	lds	r23, 0x0286	; 0x800286 <__iob+0x3>
     b6a:	db 01       	movw	r26, r22
     b6c:	18 96       	adiw	r26, 0x08	; 8
     b6e:	ed 91       	ld	r30, X+
     b70:	fc 91       	ld	r31, X
     b72:	19 97       	sbiw	r26, 0x09	; 9
     b74:	88 23       	and	r24, r24
     b76:	31 f0       	breq	.+12     	; 0xb84 <puts+0x44>
     b78:	09 95       	icall
     b7a:	89 2b       	or	r24, r25
     b7c:	79 f3       	breq	.-34     	; 0xb5c <puts+0x1c>
     b7e:	df ef       	ldi	r29, 0xFF	; 255
     b80:	cf ef       	ldi	r28, 0xFF	; 255
     b82:	ec cf       	rjmp	.-40     	; 0xb5c <puts+0x1c>
     b84:	8a e0       	ldi	r24, 0x0A	; 10
     b86:	09 95       	icall
     b88:	89 2b       	or	r24, r25
     b8a:	19 f0       	breq	.+6      	; 0xb92 <puts+0x52>
     b8c:	8f ef       	ldi	r24, 0xFF	; 255
     b8e:	9f ef       	ldi	r25, 0xFF	; 255
     b90:	02 c0       	rjmp	.+4      	; 0xb96 <puts+0x56>
     b92:	8d 2f       	mov	r24, r29
     b94:	9c 2f       	mov	r25, r28
     b96:	df 91       	pop	r29
     b98:	cf 91       	pop	r28
     b9a:	1f 91       	pop	r17
     b9c:	0f 91       	pop	r16
     b9e:	08 95       	ret

00000ba0 <vfprintf>:
     ba0:	ab e0       	ldi	r26, 0x0B	; 11
     ba2:	b0 e0       	ldi	r27, 0x00	; 0
     ba4:	e6 ed       	ldi	r30, 0xD6	; 214
     ba6:	f5 e0       	ldi	r31, 0x05	; 5
     ba8:	0c 94 93 08 	jmp	0x1126	; 0x1126 <__prologue_saves__>
     bac:	6c 01       	movw	r12, r24
     bae:	7b 01       	movw	r14, r22
     bb0:	8a 01       	movw	r16, r20
     bb2:	fc 01       	movw	r30, r24
     bb4:	17 82       	std	Z+7, r1	; 0x07
     bb6:	16 82       	std	Z+6, r1	; 0x06
     bb8:	83 81       	ldd	r24, Z+3	; 0x03
     bba:	81 ff       	sbrs	r24, 1
     bbc:	cc c1       	rjmp	.+920    	; 0xf56 <vfprintf+0x3b6>
     bbe:	ce 01       	movw	r24, r28
     bc0:	01 96       	adiw	r24, 0x01	; 1
     bc2:	3c 01       	movw	r6, r24
     bc4:	f6 01       	movw	r30, r12
     bc6:	93 81       	ldd	r25, Z+3	; 0x03
     bc8:	f7 01       	movw	r30, r14
     bca:	93 fd       	sbrc	r25, 3
     bcc:	85 91       	lpm	r24, Z+
     bce:	93 ff       	sbrs	r25, 3
     bd0:	81 91       	ld	r24, Z+
     bd2:	7f 01       	movw	r14, r30
     bd4:	88 23       	and	r24, r24
     bd6:	09 f4       	brne	.+2      	; 0xbda <vfprintf+0x3a>
     bd8:	ba c1       	rjmp	.+884    	; 0xf4e <vfprintf+0x3ae>
     bda:	85 32       	cpi	r24, 0x25	; 37
     bdc:	39 f4       	brne	.+14     	; 0xbec <vfprintf+0x4c>
     bde:	93 fd       	sbrc	r25, 3
     be0:	85 91       	lpm	r24, Z+
     be2:	93 ff       	sbrs	r25, 3
     be4:	81 91       	ld	r24, Z+
     be6:	7f 01       	movw	r14, r30
     be8:	85 32       	cpi	r24, 0x25	; 37
     bea:	29 f4       	brne	.+10     	; 0xbf6 <vfprintf+0x56>
     bec:	b6 01       	movw	r22, r12
     bee:	90 e0       	ldi	r25, 0x00	; 0
     bf0:	0e 94 c7 07 	call	0xf8e	; 0xf8e <fputc>
     bf4:	e7 cf       	rjmp	.-50     	; 0xbc4 <vfprintf+0x24>
     bf6:	91 2c       	mov	r9, r1
     bf8:	21 2c       	mov	r2, r1
     bfa:	31 2c       	mov	r3, r1
     bfc:	ff e1       	ldi	r31, 0x1F	; 31
     bfe:	f3 15       	cp	r31, r3
     c00:	d8 f0       	brcs	.+54     	; 0xc38 <vfprintf+0x98>
     c02:	8b 32       	cpi	r24, 0x2B	; 43
     c04:	79 f0       	breq	.+30     	; 0xc24 <vfprintf+0x84>
     c06:	38 f4       	brcc	.+14     	; 0xc16 <vfprintf+0x76>
     c08:	80 32       	cpi	r24, 0x20	; 32
     c0a:	79 f0       	breq	.+30     	; 0xc2a <vfprintf+0x8a>
     c0c:	83 32       	cpi	r24, 0x23	; 35
     c0e:	a1 f4       	brne	.+40     	; 0xc38 <vfprintf+0x98>
     c10:	23 2d       	mov	r18, r3
     c12:	20 61       	ori	r18, 0x10	; 16
     c14:	1d c0       	rjmp	.+58     	; 0xc50 <vfprintf+0xb0>
     c16:	8d 32       	cpi	r24, 0x2D	; 45
     c18:	61 f0       	breq	.+24     	; 0xc32 <vfprintf+0x92>
     c1a:	80 33       	cpi	r24, 0x30	; 48
     c1c:	69 f4       	brne	.+26     	; 0xc38 <vfprintf+0x98>
     c1e:	23 2d       	mov	r18, r3
     c20:	21 60       	ori	r18, 0x01	; 1
     c22:	16 c0       	rjmp	.+44     	; 0xc50 <vfprintf+0xb0>
     c24:	83 2d       	mov	r24, r3
     c26:	82 60       	ori	r24, 0x02	; 2
     c28:	38 2e       	mov	r3, r24
     c2a:	e3 2d       	mov	r30, r3
     c2c:	e4 60       	ori	r30, 0x04	; 4
     c2e:	3e 2e       	mov	r3, r30
     c30:	2a c0       	rjmp	.+84     	; 0xc86 <vfprintf+0xe6>
     c32:	f3 2d       	mov	r31, r3
     c34:	f8 60       	ori	r31, 0x08	; 8
     c36:	1d c0       	rjmp	.+58     	; 0xc72 <vfprintf+0xd2>
     c38:	37 fc       	sbrc	r3, 7
     c3a:	2d c0       	rjmp	.+90     	; 0xc96 <vfprintf+0xf6>
     c3c:	20 ed       	ldi	r18, 0xD0	; 208
     c3e:	28 0f       	add	r18, r24
     c40:	2a 30       	cpi	r18, 0x0A	; 10
     c42:	40 f0       	brcs	.+16     	; 0xc54 <vfprintf+0xb4>
     c44:	8e 32       	cpi	r24, 0x2E	; 46
     c46:	b9 f4       	brne	.+46     	; 0xc76 <vfprintf+0xd6>
     c48:	36 fc       	sbrc	r3, 6
     c4a:	81 c1       	rjmp	.+770    	; 0xf4e <vfprintf+0x3ae>
     c4c:	23 2d       	mov	r18, r3
     c4e:	20 64       	ori	r18, 0x40	; 64
     c50:	32 2e       	mov	r3, r18
     c52:	19 c0       	rjmp	.+50     	; 0xc86 <vfprintf+0xe6>
     c54:	36 fe       	sbrs	r3, 6
     c56:	06 c0       	rjmp	.+12     	; 0xc64 <vfprintf+0xc4>
     c58:	8a e0       	ldi	r24, 0x0A	; 10
     c5a:	98 9e       	mul	r9, r24
     c5c:	20 0d       	add	r18, r0
     c5e:	11 24       	eor	r1, r1
     c60:	92 2e       	mov	r9, r18
     c62:	11 c0       	rjmp	.+34     	; 0xc86 <vfprintf+0xe6>
     c64:	ea e0       	ldi	r30, 0x0A	; 10
     c66:	2e 9e       	mul	r2, r30
     c68:	20 0d       	add	r18, r0
     c6a:	11 24       	eor	r1, r1
     c6c:	22 2e       	mov	r2, r18
     c6e:	f3 2d       	mov	r31, r3
     c70:	f0 62       	ori	r31, 0x20	; 32
     c72:	3f 2e       	mov	r3, r31
     c74:	08 c0       	rjmp	.+16     	; 0xc86 <vfprintf+0xe6>
     c76:	8c 36       	cpi	r24, 0x6C	; 108
     c78:	21 f4       	brne	.+8      	; 0xc82 <vfprintf+0xe2>
     c7a:	83 2d       	mov	r24, r3
     c7c:	80 68       	ori	r24, 0x80	; 128
     c7e:	38 2e       	mov	r3, r24
     c80:	02 c0       	rjmp	.+4      	; 0xc86 <vfprintf+0xe6>
     c82:	88 36       	cpi	r24, 0x68	; 104
     c84:	41 f4       	brne	.+16     	; 0xc96 <vfprintf+0xf6>
     c86:	f7 01       	movw	r30, r14
     c88:	93 fd       	sbrc	r25, 3
     c8a:	85 91       	lpm	r24, Z+
     c8c:	93 ff       	sbrs	r25, 3
     c8e:	81 91       	ld	r24, Z+
     c90:	7f 01       	movw	r14, r30
     c92:	81 11       	cpse	r24, r1
     c94:	b3 cf       	rjmp	.-154    	; 0xbfc <vfprintf+0x5c>
     c96:	98 2f       	mov	r25, r24
     c98:	9f 7d       	andi	r25, 0xDF	; 223
     c9a:	95 54       	subi	r25, 0x45	; 69
     c9c:	93 30       	cpi	r25, 0x03	; 3
     c9e:	28 f4       	brcc	.+10     	; 0xcaa <vfprintf+0x10a>
     ca0:	0c 5f       	subi	r16, 0xFC	; 252
     ca2:	1f 4f       	sbci	r17, 0xFF	; 255
     ca4:	9f e3       	ldi	r25, 0x3F	; 63
     ca6:	99 83       	std	Y+1, r25	; 0x01
     ca8:	0d c0       	rjmp	.+26     	; 0xcc4 <vfprintf+0x124>
     caa:	83 36       	cpi	r24, 0x63	; 99
     cac:	31 f0       	breq	.+12     	; 0xcba <vfprintf+0x11a>
     cae:	83 37       	cpi	r24, 0x73	; 115
     cb0:	71 f0       	breq	.+28     	; 0xcce <vfprintf+0x12e>
     cb2:	83 35       	cpi	r24, 0x53	; 83
     cb4:	09 f0       	breq	.+2      	; 0xcb8 <vfprintf+0x118>
     cb6:	59 c0       	rjmp	.+178    	; 0xd6a <vfprintf+0x1ca>
     cb8:	21 c0       	rjmp	.+66     	; 0xcfc <vfprintf+0x15c>
     cba:	f8 01       	movw	r30, r16
     cbc:	80 81       	ld	r24, Z
     cbe:	89 83       	std	Y+1, r24	; 0x01
     cc0:	0e 5f       	subi	r16, 0xFE	; 254
     cc2:	1f 4f       	sbci	r17, 0xFF	; 255
     cc4:	88 24       	eor	r8, r8
     cc6:	83 94       	inc	r8
     cc8:	91 2c       	mov	r9, r1
     cca:	53 01       	movw	r10, r6
     ccc:	13 c0       	rjmp	.+38     	; 0xcf4 <vfprintf+0x154>
     cce:	28 01       	movw	r4, r16
     cd0:	f2 e0       	ldi	r31, 0x02	; 2
     cd2:	4f 0e       	add	r4, r31
     cd4:	51 1c       	adc	r5, r1
     cd6:	f8 01       	movw	r30, r16
     cd8:	a0 80       	ld	r10, Z
     cda:	b1 80       	ldd	r11, Z+1	; 0x01
     cdc:	36 fe       	sbrs	r3, 6
     cde:	03 c0       	rjmp	.+6      	; 0xce6 <vfprintf+0x146>
     ce0:	69 2d       	mov	r22, r9
     ce2:	70 e0       	ldi	r23, 0x00	; 0
     ce4:	02 c0       	rjmp	.+4      	; 0xcea <vfprintf+0x14a>
     ce6:	6f ef       	ldi	r22, 0xFF	; 255
     ce8:	7f ef       	ldi	r23, 0xFF	; 255
     cea:	c5 01       	movw	r24, r10
     cec:	0e 94 bc 07 	call	0xf78	; 0xf78 <strnlen>
     cf0:	4c 01       	movw	r8, r24
     cf2:	82 01       	movw	r16, r4
     cf4:	f3 2d       	mov	r31, r3
     cf6:	ff 77       	andi	r31, 0x7F	; 127
     cf8:	3f 2e       	mov	r3, r31
     cfa:	16 c0       	rjmp	.+44     	; 0xd28 <vfprintf+0x188>
     cfc:	28 01       	movw	r4, r16
     cfe:	22 e0       	ldi	r18, 0x02	; 2
     d00:	42 0e       	add	r4, r18
     d02:	51 1c       	adc	r5, r1
     d04:	f8 01       	movw	r30, r16
     d06:	a0 80       	ld	r10, Z
     d08:	b1 80       	ldd	r11, Z+1	; 0x01
     d0a:	36 fe       	sbrs	r3, 6
     d0c:	03 c0       	rjmp	.+6      	; 0xd14 <vfprintf+0x174>
     d0e:	69 2d       	mov	r22, r9
     d10:	70 e0       	ldi	r23, 0x00	; 0
     d12:	02 c0       	rjmp	.+4      	; 0xd18 <vfprintf+0x178>
     d14:	6f ef       	ldi	r22, 0xFF	; 255
     d16:	7f ef       	ldi	r23, 0xFF	; 255
     d18:	c5 01       	movw	r24, r10
     d1a:	0e 94 b1 07 	call	0xf62	; 0xf62 <strnlen_P>
     d1e:	4c 01       	movw	r8, r24
     d20:	f3 2d       	mov	r31, r3
     d22:	f0 68       	ori	r31, 0x80	; 128
     d24:	3f 2e       	mov	r3, r31
     d26:	82 01       	movw	r16, r4
     d28:	33 fc       	sbrc	r3, 3
     d2a:	1b c0       	rjmp	.+54     	; 0xd62 <vfprintf+0x1c2>
     d2c:	82 2d       	mov	r24, r2
     d2e:	90 e0       	ldi	r25, 0x00	; 0
     d30:	88 16       	cp	r8, r24
     d32:	99 06       	cpc	r9, r25
     d34:	b0 f4       	brcc	.+44     	; 0xd62 <vfprintf+0x1c2>
     d36:	b6 01       	movw	r22, r12
     d38:	80 e2       	ldi	r24, 0x20	; 32
     d3a:	90 e0       	ldi	r25, 0x00	; 0
     d3c:	0e 94 c7 07 	call	0xf8e	; 0xf8e <fputc>
     d40:	2a 94       	dec	r2
     d42:	f4 cf       	rjmp	.-24     	; 0xd2c <vfprintf+0x18c>
     d44:	f5 01       	movw	r30, r10
     d46:	37 fc       	sbrc	r3, 7
     d48:	85 91       	lpm	r24, Z+
     d4a:	37 fe       	sbrs	r3, 7
     d4c:	81 91       	ld	r24, Z+
     d4e:	5f 01       	movw	r10, r30
     d50:	b6 01       	movw	r22, r12
     d52:	90 e0       	ldi	r25, 0x00	; 0
     d54:	0e 94 c7 07 	call	0xf8e	; 0xf8e <fputc>
     d58:	21 10       	cpse	r2, r1
     d5a:	2a 94       	dec	r2
     d5c:	21 e0       	ldi	r18, 0x01	; 1
     d5e:	82 1a       	sub	r8, r18
     d60:	91 08       	sbc	r9, r1
     d62:	81 14       	cp	r8, r1
     d64:	91 04       	cpc	r9, r1
     d66:	71 f7       	brne	.-36     	; 0xd44 <vfprintf+0x1a4>
     d68:	e8 c0       	rjmp	.+464    	; 0xf3a <vfprintf+0x39a>
     d6a:	84 36       	cpi	r24, 0x64	; 100
     d6c:	11 f0       	breq	.+4      	; 0xd72 <vfprintf+0x1d2>
     d6e:	89 36       	cpi	r24, 0x69	; 105
     d70:	41 f5       	brne	.+80     	; 0xdc2 <vfprintf+0x222>
     d72:	f8 01       	movw	r30, r16
     d74:	37 fe       	sbrs	r3, 7
     d76:	07 c0       	rjmp	.+14     	; 0xd86 <vfprintf+0x1e6>
     d78:	60 81       	ld	r22, Z
     d7a:	71 81       	ldd	r23, Z+1	; 0x01
     d7c:	82 81       	ldd	r24, Z+2	; 0x02
     d7e:	93 81       	ldd	r25, Z+3	; 0x03
     d80:	0c 5f       	subi	r16, 0xFC	; 252
     d82:	1f 4f       	sbci	r17, 0xFF	; 255
     d84:	08 c0       	rjmp	.+16     	; 0xd96 <vfprintf+0x1f6>
     d86:	60 81       	ld	r22, Z
     d88:	71 81       	ldd	r23, Z+1	; 0x01
     d8a:	07 2e       	mov	r0, r23
     d8c:	00 0c       	add	r0, r0
     d8e:	88 0b       	sbc	r24, r24
     d90:	99 0b       	sbc	r25, r25
     d92:	0e 5f       	subi	r16, 0xFE	; 254
     d94:	1f 4f       	sbci	r17, 0xFF	; 255
     d96:	f3 2d       	mov	r31, r3
     d98:	ff 76       	andi	r31, 0x6F	; 111
     d9a:	3f 2e       	mov	r3, r31
     d9c:	97 ff       	sbrs	r25, 7
     d9e:	09 c0       	rjmp	.+18     	; 0xdb2 <vfprintf+0x212>
     da0:	90 95       	com	r25
     da2:	80 95       	com	r24
     da4:	70 95       	com	r23
     da6:	61 95       	neg	r22
     da8:	7f 4f       	sbci	r23, 0xFF	; 255
     daa:	8f 4f       	sbci	r24, 0xFF	; 255
     dac:	9f 4f       	sbci	r25, 0xFF	; 255
     dae:	f0 68       	ori	r31, 0x80	; 128
     db0:	3f 2e       	mov	r3, r31
     db2:	2a e0       	ldi	r18, 0x0A	; 10
     db4:	30 e0       	ldi	r19, 0x00	; 0
     db6:	a3 01       	movw	r20, r6
     db8:	0e 94 03 08 	call	0x1006	; 0x1006 <__ultoa_invert>
     dbc:	88 2e       	mov	r8, r24
     dbe:	86 18       	sub	r8, r6
     dc0:	45 c0       	rjmp	.+138    	; 0xe4c <vfprintf+0x2ac>
     dc2:	85 37       	cpi	r24, 0x75	; 117
     dc4:	31 f4       	brne	.+12     	; 0xdd2 <vfprintf+0x232>
     dc6:	23 2d       	mov	r18, r3
     dc8:	2f 7e       	andi	r18, 0xEF	; 239
     dca:	b2 2e       	mov	r11, r18
     dcc:	2a e0       	ldi	r18, 0x0A	; 10
     dce:	30 e0       	ldi	r19, 0x00	; 0
     dd0:	25 c0       	rjmp	.+74     	; 0xe1c <vfprintf+0x27c>
     dd2:	93 2d       	mov	r25, r3
     dd4:	99 7f       	andi	r25, 0xF9	; 249
     dd6:	b9 2e       	mov	r11, r25
     dd8:	8f 36       	cpi	r24, 0x6F	; 111
     dda:	c1 f0       	breq	.+48     	; 0xe0c <vfprintf+0x26c>
     ddc:	18 f4       	brcc	.+6      	; 0xde4 <vfprintf+0x244>
     dde:	88 35       	cpi	r24, 0x58	; 88
     de0:	79 f0       	breq	.+30     	; 0xe00 <vfprintf+0x260>
     de2:	b5 c0       	rjmp	.+362    	; 0xf4e <vfprintf+0x3ae>
     de4:	80 37       	cpi	r24, 0x70	; 112
     de6:	19 f0       	breq	.+6      	; 0xdee <vfprintf+0x24e>
     de8:	88 37       	cpi	r24, 0x78	; 120
     dea:	21 f0       	breq	.+8      	; 0xdf4 <vfprintf+0x254>
     dec:	b0 c0       	rjmp	.+352    	; 0xf4e <vfprintf+0x3ae>
     dee:	e9 2f       	mov	r30, r25
     df0:	e0 61       	ori	r30, 0x10	; 16
     df2:	be 2e       	mov	r11, r30
     df4:	b4 fe       	sbrs	r11, 4
     df6:	0d c0       	rjmp	.+26     	; 0xe12 <vfprintf+0x272>
     df8:	fb 2d       	mov	r31, r11
     dfa:	f4 60       	ori	r31, 0x04	; 4
     dfc:	bf 2e       	mov	r11, r31
     dfe:	09 c0       	rjmp	.+18     	; 0xe12 <vfprintf+0x272>
     e00:	34 fe       	sbrs	r3, 4
     e02:	0a c0       	rjmp	.+20     	; 0xe18 <vfprintf+0x278>
     e04:	29 2f       	mov	r18, r25
     e06:	26 60       	ori	r18, 0x06	; 6
     e08:	b2 2e       	mov	r11, r18
     e0a:	06 c0       	rjmp	.+12     	; 0xe18 <vfprintf+0x278>
     e0c:	28 e0       	ldi	r18, 0x08	; 8
     e0e:	30 e0       	ldi	r19, 0x00	; 0
     e10:	05 c0       	rjmp	.+10     	; 0xe1c <vfprintf+0x27c>
     e12:	20 e1       	ldi	r18, 0x10	; 16
     e14:	30 e0       	ldi	r19, 0x00	; 0
     e16:	02 c0       	rjmp	.+4      	; 0xe1c <vfprintf+0x27c>
     e18:	20 e1       	ldi	r18, 0x10	; 16
     e1a:	32 e0       	ldi	r19, 0x02	; 2
     e1c:	f8 01       	movw	r30, r16
     e1e:	b7 fe       	sbrs	r11, 7
     e20:	07 c0       	rjmp	.+14     	; 0xe30 <vfprintf+0x290>
     e22:	60 81       	ld	r22, Z
     e24:	71 81       	ldd	r23, Z+1	; 0x01
     e26:	82 81       	ldd	r24, Z+2	; 0x02
     e28:	93 81       	ldd	r25, Z+3	; 0x03
     e2a:	0c 5f       	subi	r16, 0xFC	; 252
     e2c:	1f 4f       	sbci	r17, 0xFF	; 255
     e2e:	06 c0       	rjmp	.+12     	; 0xe3c <vfprintf+0x29c>
     e30:	60 81       	ld	r22, Z
     e32:	71 81       	ldd	r23, Z+1	; 0x01
     e34:	80 e0       	ldi	r24, 0x00	; 0
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	0e 5f       	subi	r16, 0xFE	; 254
     e3a:	1f 4f       	sbci	r17, 0xFF	; 255
     e3c:	a3 01       	movw	r20, r6
     e3e:	0e 94 03 08 	call	0x1006	; 0x1006 <__ultoa_invert>
     e42:	88 2e       	mov	r8, r24
     e44:	86 18       	sub	r8, r6
     e46:	fb 2d       	mov	r31, r11
     e48:	ff 77       	andi	r31, 0x7F	; 127
     e4a:	3f 2e       	mov	r3, r31
     e4c:	36 fe       	sbrs	r3, 6
     e4e:	0d c0       	rjmp	.+26     	; 0xe6a <vfprintf+0x2ca>
     e50:	23 2d       	mov	r18, r3
     e52:	2e 7f       	andi	r18, 0xFE	; 254
     e54:	a2 2e       	mov	r10, r18
     e56:	89 14       	cp	r8, r9
     e58:	58 f4       	brcc	.+22     	; 0xe70 <vfprintf+0x2d0>
     e5a:	34 fe       	sbrs	r3, 4
     e5c:	0b c0       	rjmp	.+22     	; 0xe74 <vfprintf+0x2d4>
     e5e:	32 fc       	sbrc	r3, 2
     e60:	09 c0       	rjmp	.+18     	; 0xe74 <vfprintf+0x2d4>
     e62:	83 2d       	mov	r24, r3
     e64:	8e 7e       	andi	r24, 0xEE	; 238
     e66:	a8 2e       	mov	r10, r24
     e68:	05 c0       	rjmp	.+10     	; 0xe74 <vfprintf+0x2d4>
     e6a:	b8 2c       	mov	r11, r8
     e6c:	a3 2c       	mov	r10, r3
     e6e:	03 c0       	rjmp	.+6      	; 0xe76 <vfprintf+0x2d6>
     e70:	b8 2c       	mov	r11, r8
     e72:	01 c0       	rjmp	.+2      	; 0xe76 <vfprintf+0x2d6>
     e74:	b9 2c       	mov	r11, r9
     e76:	a4 fe       	sbrs	r10, 4
     e78:	0f c0       	rjmp	.+30     	; 0xe98 <vfprintf+0x2f8>
     e7a:	fe 01       	movw	r30, r28
     e7c:	e8 0d       	add	r30, r8
     e7e:	f1 1d       	adc	r31, r1
     e80:	80 81       	ld	r24, Z
     e82:	80 33       	cpi	r24, 0x30	; 48
     e84:	21 f4       	brne	.+8      	; 0xe8e <vfprintf+0x2ee>
     e86:	9a 2d       	mov	r25, r10
     e88:	99 7e       	andi	r25, 0xE9	; 233
     e8a:	a9 2e       	mov	r10, r25
     e8c:	09 c0       	rjmp	.+18     	; 0xea0 <vfprintf+0x300>
     e8e:	a2 fe       	sbrs	r10, 2
     e90:	06 c0       	rjmp	.+12     	; 0xe9e <vfprintf+0x2fe>
     e92:	b3 94       	inc	r11
     e94:	b3 94       	inc	r11
     e96:	04 c0       	rjmp	.+8      	; 0xea0 <vfprintf+0x300>
     e98:	8a 2d       	mov	r24, r10
     e9a:	86 78       	andi	r24, 0x86	; 134
     e9c:	09 f0       	breq	.+2      	; 0xea0 <vfprintf+0x300>
     e9e:	b3 94       	inc	r11
     ea0:	a3 fc       	sbrc	r10, 3
     ea2:	11 c0       	rjmp	.+34     	; 0xec6 <vfprintf+0x326>
     ea4:	a0 fe       	sbrs	r10, 0
     ea6:	06 c0       	rjmp	.+12     	; 0xeb4 <vfprintf+0x314>
     ea8:	b2 14       	cp	r11, r2
     eaa:	88 f4       	brcc	.+34     	; 0xece <vfprintf+0x32e>
     eac:	28 0c       	add	r2, r8
     eae:	92 2c       	mov	r9, r2
     eb0:	9b 18       	sub	r9, r11
     eb2:	0e c0       	rjmp	.+28     	; 0xed0 <vfprintf+0x330>
     eb4:	b2 14       	cp	r11, r2
     eb6:	60 f4       	brcc	.+24     	; 0xed0 <vfprintf+0x330>
     eb8:	b6 01       	movw	r22, r12
     eba:	80 e2       	ldi	r24, 0x20	; 32
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	0e 94 c7 07 	call	0xf8e	; 0xf8e <fputc>
     ec2:	b3 94       	inc	r11
     ec4:	f7 cf       	rjmp	.-18     	; 0xeb4 <vfprintf+0x314>
     ec6:	b2 14       	cp	r11, r2
     ec8:	18 f4       	brcc	.+6      	; 0xed0 <vfprintf+0x330>
     eca:	2b 18       	sub	r2, r11
     ecc:	02 c0       	rjmp	.+4      	; 0xed2 <vfprintf+0x332>
     ece:	98 2c       	mov	r9, r8
     ed0:	21 2c       	mov	r2, r1
     ed2:	a4 fe       	sbrs	r10, 4
     ed4:	10 c0       	rjmp	.+32     	; 0xef6 <vfprintf+0x356>
     ed6:	b6 01       	movw	r22, r12
     ed8:	80 e3       	ldi	r24, 0x30	; 48
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	0e 94 c7 07 	call	0xf8e	; 0xf8e <fputc>
     ee0:	a2 fe       	sbrs	r10, 2
     ee2:	17 c0       	rjmp	.+46     	; 0xf12 <vfprintf+0x372>
     ee4:	a1 fc       	sbrc	r10, 1
     ee6:	03 c0       	rjmp	.+6      	; 0xeee <vfprintf+0x34e>
     ee8:	88 e7       	ldi	r24, 0x78	; 120
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	02 c0       	rjmp	.+4      	; 0xef2 <vfprintf+0x352>
     eee:	88 e5       	ldi	r24, 0x58	; 88
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	b6 01       	movw	r22, r12
     ef4:	0c c0       	rjmp	.+24     	; 0xf0e <vfprintf+0x36e>
     ef6:	8a 2d       	mov	r24, r10
     ef8:	86 78       	andi	r24, 0x86	; 134
     efa:	59 f0       	breq	.+22     	; 0xf12 <vfprintf+0x372>
     efc:	a1 fe       	sbrs	r10, 1
     efe:	02 c0       	rjmp	.+4      	; 0xf04 <vfprintf+0x364>
     f00:	8b e2       	ldi	r24, 0x2B	; 43
     f02:	01 c0       	rjmp	.+2      	; 0xf06 <vfprintf+0x366>
     f04:	80 e2       	ldi	r24, 0x20	; 32
     f06:	a7 fc       	sbrc	r10, 7
     f08:	8d e2       	ldi	r24, 0x2D	; 45
     f0a:	b6 01       	movw	r22, r12
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	0e 94 c7 07 	call	0xf8e	; 0xf8e <fputc>
     f12:	89 14       	cp	r8, r9
     f14:	38 f4       	brcc	.+14     	; 0xf24 <vfprintf+0x384>
     f16:	b6 01       	movw	r22, r12
     f18:	80 e3       	ldi	r24, 0x30	; 48
     f1a:	90 e0       	ldi	r25, 0x00	; 0
     f1c:	0e 94 c7 07 	call	0xf8e	; 0xf8e <fputc>
     f20:	9a 94       	dec	r9
     f22:	f7 cf       	rjmp	.-18     	; 0xf12 <vfprintf+0x372>
     f24:	8a 94       	dec	r8
     f26:	f3 01       	movw	r30, r6
     f28:	e8 0d       	add	r30, r8
     f2a:	f1 1d       	adc	r31, r1
     f2c:	80 81       	ld	r24, Z
     f2e:	b6 01       	movw	r22, r12
     f30:	90 e0       	ldi	r25, 0x00	; 0
     f32:	0e 94 c7 07 	call	0xf8e	; 0xf8e <fputc>
     f36:	81 10       	cpse	r8, r1
     f38:	f5 cf       	rjmp	.-22     	; 0xf24 <vfprintf+0x384>
     f3a:	22 20       	and	r2, r2
     f3c:	09 f4       	brne	.+2      	; 0xf40 <vfprintf+0x3a0>
     f3e:	42 ce       	rjmp	.-892    	; 0xbc4 <vfprintf+0x24>
     f40:	b6 01       	movw	r22, r12
     f42:	80 e2       	ldi	r24, 0x20	; 32
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	0e 94 c7 07 	call	0xf8e	; 0xf8e <fputc>
     f4a:	2a 94       	dec	r2
     f4c:	f6 cf       	rjmp	.-20     	; 0xf3a <vfprintf+0x39a>
     f4e:	f6 01       	movw	r30, r12
     f50:	86 81       	ldd	r24, Z+6	; 0x06
     f52:	97 81       	ldd	r25, Z+7	; 0x07
     f54:	02 c0       	rjmp	.+4      	; 0xf5a <vfprintf+0x3ba>
     f56:	8f ef       	ldi	r24, 0xFF	; 255
     f58:	9f ef       	ldi	r25, 0xFF	; 255
     f5a:	2b 96       	adiw	r28, 0x0b	; 11
     f5c:	e2 e1       	ldi	r30, 0x12	; 18
     f5e:	0c 94 af 08 	jmp	0x115e	; 0x115e <__epilogue_restores__>

00000f62 <strnlen_P>:
     f62:	fc 01       	movw	r30, r24
     f64:	05 90       	lpm	r0, Z+
     f66:	61 50       	subi	r22, 0x01	; 1
     f68:	70 40       	sbci	r23, 0x00	; 0
     f6a:	01 10       	cpse	r0, r1
     f6c:	d8 f7       	brcc	.-10     	; 0xf64 <strnlen_P+0x2>
     f6e:	80 95       	com	r24
     f70:	90 95       	com	r25
     f72:	8e 0f       	add	r24, r30
     f74:	9f 1f       	adc	r25, r31
     f76:	08 95       	ret

00000f78 <strnlen>:
     f78:	fc 01       	movw	r30, r24
     f7a:	61 50       	subi	r22, 0x01	; 1
     f7c:	70 40       	sbci	r23, 0x00	; 0
     f7e:	01 90       	ld	r0, Z+
     f80:	01 10       	cpse	r0, r1
     f82:	d8 f7       	brcc	.-10     	; 0xf7a <strnlen+0x2>
     f84:	80 95       	com	r24
     f86:	90 95       	com	r25
     f88:	8e 0f       	add	r24, r30
     f8a:	9f 1f       	adc	r25, r31
     f8c:	08 95       	ret

00000f8e <fputc>:
     f8e:	0f 93       	push	r16
     f90:	1f 93       	push	r17
     f92:	cf 93       	push	r28
     f94:	df 93       	push	r29
     f96:	fb 01       	movw	r30, r22
     f98:	23 81       	ldd	r18, Z+3	; 0x03
     f9a:	21 fd       	sbrc	r18, 1
     f9c:	03 c0       	rjmp	.+6      	; 0xfa4 <fputc+0x16>
     f9e:	8f ef       	ldi	r24, 0xFF	; 255
     fa0:	9f ef       	ldi	r25, 0xFF	; 255
     fa2:	2c c0       	rjmp	.+88     	; 0xffc <fputc+0x6e>
     fa4:	22 ff       	sbrs	r18, 2
     fa6:	16 c0       	rjmp	.+44     	; 0xfd4 <fputc+0x46>
     fa8:	46 81       	ldd	r20, Z+6	; 0x06
     faa:	57 81       	ldd	r21, Z+7	; 0x07
     fac:	24 81       	ldd	r18, Z+4	; 0x04
     fae:	35 81       	ldd	r19, Z+5	; 0x05
     fb0:	42 17       	cp	r20, r18
     fb2:	53 07       	cpc	r21, r19
     fb4:	44 f4       	brge	.+16     	; 0xfc6 <fputc+0x38>
     fb6:	a0 81       	ld	r26, Z
     fb8:	b1 81       	ldd	r27, Z+1	; 0x01
     fba:	9d 01       	movw	r18, r26
     fbc:	2f 5f       	subi	r18, 0xFF	; 255
     fbe:	3f 4f       	sbci	r19, 0xFF	; 255
     fc0:	31 83       	std	Z+1, r19	; 0x01
     fc2:	20 83       	st	Z, r18
     fc4:	8c 93       	st	X, r24
     fc6:	26 81       	ldd	r18, Z+6	; 0x06
     fc8:	37 81       	ldd	r19, Z+7	; 0x07
     fca:	2f 5f       	subi	r18, 0xFF	; 255
     fcc:	3f 4f       	sbci	r19, 0xFF	; 255
     fce:	37 83       	std	Z+7, r19	; 0x07
     fd0:	26 83       	std	Z+6, r18	; 0x06
     fd2:	14 c0       	rjmp	.+40     	; 0xffc <fputc+0x6e>
     fd4:	8b 01       	movw	r16, r22
     fd6:	ec 01       	movw	r28, r24
     fd8:	fb 01       	movw	r30, r22
     fda:	00 84       	ldd	r0, Z+8	; 0x08
     fdc:	f1 85       	ldd	r31, Z+9	; 0x09
     fde:	e0 2d       	mov	r30, r0
     fe0:	09 95       	icall
     fe2:	89 2b       	or	r24, r25
     fe4:	e1 f6       	brne	.-72     	; 0xf9e <fputc+0x10>
     fe6:	d8 01       	movw	r26, r16
     fe8:	16 96       	adiw	r26, 0x06	; 6
     fea:	8d 91       	ld	r24, X+
     fec:	9c 91       	ld	r25, X
     fee:	17 97       	sbiw	r26, 0x07	; 7
     ff0:	01 96       	adiw	r24, 0x01	; 1
     ff2:	17 96       	adiw	r26, 0x07	; 7
     ff4:	9c 93       	st	X, r25
     ff6:	8e 93       	st	-X, r24
     ff8:	16 97       	sbiw	r26, 0x06	; 6
     ffa:	ce 01       	movw	r24, r28
     ffc:	df 91       	pop	r29
     ffe:	cf 91       	pop	r28
    1000:	1f 91       	pop	r17
    1002:	0f 91       	pop	r16
    1004:	08 95       	ret

00001006 <__ultoa_invert>:
    1006:	fa 01       	movw	r30, r20
    1008:	aa 27       	eor	r26, r26
    100a:	28 30       	cpi	r18, 0x08	; 8
    100c:	51 f1       	breq	.+84     	; 0x1062 <__ultoa_invert+0x5c>
    100e:	20 31       	cpi	r18, 0x10	; 16
    1010:	81 f1       	breq	.+96     	; 0x1072 <__ultoa_invert+0x6c>
    1012:	e8 94       	clt
    1014:	6f 93       	push	r22
    1016:	6e 7f       	andi	r22, 0xFE	; 254
    1018:	6e 5f       	subi	r22, 0xFE	; 254
    101a:	7f 4f       	sbci	r23, 0xFF	; 255
    101c:	8f 4f       	sbci	r24, 0xFF	; 255
    101e:	9f 4f       	sbci	r25, 0xFF	; 255
    1020:	af 4f       	sbci	r26, 0xFF	; 255
    1022:	b1 e0       	ldi	r27, 0x01	; 1
    1024:	3e d0       	rcall	.+124    	; 0x10a2 <__ultoa_invert+0x9c>
    1026:	b4 e0       	ldi	r27, 0x04	; 4
    1028:	3c d0       	rcall	.+120    	; 0x10a2 <__ultoa_invert+0x9c>
    102a:	67 0f       	add	r22, r23
    102c:	78 1f       	adc	r23, r24
    102e:	89 1f       	adc	r24, r25
    1030:	9a 1f       	adc	r25, r26
    1032:	a1 1d       	adc	r26, r1
    1034:	68 0f       	add	r22, r24
    1036:	79 1f       	adc	r23, r25
    1038:	8a 1f       	adc	r24, r26
    103a:	91 1d       	adc	r25, r1
    103c:	a1 1d       	adc	r26, r1
    103e:	6a 0f       	add	r22, r26
    1040:	71 1d       	adc	r23, r1
    1042:	81 1d       	adc	r24, r1
    1044:	91 1d       	adc	r25, r1
    1046:	a1 1d       	adc	r26, r1
    1048:	20 d0       	rcall	.+64     	; 0x108a <__ultoa_invert+0x84>
    104a:	09 f4       	brne	.+2      	; 0x104e <__ultoa_invert+0x48>
    104c:	68 94       	set
    104e:	3f 91       	pop	r19
    1050:	2a e0       	ldi	r18, 0x0A	; 10
    1052:	26 9f       	mul	r18, r22
    1054:	11 24       	eor	r1, r1
    1056:	30 19       	sub	r19, r0
    1058:	30 5d       	subi	r19, 0xD0	; 208
    105a:	31 93       	st	Z+, r19
    105c:	de f6       	brtc	.-74     	; 0x1014 <__ultoa_invert+0xe>
    105e:	cf 01       	movw	r24, r30
    1060:	08 95       	ret
    1062:	46 2f       	mov	r20, r22
    1064:	47 70       	andi	r20, 0x07	; 7
    1066:	40 5d       	subi	r20, 0xD0	; 208
    1068:	41 93       	st	Z+, r20
    106a:	b3 e0       	ldi	r27, 0x03	; 3
    106c:	0f d0       	rcall	.+30     	; 0x108c <__ultoa_invert+0x86>
    106e:	c9 f7       	brne	.-14     	; 0x1062 <__ultoa_invert+0x5c>
    1070:	f6 cf       	rjmp	.-20     	; 0x105e <__ultoa_invert+0x58>
    1072:	46 2f       	mov	r20, r22
    1074:	4f 70       	andi	r20, 0x0F	; 15
    1076:	40 5d       	subi	r20, 0xD0	; 208
    1078:	4a 33       	cpi	r20, 0x3A	; 58
    107a:	18 f0       	brcs	.+6      	; 0x1082 <__ultoa_invert+0x7c>
    107c:	49 5d       	subi	r20, 0xD9	; 217
    107e:	31 fd       	sbrc	r19, 1
    1080:	40 52       	subi	r20, 0x20	; 32
    1082:	41 93       	st	Z+, r20
    1084:	02 d0       	rcall	.+4      	; 0x108a <__ultoa_invert+0x84>
    1086:	a9 f7       	brne	.-22     	; 0x1072 <__ultoa_invert+0x6c>
    1088:	ea cf       	rjmp	.-44     	; 0x105e <__ultoa_invert+0x58>
    108a:	b4 e0       	ldi	r27, 0x04	; 4
    108c:	a6 95       	lsr	r26
    108e:	97 95       	ror	r25
    1090:	87 95       	ror	r24
    1092:	77 95       	ror	r23
    1094:	67 95       	ror	r22
    1096:	ba 95       	dec	r27
    1098:	c9 f7       	brne	.-14     	; 0x108c <__ultoa_invert+0x86>
    109a:	00 97       	sbiw	r24, 0x00	; 0
    109c:	61 05       	cpc	r22, r1
    109e:	71 05       	cpc	r23, r1
    10a0:	08 95       	ret
    10a2:	9b 01       	movw	r18, r22
    10a4:	ac 01       	movw	r20, r24
    10a6:	0a 2e       	mov	r0, r26
    10a8:	06 94       	lsr	r0
    10aa:	57 95       	ror	r21
    10ac:	47 95       	ror	r20
    10ae:	37 95       	ror	r19
    10b0:	27 95       	ror	r18
    10b2:	ba 95       	dec	r27
    10b4:	c9 f7       	brne	.-14     	; 0x10a8 <__ultoa_invert+0xa2>
    10b6:	62 0f       	add	r22, r18
    10b8:	73 1f       	adc	r23, r19
    10ba:	84 1f       	adc	r24, r20
    10bc:	95 1f       	adc	r25, r21
    10be:	a0 1d       	adc	r26, r0
    10c0:	08 95       	ret

000010c2 <__divmodsi4>:
    10c2:	05 2e       	mov	r0, r21
    10c4:	97 fb       	bst	r25, 7
    10c6:	1e f4       	brtc	.+6      	; 0x10ce <__divmodsi4+0xc>
    10c8:	00 94       	com	r0
    10ca:	0e 94 78 08 	call	0x10f0	; 0x10f0 <__negsi2>
    10ce:	57 fd       	sbrc	r21, 7
    10d0:	07 d0       	rcall	.+14     	; 0x10e0 <__divmodsi4_neg2>
    10d2:	0e 94 ca 08 	call	0x1194	; 0x1194 <__udivmodsi4>
    10d6:	07 fc       	sbrc	r0, 7
    10d8:	03 d0       	rcall	.+6      	; 0x10e0 <__divmodsi4_neg2>
    10da:	4e f4       	brtc	.+18     	; 0x10ee <__divmodsi4_exit>
    10dc:	0c 94 78 08 	jmp	0x10f0	; 0x10f0 <__negsi2>

000010e0 <__divmodsi4_neg2>:
    10e0:	50 95       	com	r21
    10e2:	40 95       	com	r20
    10e4:	30 95       	com	r19
    10e6:	21 95       	neg	r18
    10e8:	3f 4f       	sbci	r19, 0xFF	; 255
    10ea:	4f 4f       	sbci	r20, 0xFF	; 255
    10ec:	5f 4f       	sbci	r21, 0xFF	; 255

000010ee <__divmodsi4_exit>:
    10ee:	08 95       	ret

000010f0 <__negsi2>:
    10f0:	90 95       	com	r25
    10f2:	80 95       	com	r24
    10f4:	70 95       	com	r23
    10f6:	61 95       	neg	r22
    10f8:	7f 4f       	sbci	r23, 0xFF	; 255
    10fa:	8f 4f       	sbci	r24, 0xFF	; 255
    10fc:	9f 4f       	sbci	r25, 0xFF	; 255
    10fe:	08 95       	ret

00001100 <__muluhisi3>:
    1100:	0e 94 ec 08 	call	0x11d8	; 0x11d8 <__umulhisi3>
    1104:	a5 9f       	mul	r26, r21
    1106:	90 0d       	add	r25, r0
    1108:	b4 9f       	mul	r27, r20
    110a:	90 0d       	add	r25, r0
    110c:	a4 9f       	mul	r26, r20
    110e:	80 0d       	add	r24, r0
    1110:	91 1d       	adc	r25, r1
    1112:	11 24       	eor	r1, r1
    1114:	08 95       	ret

00001116 <__mulshisi3>:
    1116:	b7 ff       	sbrs	r27, 7
    1118:	0c 94 80 08 	jmp	0x1100	; 0x1100 <__muluhisi3>

0000111c <__mulohisi3>:
    111c:	0e 94 80 08 	call	0x1100	; 0x1100 <__muluhisi3>
    1120:	82 1b       	sub	r24, r18
    1122:	93 0b       	sbc	r25, r19
    1124:	08 95       	ret

00001126 <__prologue_saves__>:
    1126:	2f 92       	push	r2
    1128:	3f 92       	push	r3
    112a:	4f 92       	push	r4
    112c:	5f 92       	push	r5
    112e:	6f 92       	push	r6
    1130:	7f 92       	push	r7
    1132:	8f 92       	push	r8
    1134:	9f 92       	push	r9
    1136:	af 92       	push	r10
    1138:	bf 92       	push	r11
    113a:	cf 92       	push	r12
    113c:	df 92       	push	r13
    113e:	ef 92       	push	r14
    1140:	ff 92       	push	r15
    1142:	0f 93       	push	r16
    1144:	1f 93       	push	r17
    1146:	cf 93       	push	r28
    1148:	df 93       	push	r29
    114a:	cd b7       	in	r28, 0x3d	; 61
    114c:	de b7       	in	r29, 0x3e	; 62
    114e:	ca 1b       	sub	r28, r26
    1150:	db 0b       	sbc	r29, r27
    1152:	0f b6       	in	r0, 0x3f	; 63
    1154:	f8 94       	cli
    1156:	de bf       	out	0x3e, r29	; 62
    1158:	0f be       	out	0x3f, r0	; 63
    115a:	cd bf       	out	0x3d, r28	; 61
    115c:	09 94       	ijmp

0000115e <__epilogue_restores__>:
    115e:	2a 88       	ldd	r2, Y+18	; 0x12
    1160:	39 88       	ldd	r3, Y+17	; 0x11
    1162:	48 88       	ldd	r4, Y+16	; 0x10
    1164:	5f 84       	ldd	r5, Y+15	; 0x0f
    1166:	6e 84       	ldd	r6, Y+14	; 0x0e
    1168:	7d 84       	ldd	r7, Y+13	; 0x0d
    116a:	8c 84       	ldd	r8, Y+12	; 0x0c
    116c:	9b 84       	ldd	r9, Y+11	; 0x0b
    116e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1170:	b9 84       	ldd	r11, Y+9	; 0x09
    1172:	c8 84       	ldd	r12, Y+8	; 0x08
    1174:	df 80       	ldd	r13, Y+7	; 0x07
    1176:	ee 80       	ldd	r14, Y+6	; 0x06
    1178:	fd 80       	ldd	r15, Y+5	; 0x05
    117a:	0c 81       	ldd	r16, Y+4	; 0x04
    117c:	1b 81       	ldd	r17, Y+3	; 0x03
    117e:	aa 81       	ldd	r26, Y+2	; 0x02
    1180:	b9 81       	ldd	r27, Y+1	; 0x01
    1182:	ce 0f       	add	r28, r30
    1184:	d1 1d       	adc	r29, r1
    1186:	0f b6       	in	r0, 0x3f	; 63
    1188:	f8 94       	cli
    118a:	de bf       	out	0x3e, r29	; 62
    118c:	0f be       	out	0x3f, r0	; 63
    118e:	cd bf       	out	0x3d, r28	; 61
    1190:	ed 01       	movw	r28, r26
    1192:	08 95       	ret

00001194 <__udivmodsi4>:
    1194:	a1 e2       	ldi	r26, 0x21	; 33
    1196:	1a 2e       	mov	r1, r26
    1198:	aa 1b       	sub	r26, r26
    119a:	bb 1b       	sub	r27, r27
    119c:	fd 01       	movw	r30, r26
    119e:	0d c0       	rjmp	.+26     	; 0x11ba <__udivmodsi4_ep>

000011a0 <__udivmodsi4_loop>:
    11a0:	aa 1f       	adc	r26, r26
    11a2:	bb 1f       	adc	r27, r27
    11a4:	ee 1f       	adc	r30, r30
    11a6:	ff 1f       	adc	r31, r31
    11a8:	a2 17       	cp	r26, r18
    11aa:	b3 07       	cpc	r27, r19
    11ac:	e4 07       	cpc	r30, r20
    11ae:	f5 07       	cpc	r31, r21
    11b0:	20 f0       	brcs	.+8      	; 0x11ba <__udivmodsi4_ep>
    11b2:	a2 1b       	sub	r26, r18
    11b4:	b3 0b       	sbc	r27, r19
    11b6:	e4 0b       	sbc	r30, r20
    11b8:	f5 0b       	sbc	r31, r21

000011ba <__udivmodsi4_ep>:
    11ba:	66 1f       	adc	r22, r22
    11bc:	77 1f       	adc	r23, r23
    11be:	88 1f       	adc	r24, r24
    11c0:	99 1f       	adc	r25, r25
    11c2:	1a 94       	dec	r1
    11c4:	69 f7       	brne	.-38     	; 0x11a0 <__udivmodsi4_loop>
    11c6:	60 95       	com	r22
    11c8:	70 95       	com	r23
    11ca:	80 95       	com	r24
    11cc:	90 95       	com	r25
    11ce:	9b 01       	movw	r18, r22
    11d0:	ac 01       	movw	r20, r24
    11d2:	bd 01       	movw	r22, r26
    11d4:	cf 01       	movw	r24, r30
    11d6:	08 95       	ret

000011d8 <__umulhisi3>:
    11d8:	a2 9f       	mul	r26, r18
    11da:	b0 01       	movw	r22, r0
    11dc:	b3 9f       	mul	r27, r19
    11de:	c0 01       	movw	r24, r0
    11e0:	a3 9f       	mul	r26, r19
    11e2:	70 0d       	add	r23, r0
    11e4:	81 1d       	adc	r24, r1
    11e6:	11 24       	eor	r1, r1
    11e8:	91 1d       	adc	r25, r1
    11ea:	b2 9f       	mul	r27, r18
    11ec:	70 0d       	add	r23, r0
    11ee:	81 1d       	adc	r24, r1
    11f0:	11 24       	eor	r1, r1
    11f2:	91 1d       	adc	r25, r1
    11f4:	08 95       	ret

000011f6 <_exit>:
    11f6:	f8 94       	cli

000011f8 <__stop_program>:
    11f8:	ff cf       	rjmp	.-2      	; 0x11f8 <__stop_program>
